{"version":3,"sources":["components/NavBar/Sections/WebNavBar.js","components/NavBar/Sections/MobileNavBar.js","components/NavBar/NavBar.js","components/AuthPage/LoginPage.js","components/AuthPage/SignupPage.js","components/AuthPage/FindPwPage.js","components/MyPage/Sections/MenuBar.js","components/MyPage/MyPage.js","components/MyPage/Sections/SomeTimeline.js","components/MyPage/MyTimeline.js","components/CreateTimeline/Sections/TimelineDetail.js","components/CreateTimeline/Sections/UploadImage.js","components/CreateTimeline/Sections/TimelineMaster.js","components/CreateTimeline/Sections/TimelineView.js","components/CreateTimeline/CreateTimeline.js","components/ManageTimeline/TimelineList.js","components/ManageTimeline/Sections/ModifyTimeline.js","components/ManageTimeline/TimelineItem.js","components/TimelineSearch/Sections/SearchWord.js","components/TimelineSearch/Sections/SearchButton.js","components/TimelineSearch/Sections/AllTimeline.js","components/TimelineSearch/TimelineSearch.js","components/MyPage/MyInfo.js","components/Main/Sections/ViewsTop.js","components/Main/Sections/LikesTop.js","components/Main/Main.js","components/Detail/Sections/TopMaster.js","components/Detail/Sections/MiddleDetail.js","components/Detail/Sections/BottomComment.js","components/Detail/Sections/SideScroll.js","components/Detail/Sections/LikeToggle.js","components/Detail/Detail.js","_actions/types.js","_actions/user_actions.js","hoc/auth.js","App.js","reportWebVitals.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["Logo","styled","div","MenuList","WebNavBar","props","to","selectedKeys","mode","Item","auth","onClick","onLogout","LogoM","MobileNavBar","useState","toggleMenu","setToggleMenu","toggleBar","setToggleBar","type","style","marginBottom","MenuOutlined","MenuFoldOutlined","defaultSelectedKeys","theme","inlineCollapsed","NavBar","useCookies","cookies","removeCookie","setAuth","history","useHistory","useEffect","undefined","tl_token","tl_e","Axios","get","then","res","window","location","reload","push","catch","err","LoginDiv","LoginPage","email","setEmail","password","setPassword","errorMessage","setErrorMessage","setCookie","onLogin","variables","post","data","accessToken","accessTokenExpiresIn","refreshToken","onKeyPress","e","key","label","name","rules","required","value","onChange","target","Password","color","fontSize","border","padding","borderRadius","size","SignupDiv","SignupPage","nickname","setNickname","password1","setPassword1","password2","setPassword2","checkDuplicate","setCheckDuplicate","onSignup","response","alert","filter","item","length","min","max","message","FindPwDiv","FindPwPage","variable","MenuDiv","MenuBar","user","useSelector","state","userData","lg","sm","xs","shape","InfoCircleOutlined","FieldTimeOutlined","FundProjectionScreenOutlined","QuestionCircleOutlined","MyPage","SomeTimeline","title","bordered","extra","PlusOutlined","itemLayout","list","map","i","Meta","category","complete","open","viewCount","toString","likeCount","createdDate","substring","TimelineDiv","MyTimeline","allList","setAllList","setList","latestData","slice","gutter","span","DetailDiv","TextArea","Input","TimelineDetail","countList","onDeleteDetail","CloseSquareOutlined","detailTitle","onChangeDetailTitle","detailDateString","moment","date","dateString","onChangeDate","autoSize","minRows","maxRows","detailContent","onchangeDetailContent","UploadImageDiv","UploadImage","onDrop","multiple","maxSize","getRootProps","getInputProps","Option","Select","TimelineMaster","onChangeTitle","defaultValue","onSelectCategory","onSelectComplete","onSelectOpen","files","path","CloseOutlined","onDeleteFile","TimelineViewDiv","TimelineView","lineColor","dateText","height","bodyContainerStyle","background","CreateTimelineDiv","CreateDetailDiv","CreateTimeline","setTitle","setCountList","setDetailTitle","detailDate","setDetailDate","setDetailDateString","setDetailContent","setCategory","setComplete","setOpen","setFiles","onCreateTimeline","formData","FormData","append","author","Blob","JSON","stringify","detailList","valid","forEach","id","replaceAll","status","onSubmit","newCountArr","arr","titleArr","splice","onDeleteDetailTitle","dateArr","datestringArr","onDeleteDetailDate","contentArr","onDeleteDetailContent","detailTitleArr","detailDateArr","detailDatestringArr","includes","detailContentArr","countArr","counter","PlusCircleOutlined","TimelineListDiv","TimelineList","checkDelete","setCheckDelete","columns","dataIndex","render","imgFullPath","src","DeleteOutlined","onDeleteTimeline","stopPropagation","delete","dataSource","rowKey","pagination","onRow","record","rowIndex","ModifyTimelineDiv","ModifyDetailDiv","ModifyTimeline","filepath","setFilepath","deleteStatus","setDeleteStatus","timeline","detail","filePath","split","scheduleDate","content","onModifyTimeline","put","timelineId","TimelineItemDiv","TimelineItem","setTimeline","setDetail","params","useParams","SearchWordDiv","SearchWord","SearchOutlined","SearchButtonDiv","SearchButton","checkStatus","setCheckStatus","slidesPerView","navigation","className","console","log","CheckOutlined","AllTimeline","showSizeChanger","total","defaultCurrent","pageSize","TimelineSearchDiv","TimelineSearch","setData","InfoDiv","MyInfo","existingPw","setExistingPw","checkValid","disabled","ViewsTopDiv","SwiperCore","use","Pagination","Navigation","Card","ViewsTop","centeredSlides","spaceBetween","nextEl","prevEl","viewsList","width","cover","alt","EyeOutlined","LikeOutlined","LikesTopDiv","LikesTop","likesList","MainDiv","Main","setViewsList","setLikesList","TopMasterDiv","TopMaster","masterData","MiddleDetailDiv","MiddleDetail","BottomCommentDiv","BottomComment","comment","hideInput","onChangeStar","onChangeCommentContent","onSaveComment","actions","onModify","star","onDelete","masterId","modifyStatus","modifyIndex","commentContent","datetime","format","SideScrollDiv","SideScroll","spy","smooth","LikeToggleDiv","LikeToggle","onToggleLike","toggle","LikeFilled","MiddleDiv","Detail","setMasterData","setContent","setId","loginStatus","setLoginStatus","setComment","setToggle","setLikeCount","setStar","setCommentContent","setModifyStatus","setHideInput","setModifyIndex","param","idArr","refineDate","Object","keys","userRes","memberId","parseInt","stars","contents","AUTH_USER","request","payload","authHoc","SpecificComponent","option","AuthenticationCheck","dispatch","useDispatch","removeCookies","tl_re","tl_exp","Date","expTime","tokens","over3h","getTime","defaults","headers","common","App","fallback","exact","component","Auth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","promiseMiddleware","ReduxThunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","locale","koKR","document","getElementById"],"mappings":"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","file":"static/js/main.fd4f8d57.chunk.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { Menu, Button } from \"antd\"\nimport { Link } from \"react-router-dom\"\n\nconst Logo =  styled.div`\n  font-weight: bold;\n  font-size: 3.5vh;\n  padding: 1rem;\n  span {\n    color: #f0f0f0;\n  }\n  a {\n    color: black !important;\n  }\n  + div {\n    border-bottom: 1px solid #f0f0f0;\n  }\n`\n\nconst MenuList = styled.div`\n  display: flex;\n  justify-content: space-between;\n  .ant-menu-overflow-item.ant-menu-item {\n    position: relative !important;\n  }\n`\n\n\nconst WebNavBar = (props) => {\n  return (\n    <>\n      <Logo>\n        <Link to=\"/\">\n          TI<span>MELI</span>NE\n        </Link>\n      </Logo>\n      <MenuList>\n        <Menu selectedKeys=\"mail\" mode=\"horizontal\">\n          <Menu.Item key=\"timeline\">\n            <Link to=\"/search/timeline\">\n              타임라인\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"class\">\n            클래스\n          </Menu.Item>\n        </Menu>\n        <Menu mode=\"horizontal\">\n          <Menu.Item key=\"mypage\">\n            <Link to=\"/mypage\">\n              마이페이지\n            </Link>\n          </Menu.Item>\n          { props.auth ?\n          <>\n            <Menu.Item key=\"logout\" onClick={props.onLogout}>\n              로그아웃\n            </Menu.Item>\n          </>\n          :\n          <>\n            <Menu.Item key=\"login\">\n              <Link to=\"/login\">\n                로그인\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"signup\">\n              <Link to=\"/signup\">\n                회원가입\n              </Link>\n            </Menu.Item>\n          </>\n          }\n        </Menu>\n      </MenuList>\n    </>\n  )\n}\n\nexport default WebNavBar\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { Menu, Button } from \"antd\"\nimport { Link } from \"react-router-dom\"\nimport { MenuOutlined, MenuFoldOutlined } from \"@ant-design/icons\"\n\nconst LogoM = styled.div`\n  font-weight: bold;\n  font-size: 3.5vh;\n  padding: 1rem;\n  display: flex;\n  justify-content: space-between;\n  span {\n    color: #f0f0f0;\n  }\n  a {\n    color: black !important;\n  }\n\n  Button {\n    background: black !important;\n    border: none;\n  }\n`\n\nconst MobileNavBar = (props) => {\n  const [toggleMenu, setToggleMenu] = useState(false)\n  const [toggleBar, setToggleBar] = useState(true)\n\n  const toggleChange = () => {\n    setToggleMenu(!toggleMenu)\n    setToggleBar(!toggleBar)\n  }\n\n  const onMenuClick = () => {\n    setToggleMenu(!toggleMenu)\n    setToggleBar(!toggleBar)\n  }\n\n  return (\n    <>\n      <LogoM>\n        <Link to=\"/\">\n          TI<span>MELI</span>NE\n        </Link>\n        <div >\n          <Button type=\"primary\" onClick={toggleChange} style={{ marginBottom: 16 }}>\n            { toggleBar ? <MenuOutlined /> : <MenuFoldOutlined /> }\n          </Button>\n        </div>\n      </LogoM>\n      { toggleMenu ?\n        <Menu\n          defaultSelectedKeys={['1']}\n          mode=\"inline\"\n          theme=\"light\"\n          inlineCollapsed={toggleBar}\n          onClick={onMenuClick}\n        >\n          <Menu.Item key=\"timeline\">\n            <Link to=\"/search/timeline\">\n              타임라인\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"class\">\n            클래스\n          </Menu.Item>\n          <Menu.Item key=\"mypage\">\n            <Link to=\"/mypage\">\n              마이페이지\n            </Link>\n          </Menu.Item>\n          { props.auth ?\n            <>\n              <Menu.Item key=\"logout\" onClick={props.onLogout}>\n                로그아웃\n              </Menu.Item>\n            </>\n            :\n            <>\n              <Menu.Item key=\"login\">\n                <Link to=\"/login\">\n                  로그인\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"signup\">\n                <Link to=\"/signup\">\n                  회원가입\n                </Link>\n              </Menu.Item>\n            </>\n          }\n        </Menu>\n        : <></>\n      }\n    </>\n  )\n}\n\nexport default MobileNavBar\n","import React, { useState, useEffect } from \"react\"\nimport { BrowserView, MobileView } from \"react-device-detect\"\nimport { useSelector } from \"react-redux\"\nimport { useCookies } from \"react-cookie\"\nimport Axios from \"axios\"\nimport WebNavBar from \"./Sections/WebNavBar\"\nimport MobileNavBar from \"./Sections/MobileNavBar\"\nimport { useHistory } from \"react-router-dom\"\n\nconst NavBar = (props) => {\n  const [cookies, setCookie, removeCookie] = useCookies([])\n  const [auth, setAuth] = useState(false)\n\n  const history = useHistory()\n\n  useEffect(() => {\n    if(cookies.tl_token !== undefined) {\n      setAuth(true)\n    }\n  }, [cookies])\n\n  const onLogout = () => {\n    if(auth && cookies.tl_e) {\n      Axios.get(`/auth/logout/${cookies.tl_e}`)\n        .then(res => {\n          removeCookie(\"tl_e\")\n          removeCookie(\"tl_re\")\n          removeCookie(\"tl_exp\")\n          removeCookie(\"tl_token\")\n          setAuth(false)\n          window.location.reload()\n          history.push(\"/login\")\n        })\n        .catch(err => {\n          removeCookie(\"tl_e\")\n          removeCookie(\"tl_re\")\n          removeCookie(\"tl_exp\")\n          removeCookie(\"tl_token\")\n          setAuth(false)\n          window.location.reload()\n          history.push(\"/\")\n        })\n    }\n  }\n\n  return(\n    <div>\n      <BrowserView>\n        <WebNavBar auth={auth} onLogout={onLogout} />\n      </BrowserView>\n      <MobileView>\n        <MobileNavBar auth={auth} onLogout={onLogout} />\n      </MobileView>\n    </div>\n  )\n}\n\nexport default NavBar;\n","import React, { useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport styled from \"styled-components\"\nimport { useHistory } from \"react-router-dom\"\nimport { useCookies } from \"react-cookie\"\nimport Axios from \"axios\"\nimport { Link } from \"react-router-dom\"\n\nconst LoginDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    // 비밀번호 찾기 영역\n    .ant-form-item:nth-child(2) {\n      margin-bottom: 0;\n      & + .ant-form-item .ant-col {\n        text-align: right;\n        #search {\n          color: lightgray !important;\n        }\n      }\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    .ant-input-password {\n      height: 32px;\n      input {\n        height: 100%;\n      }\n    }\n    button {\n      width: 100%;\n      background: black;\n      color: #ffffff;\n      margin-top: 1rem;\n    }\n  }\n`;\n\nconst LoginPage = () => {\n\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [errorMessage, setErrorMessage] = useState(\"\")\n  const [cookies, setCookie] = useCookies(\"\")\n\n  const history = useHistory()\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value)\n  }\n\n  const onChangePwd = (e) => {\n    setPassword(e.target.value)\n  }\n\n  const onCheckEnter = (e) => {\n    if(e.key === \"Enter\") {\n      onLogin()\n    }\n  }\n\n  const onLogin = () => {\n\n    var variables = {\n      \"email\": email,\n      \"password\": password\n    }\n\n    Axios.post(\"/auth/login\", variables)\n      .then(res => {\n        setCookie(\"tl_token\", res.data.accessToken)\n        setCookie(\"tl_exp\", res.data.accessTokenExpiresIn)\n        setCookie(\"tl_e\", email)\n        setCookie(\"tl_re\", res.data.refreshToken)\n        history.push(\"/mypage\")\n        window.location.reload()\n      })\n      .catch(err => {\n        setErrorMessage(\"이메일이나 비밀번호를 다시 확인해 주세요\")\n      })\n  }\n\n  return (\n    <LoginDiv>\n      <h1>로그인</h1>\n      <br />\n      <Form onKeyPress={onCheckEnter}>\n        <Form.Item\n          label=\"이메일 주소:\"\n          name=\"email\"\n          rules={[{ required: true }]}\n        >\n          <Input value={email} onChange={onChangeEmail} />\n        </Form.Item>\n        <Form.Item\n          label=\"비밀번호:\"\n          name=\"password\"\n          rules={[{ required: true }]}\n        >\n          <Input.Password value={password} onChange={onChangePwd} />\n        </Form.Item>\n        <Form.Item name=\"search\">\n          <Link to=\"/findpw\">\n            비밀번호 찾기\n          </Link>\n        </Form.Item>\n        {errorMessage && (\n          <label><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{errorMessage}</p></label>\n        )}\n        <Form.Item>\n          <Button size=\"large\" onClick={onLogin}>\n            로그인\n          </Button>\n        </Form.Item>\n      </Form>\n    </LoginDiv>\n  )\n}\n\nexport default LoginPage;\n","import React, { useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport styled from \"styled-components\"\nimport Axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\n\nconst SignupDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    // 닉네임 영역\n    #nickname {\n      display: flex;\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    .ant-input-password {\n      height: 32px;\n      input {\n        height: 100%;\n      }\n    }\n    .ant-form-item:last-child {\n      button {\n        width: 100%;\n        background: black;\n        color: #ffffff;\n        margin-top: 1rem;\n      }\n    }\n  }\n`;\n\nconst SignupPage = () => {\n  const [email, setEmail] = useState(\"\")\n  const [nickname, setNickname] = useState(\"\")\n  const [password1, setPassword1] = useState(\"\")\n  const [password2, setPassword2] = useState(\"\")\n  const [checkDuplicate, setCheckDuplicate] = useState(false)\n\n  const history = useHistory()\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value)\n  }\n\n  const onChangeNickname = (e) => {\n    setNickname(e.target.value)\n    setCheckDuplicate(false)\n  }\n\n  const onChangePwd1 = (e) => {\n    setPassword1(e.target.value)\n  }\n\n  const onChangePwd2 = (e) => {\n    setPassword2(e.target.value)\n  }\n\n  // 중복확인 체크\n  const onCheckDup = () => {\n    Axios.get(\"/auth/nicknames\")\n      .then(res => {\n        const duplicate = res.data.filter(item => item.nickname === nickname)\n        // 닉네임 중복일 경우\n        if(duplicate.length > 0) {\n          alert(\"이미 사용 중인 닉네임입니다\")\n        } else {\n          setCheckDuplicate(true)\n          alert(\"사용할 수 있는 닉네임입니다\")\n        }\n      })\n  }\n\n  const onCheckEnter = (e) => {\n    if(e.key === \"Enter\") {\n      onSignup()\n    }\n  }\n\n  const onSignup = () => {\n    const variables = {\n      \"email\": email,\n      \"nickname\": nickname,\n      \"password\": password2\n    }\n\n    // 닉네임 중복확인 필수\n    if(checkDuplicate) {\n      Axios.get(`/auth/findPw/checkmail/${email}`)\n        .then(res => {\n          // 이메일 중복 없을 경우에만 회원가입 후 로그인 페이지로 이동\n          if(res.data === false) {\n            Axios.post(\"/auth/signup\", variables)\n              .then(response => {\n                history.push(\"/login\")\n              })\n          // 이메일 중복 있을 경우 alert\n          } else {\n            alert(\"사용할 수 없는 이메일입니다\")\n          }\n        })\n    // 닉네임 중복확인 안 했을 경우\n    } else {\n      alert(\"닉네임 중복확인을 해주세요\")\n    }\n  }\n\n  return (\n    <SignupDiv>\n      <h1>회원가입</h1>\n      <br />\n      <Form onKeyPress={onCheckEnter}>\n        <Form.Item\n          label=\"이메일 주소:\"\n          name=\"email\"\n          rules={[{ required: true }]}\n        >\n          <Input onChange={onChangeEmail} />\n        </Form.Item>\n        <Form.Item\n          label=\"닉네임:\"\n          name=\"nickname\"\n          rules={[{ required: true }]}\n        >\n          <div>\n            <Input onChange={onChangeNickname} />\n            <Button onClick={onCheckDup}>중복확인</Button>\n          </div>\n        </Form.Item>\n        <Form.Item\n          label=\"비밀번호(8~16자):\"\n          name=\"password1\"\n          rules={[{ required: true, min: 8, max: 16, message: '다시 입력해 주세요' }]}\n        >\n          <Input.Password value={password1} onChange={onChangePwd1} />\n        </Form.Item>\n        <Form.Item\n          label=\"비밀번호 확인(8~16자):\"\n          name=\"password2\"\n          rules={[{ required: true, min: 8, max: 16, message: '다시 입력해 주세요' }]}\n        >\n          <Input.Password value={password2} onChange={onChangePwd2}  />\n        </Form.Item>\n        <Form.Item>\n          <Button size=\"large\" onClick={onSignup}>\n            가입하기\n          </Button>\n        </Form.Item>\n      </Form>\n    </SignupDiv>\n  )\n}\n\nexport default SignupPage;\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { Form, Input, Button } from \"antd\"\nimport Axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\n\nconst FindPwDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    .ant-input-password {\n      height: 32px;\n      input {\n        height: 100%;\n      }\n    }\n    button {\n      width: 100%;\n      background: black;\n      color: #ffffff;\n      margin-top: 1rem;\n      margin-bottom: 1rem;\n    }\n    p {\n      text-align: left;\n    }\n  }\n`\n\nconst FindPwPage = () => {\n\n  const [email, setEmail] = useState(\"\")\n\n  const history = useHistory()\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value)\n  }\n\n  const onFindPw = () => {\n    let variable = {\n      \"email\": email\n    }\n\n    Axios.post(\"/auth/findPw/sendmail\", variable)\n      .then(res => {\n        alert(\"메일 발송이 완료되었습니다\")\n        history.push(\"/login\")\n      })\n  }\n\n  return (\n    <FindPwDiv>\n      <h1>비밀번호 찾기</h1>\n      <br />\n      <Form >\n        <Form.Item\n          label=\"이메일 주소:\"\n          name=\"email\"\n          rules={[{ required: true }]}\n        >\n          <Input onChange={onChangeEmail} />\n        </Form.Item>\n        <Form.Item>\n          <Button size=\"large\" onClick={onFindPw}>\n            비밀번호 찾기\n          </Button>\n          <p>비밀번호 찾기 버튼을 클릭하시면 바뀐 비밀번호가 입력하신 이메일로 전송됩니다.</p>\n        </Form.Item>\n      </Form>\n    </FindPwDiv>\n  )\n}\n\nexport default FindPwPage\n","import React, { useState, useEffect } from \"react\"\nimport { Row, Col, Card, Button } from \"antd\"\nimport { InfoCircleOutlined, FieldTimeOutlined, FundProjectionScreenOutlined, QuestionCircleOutlined } from \"@ant-design/icons\"\nimport styled from \"styled-components\"\nimport { Link } from \"react-router-dom\"\nimport { useSelector } from \"react-redux\"\n\nconst MenuDiv = styled.div`\n  padding: 3rem 2rem;\n  .ant-row {\n    display: flex;\n    align-items: center;\n    border: 1px solid #f0f0f0;\n  }\n  .ant-col-sm-24 {\n    background: black;\n    padding: 12px 0;\n    .ant-card {\n      width: 100%;\n      background: black;\n      color: white;\n    }\n  }\n  .ant-col-sm-12 {\n    display: flex;\n    justify-content: space-around;\n    padding: 24px 0;\n    font-size: 18px;\n  }\n  .ant-card {\n    border: none;\n    .ant-card-body {\n      font-size: 18px;\n    }\n  }\n`;\n\nconst MenuBar = () => {\n\n  const [nickname, setNickname] = useState(\"\")\n  const user = useSelector(state => state.user.userData)\n\n  useEffect(() => {\n    if(user !== undefined) {\n      setNickname(user.nickname)\n    }\n  }, [user])\n\n  return (\n    <MenuDiv>\n      <Row>\n        <Col lg={8} sm={24} xs={24}>\n          <Card>\n            <p>{nickname}님 안녕하세요</p>\n            <Button shape=\"round\">정회원</Button>\n          </Card>\n        </Col>\n        <Col lg={8} sm={12} xs={24}>\n          <div>\n            <Link to=\"/myinfo\">\n              <InfoCircleOutlined />\n              <p>내 정보 관리</p>\n            </Link>\n          </div>\n          <div>\n            <Link to=\"/mytimeline\">\n              <FieldTimeOutlined />\n              <p>내 타임라인</p>\n            </Link>\n          </div>\n        </Col>\n        <Col lg={8} sm={12} xs={24}>\n          <div>\n            <FundProjectionScreenOutlined />\n            <p>내 클래스</p>\n          </div>\n          <div>\n            <QuestionCircleOutlined />\n            <p>문의하기</p>\n          </div>\n        </Col>\n      </Row>\n    </MenuDiv>\n  )\n}\n\nexport default MenuBar;\n","import React from \"react\"\nimport MenuBar from \"./Sections/MenuBar\"\n\nconst MyPage = () => {\n\n  return (\n    <>\n      <MenuBar />\n    </>\n  )\n}\n\nexport default MyPage\n","import React from \"react\"\nimport { Card, Button, List } from \"antd\"\nimport { Link } from \"react-router-dom\"\nimport { PlusOutlined } from \"@ant-design/icons\"\n\nconst SomeTimeline = (props) => {\n  return (\n    <>\n      <Card title=\"\" bordered={false} extra={<Link to=\"/timelinelist\"><Button><PlusOutlined />더 보기</Button></Link>}>\n        <List\n          itemLayout=\"horizontal\"\n        >\n          { props.list && props.list.map((item, i) => (\n            <List.Item key={i}>\n              <List.Item.Meta\n                title={item.title}\n              />\n              <List.Item.Meta\n                title={item.category}\n              />\n              <List.Item.Meta\n                title={item.complete ? '진행완료' : '진행중'}\n              />\n              <List.Item.Meta\n                title={item.open ? '공개' : '비공개'}\n              />\n              <List.Item.Meta\n                title={item.viewCount.toString()}\n              />\n              <List.Item.Meta\n                title={item.likeCount.toString()}\n              />\n              <List.Item.Meta\n                title={item.createdDate.substring(0, 10)}\n              />\n            </List.Item>\n          ))}\n        </List>\n      </Card>\n    </>\n  )\n}\n\nexport default SomeTimeline\n","import React, { useState, useEffect } from \"react\"\nimport MenuBar from \"./Sections/MenuBar\"\nimport { Row, Col, Card, Button } from \"antd\"\nimport styled from \"styled-components\"\nimport SomeTimeline from \"./Sections/SomeTimeline\"\nimport { useSelector } from \"react-redux\"\nimport Axios from \"axios\"\n\nconst TimelineDiv = styled.div`\n  padding: 3rem 2rem;\n  .ant-card {\n    text-align: left;\n    margin-bottom: 3rem;\n    font-size: 17px;\n    .ant-card-head-title {\n      font-weight: bold;\n      font-size: 17px;\n    }\n  }\n`\n\nconst MyTimeline = (props) => {\n  const [allList, setAllList] = useState([])\n  const [list, setList] = useState([])\n\n  useEffect(() => {\n\n    if(props.user.userData !== undefined && props.user.userData.email !== undefined) {\n      Axios.get(`/timeline/master/${props.user.userData.email}`)\n        .then(res => {\n          if(res.data) {\n            const latestData = res.data.slice(-3)\n            setAllList(res.data)\n            setList(latestData)\n          }\n        })\n    }\n  }, [props.user])\n\n  const onMoveToCreate = () => {\n    // 타임라인 최대 저장 개수 20개로 제한 => 20개 초과하면 페이지 접근 x\n    if(allList.length > 19) {\n      alert(\"타임라인은 최대 20개까지 작성할 수 있습니다\")\n    } else {\n      props.history.push(\"/createtimeline\")\n    }\n  }\n\n  return (\n    <div>\n      <MenuBar />\n      <TimelineDiv>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Card title=\"내 타임라인\" bordered={false} extra={<Button size=\"large\" onClick={onMoveToCreate}>생성하기</Button>}>\n              <SomeTimeline list={list} />\n            </Card>\n          </Col>\n          <Col span={24}>\n            <Card title=\"관심 타임라인\" bordered={false}>\n              관심 타임라인이 없습니다\n            </Card>\n          </Col>\n          <Col span={24}>\n            <Card title=\"추천 타임라인\" bordered={false}>\n              추천 타임라인이 없습니다\n            </Card>\n          </Col>\n        </Row>\n      </TimelineDiv>\n    </div>\n  )\n}\n\nexport default MyTimeline\n","import React from \"react\"\nimport { Input, DatePicker, Divider, Button } from \"antd\"\nimport styled from \"styled-components\"\nimport { CloseSquareOutlined } from \"@ant-design/icons\"\nimport moment from \"moment\"\n\nconst DetailDiv = styled.div`\n  div:first-child .ant-divider {\n    border: none;\n  }\n  div {\n    display: flex;\n    flex-direction: column;\n    div {\n      button {\n        display: flex;\n        justify-content: flex-end;\n        border: none;\n        outline: none;\n        color: #FF4B2B;\n        &:active: {\n          border: none;\n          outline: none;\n        }\n        &::after {\n          border: none;\n          outline: none;\n\n        }\n      }\n      margin-bottom: 20px;\n      .ant-picker {\n        height: 32px;\n        .ant-picker-input {\n          display: flex;\n          flex-direction: row;\n        }\n      }\n    }\n  }\n`\n\nconst { TextArea } = Input\n\nconst TimelineDetail = (props) => {\n\n  return (\n    <DetailDiv>\n      {props.countList && props.countList.map((item, i) => (\n        <div key={i}>\n          <Divider />\n          <div>\n            {item}\n            <Button onClick={() => props.onDeleteDetail(item, i)}>\n              <CloseSquareOutlined />\n            </Button>\n            <label>타임라인 상세 제목</label>\n            <Input\n              type=\"text\"\n              value={props.detailTitle[i]}\n              onChange={(e) => props.onChangeDetailTitle(e, i)}\n              required\n            />\n          </div>\n          <div>\n            <label>날짜</label>\n            <DatePicker\n              value={props.detailDateString[i] ? moment(props.detailDateString[i]) : \"\"}\n              onChange={(date, dateString) => props.onChangeDate(date, dateString, i)}\n            />\n          </div>\n          <div>\n            <label>내용</label>\n            <TextArea\n              autoSize={{ minRows: 6, maxRows: 6 }}\n              value={props.detailContent[i]}\n              onChange={(e) => props.onchangeDetailContent(e, i)}\n            />\n          </div>\n        </div>\n      ))}\n    </DetailDiv>\n  )\n}\n\nexport default TimelineDetail\n","import React from \"react\"\nimport Dropzone from \"react-dropzone\"\nimport { PlusOutlined } from \"@ant-design/icons\"\nimport styled from \"styled-components\"\n\nconst UploadImageDiv = styled.div`\n  width: 100%;\n  height: 140px;\n  border: 1px solid lightgray;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst UploadImage = (props) => {\n\n  return (\n    <UploadImageDiv>\n      <Dropzone onDrop={props.onDrop} multiple={false} maxSize={800000000}>\n        {({ getRootProps, getInputProps }) => (\n          <div\n            {...getRootProps()}\n          >\n            <input {...getInputProps()} />\n            <PlusOutlined />\n          </div>\n        )}\n      </Dropzone>\n    </UploadImageDiv>\n  )\n}\n\nexport default UploadImage\n","import React from \"react\"\nimport { Form, Input, Select, Button, Divider, Tag } from \"antd\"\nimport UploadImage from \"./UploadImage\"\nimport { CloseOutlined } from \"@ant-design/icons\"\n\nconst { Option } = Select\n\nconst TimelineMaster = (props) => {\n  return (\n    <div>\n      <Form.Item\n        label=\"타임라인 제목\"\n        name=\"title\"\n      >\n        <Input\n          type=\"text\"\n          onChange={props.onChangeTitle}\n          value={props.title}\n          required\n        />\n      </Form.Item>\n      <Form.Item\n        label=\"분야\"\n      >\n        <Select defaultValue=\"생활\" onChange={props.onSelectCategory}>\n          <Option value=\"생활\">생활</Option>\n          <Option value=\"여행\">여행</Option>\n          <Option value=\"문화\">문화</Option>\n          <Option value=\"경제\">경제</Option>\n          <Option value=\"기타\">기타</Option>\n        </Select>\n      </Form.Item>\n      <Form.Item\n        label=\"진행 여부\"\n      >\n        <Select defaultValue=\"false\" onChange={props.onSelectComplete}>\n          <Option value=\"false\">진행중</Option>\n          <Option value=\"true\">진행완료</Option>\n        </Select>\n      </Form.Item>\n      <Form.Item\n        label=\"공개 여부\"\n      >\n        <Select defaultValue=\"false\" onChange={props.onSelectOpen}>\n          <Option value=\"false\">비공개</Option>\n          <Option value=\"true\">공개</Option>\n        </Select>\n      </Form.Item>\n      <Form.Item\n        label=\"이미지\"\n      >\n        <UploadImage onDrop={props.onDrop} />\n        {props.files[0] &&\n          <div>\n            <Tag color=\"black\">{props.files[0].path}</Tag>\n            <CloseOutlined onClick={props.onDeleteFile} />\n          </div>\n        }\n      </Form.Item>\n    </div>\n  )\n}\n\nexport default TimelineMaster\n","import React from \"react\"\nimport { Timeline, TimelineItem }  from \"vertical-timeline-component-for-react\"\nimport styled from \"styled-components\"\nimport { Input } from \"antd\"\n\nconst TimelineViewDiv = styled.div`\n  .body-container p {\n    word-break: break-all;\n    .ant-input {\n      background: #efefef;\n    }\n  }\n`\n\nconst { TextArea } = Input\n\nconst TimelineView = (props) => {\n  return (\n    <TimelineViewDiv>\n      <Timeline lineColor={'black'}>\n        {props.countList && props.countList.map((item, i) => (\n          <TimelineItem\n            key={i}\n            dateText={props.detailDateString[i]}\n            style={{ color: '#e86971', height: '495px', }}\n            bodyContainerStyle={{\n              background: '#efefef',\n              padding: '20px',\n              borderRadius: '8px',\n            }}\n          >\n            <h3>{props.detailTitle[i]}</h3>\n            <TextArea\n              autoSize={true}\n              bordered={false}\n              value={props.detailContent[i]}\n            />\n          </TimelineItem>\n        ))}\n      </Timeline>\n    </TimelineViewDiv>\n  )\n}\n\nexport default TimelineView\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { Form, Button, Divider } from \"antd\"\nimport { useHistory } from \"react-router-dom\"\nimport Axios from \"axios\"\nimport { PlusCircleOutlined } from \"@ant-design/icons\"\nimport TimelineDetail from \"./Sections/TimelineDetail\"\nimport { useSelector } from \"react-redux\"\nimport TimelineMaster from \"./Sections/TimelineMaster\"\nimport TimelineView from \"./Sections/TimelineView\"\n\nconst CreateTimelineDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 100%;\n    padding: 3rem;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    .ant-form-item:last-child {\n      .ant-form-item-control-input-content {\n        div:nth-child(2) {\n          margin-top: 20px;\n          align-items: center;\n          display: flex;\n          justify-content: center;\n        }\n      }\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    a button {\n      width: 100%;\n      background: black;\n      color: #ffffff;\n      margin-top: 100px;\n    }\n  }\n`\n\nconst CreateDetailDiv = styled.div`\n  display: flex;\n  width: 100%;\n  div {\n    width: 100%;\n  }\n`\n\nconst CreateTimeline = () => {\n  const [title, setTitle] = useState(\"\")\n  const [countList, setCountList] = useState([0])\n  const [detailTitle, setDetailTitle] = useState([])\n  const [detailDate, setDetailDate] = useState([])\n  const [detailDateString, setDetailDateString] = useState([])\n  const [detailContent, setDetailContent] = useState([])\n  const [category, setCategory] = useState(\"경제\")\n  const [complete, setComplete] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [files, setFiles] = useState([])\n\n  const user = useSelector(state => state.user)\n  const history = useHistory()\n\n  const onCreateTimeline = (e) => {\n\n    let formData = new FormData()\n\n    // 파일 없을 시\n    if(files.length === 0) {\n      formData.append(\"file\", \"\")\n    } else {\n      formData.append(\"file\", files[0])\n    }\n\n    let variables = [{\n      author: user.userData.email,\n      category: category,\n      complete: complete,\n      open: open,\n      title: title,\n      likeCount: 0,\n      viewCount: 0\n    }]\n\n    formData.append(\"dto\", new Blob([JSON.stringify(variables)], {type: \"application/json\"}))\n\n    let detailList = []\n    let valid = true\n\n    // 타임라인이 하나도 없을 때\n    if(countList.length === 0) {\n      alert(\"1개 이상의 타임라인을 작성해 주세요\")\n      return false\n    } else if(!title) {\n      alert(\"제목을 작성해 주세요\")\n      return false\n    }\n\n    // 타임라인 상세 내용 유효성 검사\n    countList.forEach((item, i) => {\n      if(detailTitle[i] === undefined || detailTitle[i] === \"\") {\n        alert(\"타임라인 제목을 입력해 주세요\")\n        valid = false\n      } else if(detailContent[i] === undefined || detailContent[i] === \"\") {\n        alert(\"타임라인 내용을 입력해 주세요\")\n        valid = false\n      } else if(detailDate[i] === undefined || detailDate[i] === \"\") {\n        alert(\"타임라인 날짜를 입력해 주세요\")\n        valid = false\n      }\n    })\n\n    if(valid) {\n      Axios.post(\"/timeline/master/save\", formData)\n        .then(res => {\n          // master에서 id값 return하면 받아서 detail 저장\n          if(res.data.id) {\n            countList.forEach((item, i) => {\n              detailList.push({\n                \"content\": detailContent[i],\n                \"id\": res.data.id.toString() + i.toString(),\n                \"masterId\": res.data.id,\n                \"scheduleDate\": detailDateString[i].replaceAll('-', ''),\n                \"title\": detailTitle[i]\n              })\n            })\n\n            Axios.post(\"/timeline/detail/save\", detailList)\n              .then(response => {\n                if(response.status === 200) {\n                  history.push(\"/mytimeline\")\n                }\n              })\n          }\n        })\n    }\n  }\n\n  const onChangeTitle = (e) => {\n    setTitle(e.target.value)\n  }\n\n  const onChangeDetailTitle= (e, i) => {\n    let detailTitleArr = [...detailTitle]\n\n    detailTitleArr[i] = e.target.value\n    setDetailTitle(detailTitleArr)\n  }\n\n  const onChangeDate = (date, dateString, i) => {\n    let detailDateArr = [...detailDate]\n    let detailDatestringArr = [...detailDateString]\n\n    // 날짜 선택 중복 금지\n    if(detailDatestringArr.includes(dateString)) {\n      alert(\"이미 선택한 날짜입니다\")\n      return false\n    } else {\n      detailDateArr[i] = date\n      detailDatestringArr[i] = dateString\n      setDetailDate(detailDateArr)\n      setDetailDateString(detailDatestringArr)\n    }\n  }\n\n  const onchangeDetailContent = (e, i) => {\n    let detailContentArr = [...detailContent]\n\n    detailContentArr[i] = e.target.value\n    setDetailContent(detailContentArr)\n  }\n\n  const onSelectCategory = (value) => {\n    setCategory(value)\n  }\n\n  const onSelectComplete = (value) => {\n    setComplete(value)\n  }\n\n  const onSelectOpen = (value) => {\n    setOpen(value)\n  }\n\n  const onAddDetailDiv = () => {\n    let countArr = countList.length === 0 ? [0] : [...countList]\n    let counter = countArr.slice(-1)[0]\n\n    // 타임라인 상세 영역 다 삭제해서 하나도 없을 때\n    if(countList.length === 0) {\n      setCountList(countArr)\n    // 타임라인 상세 영역 1개 이상일 때\n    } else {\n      counter += 1\n      countArr[countArr.length] = counter\n      setCountList(countArr)\n    }\n  }\n\n  const onDeleteDetailTitle = (i) => {\n    let titleArr = [...detailTitle]\n    titleArr.splice(i, 1)\n    setDetailTitle(titleArr)\n  }\n\n  const onDeleteDetailDate = (i) => {\n    let dateArr = [...detailDate]\n    let datestringArr = [...detailDateString]\n\n    dateArr.splice(i, 1)\n    datestringArr.splice(i, 1)\n    setDetailDate(dateArr)\n    setDetailDateString(datestringArr)\n  }\n\n  const onDeleteDetailContent = (i) => {\n    let contentArr = [...detailContent]\n    contentArr.splice(i, 1)\n    setDetailContent(contentArr)\n  }\n\n  const onDeleteDetail = (item, i) => {\n    let countArr = [...countList]\n    // array 값과 일치하는 것만 삭제, 일치하지 않는 것들만 남김\n    const newCountArr = countArr.filter((arr) => arr !== item)\n    setCountList(newCountArr)\n    onDeleteDetailTitle(i)\n    onDeleteDetailDate(i)\n    onDeleteDetailContent(i)\n  }\n\n  const onDrop = (files) => {\n    // 파일 크기 200MB 이하로 제한\n    if(files[0].size > 200000000) {\n      alert(\"파일 크기가 너무 큽니다 200MB 이하 파일만 업로드 가능합니다\")\n    } else {\n      setFiles(files)\n    }\n  }\n\n  const onDeleteFile = () => {\n    // 업로드한 파일 정보 삭제\n    setFiles([])\n  }\n\n  return (\n    <CreateTimelineDiv>\n      <h1>타임라인 생성하기</h1>\n      <br />\n      <Form onSubmit={onCreateTimeline}>\n        <TimelineMaster title={title} files={files} onChangeTitle={onChangeTitle} onSelectCategory={onSelectCategory} onSelectComplete={onSelectComplete} onSelectOpen={onSelectOpen}\n          onDrop={onDrop} onDeleteFile={onDeleteFile} />\n        <Divider />\n        <CreateDetailDiv>\n          <div>\n            <TimelineDetail countList={countList} onDeleteDetail={onDeleteDetail} onChangeDetailTitle={onChangeDetailTitle} detailTitle={detailTitle}\n              onChangeDate={onChangeDate} detailDate={detailDate} onchangeDetailContent={onchangeDetailContent} detailContent={detailContent} detailDateString={detailDateString} />\n            <Button onClick={onAddDetailDiv}>\n              <PlusCircleOutlined />추가\n            </Button>\n          </div>\n          <div>\n            <TimelineView countList={countList} detailTitle={detailTitle} detailDateString={detailDateString} detailContent={detailContent}/>\n          </div>\n        </CreateDetailDiv>\n        <Button size=\"large\" onClick={onCreateTimeline}>생성하기</Button>\n      </Form>\n    </CreateTimelineDiv>\n  )\n}\nexport default CreateTimeline\n","import React, { useState, useEffect } from \"react\"\nimport { Table, Tag } from \"antd\"\nimport styled from \"styled-components\"\nimport Axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport { DeleteOutlined } from \"@ant-design/icons\"\n\nconst TimelineListDiv = styled.div`\n  padding: 3rem 2rem;\n  td {\n    div {\n      div {\n        width: 100PX;\n        height: 100PX;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n      img {\n        width: 100px;\n        height: 100px;\n      }\n    }\n    .ant-empty {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n  }\n`\n\nconst TimelineList = (props) => {\n  const [list, setList] = useState([])\n  const [checkDelete, setCheckDelete] = useState(false)\n\n  const columns = [\n    {\n      title: '이미지',\n      dataIndex: 'imgFullPath',\n      key: 'imgFullPath',\n      render: imgFullPath => (\n        <div>\n          { imgFullPath ?\n            <img src={imgFullPath} />\n          :\n            <div>\n              NO IMAGE\n            </div>\n          }\n        </div>\n      )\n    },\n    {\n      title: '제목',\n      dataIndex: 'title',\n      key: 'title',\n    },\n    {\n      title: '분야',\n      dataIndex: 'category',\n      key: 'category',\n    },\n    {\n      title: '진행여부',\n      dataIndex: 'complete',\n      key: 'complete',\n      render: complete => (\n        <div>\n          { complete ?\n            <Tag color=\"mediumpurple\">진행완료</Tag>\n            :\n            <Tag color=\"skyblue\">진행중</Tag>\n          }\n        </div>\n      ),\n    },\n    {\n      title: '공개여부',\n      dataIndex: 'open',\n      key: 'open',\n      render: open => (\n        <div>\n          { open ?\n            <Tag color=\"black\">공개</Tag>\n            :\n            <Tag color=\"lightgray\">비공개</Tag>\n          }\n        </div>\n      )\n    },\n    {\n      title: '조회수',\n      dataIndex: 'viewCount',\n      key: 'viewCount',\n    },\n    {\n      title: '추천수',\n      dataIndex: 'likeCount',\n      key: 'likeCount',\n    },\n    {\n      title: '생성일자',\n      dataIndex: 'createdDate',\n      key: 'createdDate',\n      render: date => (\n        <div>\n          {date.substring(0, 10)}\n        </div>\n      )\n    },\n    {\n      title: '삭제',\n      dataIndex: 'id',\n      key: 'id',\n      render: (id) => (\n        <div>\n          <DeleteOutlined onClick={(e) => onDeleteTimeline(e, id)} />\n        </div>\n      )\n    },\n ]\n\n  useEffect(() => {\n    if(props.user.userData !== undefined && props.user.userData.email !== undefined) {\n      Axios.get(`/timeline/master/${props.user.userData.email}`)\n        .then(res => {\n          if(res.data) {\n            setList(res.data)\n          }\n        })\n    }\n  }, [props.user, checkDelete])\n\n  const onDeleteTimeline = (e, id) => {\n    // onRow click event 실행 막기\n    e.stopPropagation()\n\n    Axios.delete(`/timeline/${id}`)\n      .then(res => {\n        if(res.status === 200) {\n          alert(\"삭제되었습니다\")\n          setCheckDelete(!checkDelete)\n        }\n      })\n  }\n\n  return (\n    <TimelineListDiv>\n      <Table columns={columns} dataSource={list} rowKey={list => list.id} pagination={false}\n        onRow={(record, rowIndex) => {\n        return {\n          onClick: () => {\n            props.history.push(`/timelinelist/${record.id}`)\n          },\n        }\n      }}\n      />\n    </TimelineListDiv>\n  )\n}\n\nexport default TimelineList\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { Form, Input, Select, Button, Divider, Tag } from \"antd\"\nimport { useHistory } from \"react-router-dom\"\nimport Axios from \"axios\"\nimport { PlusCircleOutlined, CloseOutlined } from \"@ant-design/icons\"\nimport TimelineDetail from \"../../CreateTimeline/Sections/TimelineDetail\"\nimport { useSelector } from \"react-redux\"\nimport TimelineView from \"../../CreateTimeline/Sections/TimelineView\"\nimport UploadImage from \"../../CreateTimeline/Sections/UploadImage\"\n\nconst ModifyTimelineDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 100%;\n    padding: 3rem;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    .ant-form-item:last-child {\n      .ant-form-item-control-input-content {\n        div:nth-child(2) {\n          margin-top: 20px;\n          align-items: center;\n          display: flex;\n          justify-content: center;\n        }\n      }\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    a button {\n      width: 100%;\n      background: black;\n      color: #ffffff;\n      margin-top: 100px;\n    }\n  }\n`\n\nconst ModifyDetailDiv = styled.div`\n  display: flex;\n  width: 100%;\n  div {\n    width: 100%;\n  }\n`\n\nconst { Option } = Select\n\nconst ModifyTimeline = (props) => {\n  const [title, setTitle] = useState(\"\")\n  const [countList, setCountList] = useState([0])\n  const [detailTitle, setDetailTitle] = useState([])\n  const [detailDate, setDetailDate] = useState([])\n  const [detailDateString, setDetailDateString] = useState([])\n  const [detailContent, setDetailContent] = useState([])\n  const [category, setCategory] = useState(\"\")\n  const [complete, setComplete] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [files, setFiles] = useState([])\n  const [filepath, setFilepath] = useState(\"\")\n  const [deleteStatus, setDeleteStatus] = useState(false)\n\n  const user = useSelector(state => state.user)\n  const history = useHistory()\n\n  useEffect(() => {\n    const countArr = [...countList]\n\n    if(props.timeline[0] !== undefined && props.detail !== undefined) {\n      setTitle(props.timeline[0].title)\n      setCategory(props.timeline[0].category)\n      setComplete(props.timeline[0].complete)\n      setOpen(props.timeline[0].open)\n\n      if(props.timeline[0].filePath !== null) {\n        const path = props.timeline[0].filePath.split(\"-\")[1]\n        setFilepath(path)\n      }\n\n      props.detail.forEach((item, i) => {\n        const date = item.scheduleDate.slice(0, 4) + \"-\" + item.scheduleDate.slice(4, 6) + \"-\" + item.scheduleDate.slice(6, 8)\n        countArr[i] = i\n        detailTitle[i] = item.title\n        detailDateString[i] = date\n        detailContent[i] = item.content\n      })\n\n      setCountList(countArr)\n      setDetailTitle(detailTitle)\n      setDetailDate(detailDateString)\n      setDetailContent(detailContent)\n    }\n  }, [props.timeline, props.detail])\n\n  const onModifyTimeline = (e) => {\n\n    let formData = new FormData()\n    let variables = [{\n      category: category,\n      complete: complete,\n      open: open,\n      title: title,\n    }]\n\n    // 파일 업로드 안 했을 때 기본 이미지 혹은 기존 이미지 그대로 유지\n    if(files.length === 0) {\n      formData.append(\"file\", \"\")\n      // 기존에 업로드한 파일 삭제하고 재업로드 안 했을 경우 filepath \"\"로 보냄\n      if(deleteStatus) {\n        variables = [{\n          category: category,\n          complete: complete,\n          open: open,\n          title: title,\n          filePath: \"\",\n          imgFullPath: \"\"\n        }]\n      // 기존에 업로드한 파일 삭제한 적 없고 재업로드 안 했을 경우에도 기존/기본 파일 유지\n      } else {\n        variables = [{\n          category: category,\n          complete: complete,\n          open: open,\n          title: title,\n          filePath: props.timeline[0].filePath,\n          imgFullPath: props.timeline[0].imgFullPath\n        }]\n      }\n    // 파일 업로드했을 때 새로운 이미지로 교체\n    } else {\n      formData.append(\"file\", files[0])\n    }\n\n    formData.append(\"dto\", new Blob([JSON.stringify(variables)], {type: \"application/json\"}))\n\n    let detailList = []\n    let valid = true\n\n    // 타임라인이 하나도 없을 때\n    if(countList.length === 0) {\n      alert(\"1개 이상의 타임라인을 작성해 주세요\")\n      return false\n    } else if(!title) {\n      alert(\"제목을 작성해 주세요\")\n      return false\n    }\n\n    // 타임라인 상세 내용 유효성 검사\n    countList.forEach((item, i) => {\n      if(detailTitle[i] === undefined || detailTitle[i] === \"\") {\n        alert(\"타임라인 제목을 입력해 주세요\")\n        valid = false\n      } else if(detailContent[i] === undefined || detailContent[i] === \"\") {\n        alert(\"타임라인 내용을 입력해 주세요\")\n        valid = false\n      } else if(detailDate[i] === undefined || detailDate[i] === \"\") {\n        alert(\"타임라인 날짜를 입력해 주세요\")\n        valid = false\n      }\n    })\n\n    if(valid) {\n      // timeline master 수정\n      Axios.put(`/timeline/master/${props.timelineId}`, formData)\n        .then(res => {\n          if(res.data) {\n            // timeline detail 전체 삭제 후 새로 save\n            Axios.delete(`/timeline/detail/${props.timelineId}`)\n             .then(response => {\n               if(response.status === 200) {\n                 countList.forEach((item, i) => {\n                   detailList.push({\n                     \"content\": detailContent[i],\n                     \"id\": res.data.id.toString() + i.toString(),\n                     \"masterId\": res.data.id,\n                     \"scheduleDate\": detailDateString[i].replaceAll('-', ''),\n                     \"title\": detailTitle[i]\n                   })\n                 })\n\n                 Axios.post(\"/timeline/detail/save\", detailList)\n                   .then(response => {\n                     if(response.status === 200) {\n                       props.history.push(\"/mytimeline\")\n                     }\n                   })\n               }\n             })\n          }\n        })\n    }\n  }\n\n  const onChangeTitle = (e) => {\n    setTitle(e.target.value)\n  }\n\n  const onChangeDetailTitle= (e, i) => {\n    let detailTitleArr = [...detailTitle]\n\n    detailTitleArr[i] = e.target.value\n    setDetailTitle(detailTitleArr)\n  }\n\n  const onChangeDate = (date, dateString, i) => {\n    let detailDateArr = [...detailDate]\n    let detailDatestringArr = [...detailDateString]\n\n    // 날짜 선택 중복 금지\n    if(detailDatestringArr.includes(dateString)) {\n      alert(\"이미 선택한 날짜입니다\")\n      return false\n    } else {\n      detailDateArr[i] = date\n      detailDatestringArr[i] = dateString\n      setDetailDate(detailDateArr)\n      setDetailDateString(detailDatestringArr)\n    }\n  }\n\n  const onchangeDetailContent = (e, i) => {\n    let detailContentArr = [...detailContent]\n\n    detailContentArr[i] = e.target.value\n    setDetailContent(detailContentArr)\n  }\n\n  const onSelectCategory = (value) => {\n    setCategory(value)\n  }\n\n  const onSelectComplete = (value) => {\n    setComplete(value)\n  }\n\n  const onSelectOpen = (value) => {\n    setOpen(value)\n  }\n\n  const onAddDetailDiv = () => {\n    let countArr = countList.length === 0 ? [0] : [...countList]\n    let counter = countArr.slice(-1)[0]\n\n    // 타임라인 상세 영역 다 삭제해서 하나도 없을 때\n    if(countList.length === 0) {\n      setCountList(countArr)\n    // 타임라인 상세 영역 1개 이상일 때\n    } else {\n      counter += 1\n      countArr[countArr.length] = counter\n      setCountList(countArr)\n    }\n  }\n\n  const onDeleteDetailTitle = (i) => {\n    let titleArr = [...detailTitle]\n    titleArr.splice(i, 1)\n    setDetailTitle(titleArr)\n  }\n\n  const onDeleteDetailDate = (i) => {\n    let dateArr = [...detailDate]\n    let datestringArr = [...detailDateString]\n\n    dateArr.splice(i, 1)\n    datestringArr.splice(i, 1)\n    setDetailDate(dateArr)\n    setDetailDateString(datestringArr)\n  }\n\n  const onDeleteDetailContent = (i) => {\n    let contentArr = [...detailContent]\n    contentArr.splice(i, 1)\n    setDetailContent(contentArr)\n  }\n\n  const onDeleteDetail = (item, i) => {\n    let countArr = [...countList]\n    // array 값과 일치하는 것만 삭제, 일치하지 않는 것들만 남김\n    const newCountArr = countArr.filter((arr) => arr !== item)\n    setCountList(newCountArr)\n    onDeleteDetailTitle(i)\n    onDeleteDetailDate(i)\n    onDeleteDetailContent(i)\n  }\n\n  const onDrop = (files) => {\n    setFiles(files)\n  }\n\n  const onDeleteFile = () => {\n    Axios.delete(`/timeline/master/${props.timeline[0].filePath}`)\n      .then(res => {\n        if(res.status === 200) {\n          setFilepath(\"\")\n          setDeleteStatus(true)\n        }\n      })\n  }\n\n  return (\n    <ModifyTimelineDiv>\n      <h1>타임라인 수정하기</h1>\n      <br />\n      <Form onSubmit={onModifyTimeline}>\n        <div>\n          <Form.Item\n            label=\"타임라인 제목\"\n          >\n            <Input\n              type=\"text\"\n              onChange={onChangeTitle}\n              value={title}\n            />\n          </Form.Item>\n          <Form.Item\n            label=\"분야\"\n          >\n            <Select value={category} onChange={onSelectCategory}>\n              <Option value=\"생활\">생활</Option>\n              <Option value=\"여행\">여행</Option>\n              <Option value=\"문화\">문화</Option>\n              <Option value=\"경제\">경제</Option>\n              <Option value=\"기타\">기타</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"진행 여부\"\n          >\n            <Select value={complete.toString()} onChange={onSelectComplete}>\n              <Option value=\"false\">진행중</Option>\n              <Option value=\"true\">진행완료</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"공개 여부\"\n          >\n            <Select value={open.toString()} onChange={onSelectOpen}>\n              <Option value=\"false\">비공개</Option>\n              <Option value=\"true\">공개</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"이미지\"\n          >\n            <UploadImage onDrop={onDrop} />\n            {files[0] ?\n              <div>\n                <Tag color=\"black\">{files[0].path}</Tag>\n                <CloseOutlined onClick={onDeleteFile} />\n              </div>\n              :\n              filepath &&\n              <div>\n                <Tag color=\"black\">{filepath}</Tag>\n                <CloseOutlined onClick={onDeleteFile} />\n              </div>\n            }\n          </Form.Item>\n        </div>\n        <Divider />\n        <ModifyDetailDiv>\n          <div>\n            <TimelineDetail countList={countList} onDeleteDetail={onDeleteDetail} onChangeDetailTitle={onChangeDetailTitle} detailTitle={detailTitle}\n              onChangeDate={onChangeDate} detailDate={detailDate} onchangeDetailContent={onchangeDetailContent} detailContent={detailContent} detailDateString={detailDateString} />\n            <Button onClick={onAddDetailDiv}>\n              <PlusCircleOutlined />추가\n            </Button>\n          </div>\n          <div>\n            <TimelineView countList={countList} detailTitle={detailTitle} detailDateString={detailDateString} detailContent={detailContent}/>\n          </div>\n        </ModifyDetailDiv>\n        <Button size=\"large\" onClick={onModifyTimeline}>수정하기</Button>\n      </Form>\n    </ModifyTimelineDiv>\n  )\n}\nexport default ModifyTimeline\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport ModifyTimeline from \"./Sections/ModifyTimeline\"\nimport Axios from \"axios\"\nimport { useParams } from \"react-router-dom\"\n\nconst TimelineItemDiv = styled.div`\n  padding: 3rem 2rem;\n`\n\nconst TimelineItem = (props) => {\n  const [timeline, setTimeline] = useState([])\n  const [detail, setDetail] = useState([])\n\n  const params = useParams()\n\n  useEffect(() => {\n    if(props.user.userData !== undefined && props.user.userData.email !== undefined) {\n      Axios.get(`/timeline/master/${props.user.userData.email}`)\n        .then(res => {\n          if(res.data) {\n            const list = res.data.filter(item => item.id.toString() === params.timelineId)\n            setTimeline(list)\n\n            Axios.get(`/timeline/detail/${list[0].id}`)\n              .then(response => {\n                if(response.data) {\n                  setDetail(response.data)\n                }\n              })\n          }\n        })\n    }\n  }, [props.user])\n\n  return (\n    <TimelineItemDiv>\n      <ModifyTimeline timeline={timeline} detail={detail} timelineId={params.timelineId} history={props.history} />\n    </TimelineItemDiv>\n  )\n}\n\nexport default TimelineItem\n","import React from \"react\"\nimport { Input } from \"antd\"\nimport { SearchOutlined } from \"@ant-design/icons\"\nimport styled from \"styled-components\"\n\nconst SearchWordDiv = styled.div`\n  width: 250px;\n  display: flex;\n  align-items: center;\n  h3 {\n    font-weight: bold;\n    width: 80px;\n    margin-bottom: 0;\n  }\n  .ant-input {\n    border-bottom: 1px solid black;\n  }\n`\n\nconst SearchWord = () => {\n  return (\n    <SearchWordDiv>\n      <h3>검색</h3>\n      <SearchOutlined />\n      <Input bordered={false} />\n    </SearchWordDiv>\n  )\n}\n\nexport default SearchWord\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { Swiper, SwiperSlide } from \"swiper/react\"\nimport \"swiper/swiper.min.css\"\nimport \"swiper/components/pagination/pagination.min.css\"\nimport \"swiper/components/navigation/navigation.min.css\"\nimport SwiperCore, { Navigation } from \"swiper/core\"\nimport { CheckOutlined } from \"@ant-design/icons\"\n\nconst SearchButtonDiv = styled.div`\n  padding: 3rem 0;\n  width: 100%;\n  .swiper-button-next, .swiper-button-prev {\n    color: black;\n  }\n  .swiper-button-next {\n    padding-left: 30px;\n  }\n  .swiper-button-prev {\n    padding-right: 30px;\n  }\n  .swiper-button-next:after, .swiper-button-prev:after {\n    font-size: 17px;\n    font-weight: bold;\n  }\n  .swiper-slide {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    div {\n      width: 62px;\n      height: 62px;\n      border-radius: 50%;\n      background-color: rgb(240, 243, 243);\n      display: flex;\n      -webkit-box-pack: center;\n      justify-content: center;\n      -webkit-box-align: center;\n      align-items: center;\n      position: relative;\n      span {\n        color: white;\n      }\n    }\n    div.checked {\n      content: \"\";\n      inset: 0px;\n      border-radius: 50%;\n      background-color: rgb(23, 161, 255);\n      mix-blend-mode: normal;\n      opacity: 0.8;\n    }\n  }\n`\n\nconst SearchButton = () => {\n  const [checkStatus, setCheckStatus] = useState([])\n\n  useEffect(() => {\n    let arr = []\n    arr[0] = \"checked\"\n    setCheckStatus(arr)\n  }, [])\n\n  const onTest = (e) => {\n\n    console.log(\"ab\");\n  }\n\n  return (\n    <SearchButtonDiv>\n      <Swiper\n        slidesPerView={8}\n        navigation={true}\n      >\n        <SwiperSlide>\n          <div className={checkStatus[0]} onClick={onTest}>\n            <CheckOutlined />\n          </div>\n          <span>전체</span>\n        </SwiperSlide>\n        <SwiperSlide>\n          <div>\n\n          </div>\n          <span>생활</span>\n        </SwiperSlide>\n        <SwiperSlide>\n          <div>\n\n          </div>\n          <span>여행</span>\n        </SwiperSlide>\n        <SwiperSlide>\n          <div>\n\n          </div>\n          <span>문화</span>\n        </SwiperSlide>\n        <SwiperSlide>\n          <div>\n\n          </div>\n          <span>경제</span>\n        </SwiperSlide>\n        <SwiperSlide>\n          <div>\n\n          </div>\n          <span>기타</span>\n        </SwiperSlide>\n        <SwiperSlide>\n          <div>\n\n          </div>\n          <span>test</span>\n        </SwiperSlide>\n        <SwiperSlide>\n          <div>\n\n          </div>\n          <span>test</span>\n        </SwiperSlide>\n        <SwiperSlide>\n          <div>\n\n          </div>\n          <span>test</span>\n        </SwiperSlide>\n      </Swiper>\n    </SearchButtonDiv>\n  )\n}\n\nexport default SearchButton\n","import React from \"react\"\nimport { Pagination } from \"antd\"\nimport styled from \"styled-components\"\n\nconst AllTimeline = (props) => {\n  return (\n    <>\n      <Pagination\n        showSizeChanger={false}\n        total={200}\n        defaultCurrent={1}\n        pageSize={20}\n      />\n    </>\n  )\n}\n\nexport default AllTimeline\n","import React, { useState, useEffect } from \"react\"\nimport SearchWord from \"./Sections/SearchWord\"\nimport SearchButton from \"./Sections/SearchButton\"\nimport AllTimeline from \"./Sections/AllTimeline\"\nimport styled from \"styled-components\"\nimport { Divider } from \"antd\"\nimport Axios from \"axios\"\n\nconst TimelineSearchDiv = styled.div`\n  padding: 3rem;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`\n\nconst TimelineSearch = () => {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    Axios.get(\"/timeline/master/list\")\n      .then(res => {\n        if(res.data) {\n          setData(res.data)\n        }\n      })\n  }, [])\n\n  return (\n    <TimelineSearchDiv>\n      <SearchWord />\n      <SearchButton />\n      <Divider />\n      <AllTimeline data={data} />\n    </TimelineSearchDiv>\n  )\n}\n\nexport default TimelineSearch\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { Form, Input, Button } from \"antd\"\nimport { useSelector } from \"react-redux\"\nimport Axios from \"axios\"\nimport MenuBar from \"./Sections/MenuBar\"\n\nconst InfoDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    // 닉네임 영역\n    #nickname {\n      display: flex;\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    .ant-input-password {\n      height: 32px;\n      input {\n        height: 100%;\n      }\n    }\n    .ant-form-item:last-child {\n      button {\n        width: 100%;\n        background: black;\n        color: #ffffff;\n        margin-top: 1rem;\n      }\n    }\n  }\n`\n\n\nconst MyInfo = () => {\n\n  const [email, setEmail] = useState(\"\")\n  const [nickname, setNickname] = useState([])\n  const [password1, setPassword1] = useState(\"\")\n  const [password2, setPassword2] = useState(\"\")\n  const [existingPw, setExistingPw] = useState(\"\")\n  const [checkDuplicate, setCheckDuplicate] = useState(false)\n  const [checkValid, setCheckValid] = useState(true)\n\n  const user = useSelector(state => state.user.userData)\n\n  useEffect(() => {\n    if(user !== undefined) {\n      setEmail(user.email)\n      setNickname(user.nickname)\n\n      Axios.get(`/member/${user.email}`)\n        .then(res => {\n          setExistingPw(res.data.password)\n        })\n    }\n  }, [user])\n\n  const onChangeNick = (e) => {\n    setNickname(e.target.value)\n    setCheckDuplicate(false)\n  }\n\n  const onChangePwd1 = (e) => {\n    setPassword1(e.target.value)\n  }\n\n  const onChangePwd2 = (e) => {\n    setPassword2(e.target.value)\n  }\n\n  // 중복확인 체크\n  const onCheckDup = () => {\n    Axios.get(\"/member/ids\")\n      .then(res => {\n        const duplicate = res.data.filter(item => item.nickname === nickname)\n        // 닉네임 중복일 경우\n        if(duplicate.length > 0) {\n          // 다른 사람 닉네임과 중복일 경우\n          if(nickname !== user.nickname) {\n            setCheckDuplicate(false)\n            alert(\"이미 사용 중인 닉네임입니다\")\n          // 내 기존 닉네임일 경우\n          } else {\n            setCheckDuplicate(true)\n            alert(\"사용할 수 있는 닉네임입니다\")\n          }\n        } else {\n          setCheckDuplicate(true)\n          alert(\"사용할 수 있는 닉네임입니다\")\n        }\n      })\n  }\n\n  const onChangeInfo = () => {\n\n    // 닉네임 중복확인 버튼 클릭하도록 하기\n    if(checkDuplicate === false) {\n      alert(\"닉네임 중복확인을 해주세요\")\n      return false\n    } else if(password1 || password2) {\n      if(password1 !== password2) {\n        alert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다\")\n        return false\n      }\n    }\n\n    const variables = {\n      \"nickname\": nickname,\n      \"password\": password1 ? password1 : existingPw\n    }\n\n    if(checkDuplicate && checkValid) {\n      Axios.put(`/member/${email}`, variables)\n        .then(res => {\n          // 닉네임, 비밀번호 변경 성공 시 페이지 새로고침\n          if(res.status === 200) {\n            window.location.reload()\n          }\n        })\n    }\n  }\n\n  return (\n    <div>\n      <MenuBar />\n      <InfoDiv>\n        <Form>\n          <Form.Item\n            label=\"이메일:\"\n            name=\"email\"\n            rules={[{ required: true }]}\n          >\n            <div>\n              { email &&\n                <Input value={email} disabled />\n              }\n            </div>\n          </Form.Item>\n          <Form.Item\n            label=\"닉네임:\"\n            name=\"nickname\"\n            rules={[{ required: true }]}\n          >\n            <div>\n              <Input value={nickname} onChange={onChangeNick} />\n              <Button onClick={onCheckDup}>중복확인</Button>\n            </div>\n          </Form.Item>\n          <Form.Item\n            label=\"비밀번호(8~16자):\"\n            name=\"password1\"\n            rules={[{ required: true, min: 8, max: 16, message: '다시 입력해 주세요' }]}\n          >\n            <Input.Password value={password1} onChange={onChangePwd1} />\n          </Form.Item>\n          <Form.Item\n            label=\"비밀번호 확인(8~16자):\"\n            name=\"password2\"\n            rules={[{ required: true, min: 8, max: 16, message: '다시 입력해 주세요' }]}\n          >\n            <Input.Password value={password2} onChange={onChangePwd2} />\n          </Form.Item>\n          <Form.Item\n            name=\"button\"\n          >\n            <Button size=\"large\" onClick={onChangeInfo}>\n              수정하기\n            </Button>\n          </Form.Item>\n        </Form>\n      </InfoDiv>\n    </div>\n  )\n}\n\nexport default MyInfo\n","import React, { useState } from \"react\"\nimport { Card, Tag } from \"antd\"\nimport styled from \"styled-components\"\nimport { Swiper, SwiperSlide } from \"swiper/react\"\nimport \"swiper/swiper.min.css\";\nimport \"swiper/components/pagination/pagination.min.css\"\nimport \"swiper/components/navigation/navigation.min.css\"\nimport SwiperCore, { Pagination,Navigation } from \"swiper/core\"\nimport { EyeOutlined, LikeOutlined } from \"@ant-design/icons\"\nimport { Link } from \"react-router-dom\"\n\nconst ViewsTopDiv = styled.div`\n  margin: 0px 40px;\n  h2 {\n    text-align: left;\n    margin-bottom: 0;\n  }\n  .swiper-container {\n    height: 100%;\n    .swiper-wrapper {\n      .ant-tag:first-child {\n        position: absolute;\n        top: 5px;\n        left: 5px;\n      }\n      .ant-tag:nth-child(2) {\n        position: absolute;\n\n      }\n      margin-top: 55px;\n      .ant-card-meta-title {\n        text-align: left;\n      }\n    }\n    .ant-card-cover img {\n      width: 100%;\n      height: 150px;\n    }\n    .swiper-button-next {\n      top: 10%;\n    }\n    .swiper-button-prev {\n      top: 10%;\n      position: absolute;\n      left: 94%;\n    }\n    .swiper-button-next:after, .swiper-button-prev:after {\n      font-size: 15px;\n      font-weight: bold;\n    }\n    .ant-card-meta + div {\n      display: flex;\n      justify-content: flex-end;\n      align-items: center;\n      margin-top: 20px;\n      div {\n        display: flex;\n        align-items: center;\n        margin-right: 3px;\n        span {\n          margin-right: 2px;\n          font-size: 15px;\n        }\n      }\n      & + .ant-tag {\n        width: 60px;\n        height: 60px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        border-radius: 50%;\n        position: absolute;\n        top: 120px;\n        right: 0;\n      }\n    }\n  }\n`\n\nSwiperCore.use([Pagination,Navigation])\n\nconst { Meta } = Card\n\nconst ViewsTop = (props) => {\n  const [swiperRef, setSwiperRef] = useState(\"\")\n  return (\n    <ViewsTopDiv>\n    <h2>오늘의 추천 TOP 10</h2>\n      <Swiper\n        slidesPerView={5}\n        centeredSlides={false}\n        spaceBetween={15}\n        navigation={{nextEl: '.swiper-button-next', prevEl: '.swiper-button-prev'}}\n      >\n      <div className=\"swiper-button-prev swiper-button-black\"></div>\n      <div className=\"swiper-button-next swiper-button-black\"></div>\n      {props.viewsList && props.viewsList.map((item, i) => (\n        <SwiperSlide key={i}>\n          <Link to={`/timeline/${item.id}`}>\n            <Card\n              style={{ width: '100%' }}\n              cover={\n                <img\n                  alt=\"img\"\n                  src={props.viewsList[i].imgFullPath}\n                />\n              }\n            >\n              <Tag color=\"black\">{props.viewsList[i].category}</Tag>\n              <Meta\n                title={props.viewsList[i].title}\n              />\n\n              <div>\n                <div>\n                  <EyeOutlined />\n                  <span>{props.viewsList[i].viewCount}</span>\n                </div>\n                <div>\n                  <LikeOutlined />\n                  <span>{props.viewsList[i].likeCount}</span>\n                </div>\n              </div>\n              {props.viewsList[i].complete ?\n                <Tag color=\"mediumpurple\">\n                  <span>진행완료</span>\n                </Tag>\n                :\n                <Tag color=\"skyblue\">\n                  <span>진행중</span>\n                </Tag>\n              }\n            </Card>\n          </Link>\n        </SwiperSlide>\n      ))}\n      </Swiper>\n    </ViewsTopDiv>\n  )\n}\n\nexport default ViewsTop\n","import React, { useState } from \"react\"\nimport { Card, Tag } from \"antd\"\nimport styled from \"styled-components\"\nimport { Swiper, SwiperSlide } from \"swiper/react\"\nimport \"swiper/swiper.min.css\"\nimport \"swiper/components/pagination/pagination.min.css\"\nimport \"swiper/components/navigation/navigation.min.css\"\nimport SwiperCore, { Pagination, Navigation } from \"swiper/core\"\nimport { EyeOutlined, LikeOutlined } from \"@ant-design/icons\"\nimport { Link } from \"react-router-dom\"\n\nconst LikesTopDiv = styled.div`\n  margin: 0px 40px;\n  h2 {\n    text-align: left;\n    margin-bottom: 0;\n  }\n  .swiper-container {\n    height: 100%;\n    .swiper-wrapper {\n      .ant-tag:first-child {\n        position: absolute;\n        top: 5px;\n        left: 5px;\n      }\n      .ant-tag:nth-child(2) {\n        position: absolute;\n\n      }\n      margin-top: 55px;\n      .ant-card-meta-title {\n        text-align: left;\n      }\n    }\n    .ant-card-cover img {\n      width: 100%;\n      height: 150px;\n    }\n    .swiper-button-next {\n      top: 10%;\n    }\n    .swiper-button-prev {\n      top: 10%;\n      position: absolute;\n      left: 94%;\n    }\n    .swiper-button-next:after, .swiper-button-prev:after {\n      font-size: 15px;\n      font-weight: bold;\n    }\n    .ant-card-meta + div {\n      display: flex;\n      justify-content: flex-end;\n      align-items: center;\n      margin-top: 20px;\n      div {\n        display: flex;\n        align-items: center;\n        margin-right: 3px;\n        span {\n          margin-right: 2px;\n          font-size: 15px;\n        }\n      }\n      & + .ant-tag {\n        width: 60px;\n        height: 60px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        border-radius: 50%;\n        position: absolute;\n        top: 120px;\n        right: 0;\n      }\n    }\n  }\n`\n\nSwiperCore.use([Pagination,Navigation])\n\nconst { Meta } = Card\n\nconst LikesTop = (props) => {\n  return (\n    <LikesTopDiv>\n    <h2>추천 타임라인 TOP 10</h2>\n      <Swiper\n        slidesPerView={5}\n        centeredSlides={false}\n        spaceBetween={15}\n        navigation={{nextEl: '.swiper-button-next', prevEl: '.swiper-button-prev'}}\n      >\n      <div className=\"swiper-button-prev swiper-button-black\"></div>\n      <div className=\"swiper-button-next swiper-button-black\"></div>\n      {props.likesList && props.likesList.map((item, i) => (\n        <SwiperSlide key={i}>\n          <Link to={`/timeline/${item.id}`}>\n            <Card\n              style={{ width: '100%' }}\n              cover={\n                <img\n                  alt=\"img\"\n                  src={props.likesList[i].imgFullPath}\n                />\n              }\n            >\n              <Tag color=\"black\">{props.likesList[i].category}</Tag>\n              <Meta\n                title={props.likesList[i].title}\n              />\n\n              <div>\n                <div>\n                  <EyeOutlined />\n                  <span>{props.likesList[i].viewCount}</span>\n                </div>\n                <div>\n                  <LikeOutlined />\n                  <span>{props.likesList[i].likeCount}</span>\n                </div>\n              </div>\n              {props.likesList[i].complete ?\n                <Tag color=\"mediumpurple\">\n                  <span>진행완료</span>\n                </Tag>\n                :\n                <Tag color=\"skyblue\">\n                  <span>진행중</span>\n                </Tag>\n              }\n            </Card>\n          </Link>\n        </SwiperSlide>\n      ))}\n      </Swiper>\n    </LikesTopDiv>\n  )\n}\n\nexport default LikesTop\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { Divider } from \"antd\"\nimport ViewsTop from \"./Sections/ViewsTop\"\nimport LikesTop from \"./Sections/LikesTop\"\nimport Axios from \"axios\"\n\nconst MainDiv = styled.div`\n  padding: 3rem 0;\n`\n\nconst Main = () => {\n  const [viewsList, setViewsList] = useState([])\n  const [likesList, setLikesList] = useState([])\n\n  useEffect(() => {\n    // 조회수 TOP 10\n    Axios.get(\"/timeline/master/list/view\")\n      .then(res => {\n        if(res.data) {\n          setViewsList(res.data)\n        }\n      })\n\n    // 추천수 TOP 10\n    Axios.get(\"/timeline/master/list/like\")\n      .then(res => {\n        if(res.data) {\n          setLikesList(res.data)\n        }\n      })\n  }, [])\n\n  return (\n    <MainDiv>\n      <ViewsTop viewsList={viewsList} />\n      <Divider />\n      <LikesTop likesList={likesList} />\n    </MainDiv>\n  )\n}\n\nexport default Main\n","import React, { useEffect } from \"react\"\nimport { Card, Tag } from \"antd\"\nimport { EyeOutlined, LikeOutlined } from \"@ant-design/icons\"\nimport styled from \"styled-components\"\n\nconst TopMasterDiv = styled.div`\n  .ant-card-body {\n    & > div {\n      display: flex;\n      justify-content: space-between;\n      align-items: flex-end;\n      /* 제목, 닉네임 */\n      div:nth-child {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      }\n      /* 조회수, 추천수 */\n      div:last-child {\n        display: flex;\n        div {\n          margin-left: 5px;\n          display: flex;\n          align-items: center;\n          span {\n            margin-left: 2px;\n          }\n        }\n      }\n    }\n    .ant-card-meta {\n      .ant-card-meta-title {\n        text-align: left;\n        font-size: 32px;\n        font-weight: bold;\n        margin-bottom: 20px;\n      }\n      & + div {\n        justify-content: center;\n        span {\n          font-size: 18px;\n          color: mediumpurple;\n        }\n      }\n    }\n  }\n`\n\nconst { Meta } = Card\n\nconst TopMaster = (props) => {\n  useEffect(() => {\n\n  })\n  return (\n    <TopMasterDiv>\n      {props.masterData &&\n        <Card>\n          <div>\n            <div>\n              <Tag color=\"black\">{props.masterData.category}</Tag>\n              {props.masterData.complete ?\n                <Tag color=\"mediumpurple\">\n                  <span>진행완료</span>\n                </Tag>\n                :\n                <Tag color=\"skyblue\">\n                  <span>진행중</span>\n                </Tag>\n              }\n            </div>\n            <div>\n              <Meta\n                title={props.masterData.title}\n              />\n              <div>\n                <span>{props.nickname}</span>\n              </div>\n            </div>\n            <div>\n              <div>\n                <EyeOutlined />\n                <span>{props.masterData.viewCount}</span>\n              </div>\n              <div>\n                <LikeOutlined />\n                <span>{props.masterData.likeCount}</span>\n              </div>\n            </div>\n          </div>\n        </Card>\n      }\n    </TopMasterDiv>\n  )\n}\n\nexport default TopMaster\n","import React from \"react\"\nimport { Timeline, TimelineItem }  from \"vertical-timeline-component-for-react\"\nimport styled from \"styled-components\"\nimport { Input } from \"antd\"\n\nconst MiddleDetailDiv = styled.div`\n  width: 90%;\n  .entry {\n    color: #e86971;\n    height: 495px;\n  }\n  .body-container p {\n    word-break: break-all;\n    .ant-input {\n      background: #efefef;\n    }\n  }\n`\n\nconst { TextArea } = Input\n\nconst MiddleDetail = (props) => {\n  return (\n    <MiddleDetailDiv>\n      <Timeline lineColor={'black'}>\n        {props.countList && props.countList.map((item, i) => (\n          <TimelineItem\n            key={i}\n            id={props.id[i]}\n            dateText={props.detailDateString !== undefined ? props.detailDateString[i] : \"\"}\n            bodyContainerStyle={{\n              background: '#efefef',\n              padding: '20px',\n              borderRadius: '8px',\n              marginBottom: \"100px\",\n            }}\n          >\n            <h3>{props.title[i]}</h3>\n            <TextArea\n              autoSize={true}\n              bordered={false}\n              value={props.content[i]}\n            />\n          </TimelineItem>\n        ))}\n      </Timeline>\n    </MiddleDetailDiv>\n  )\n}\n\nexport default MiddleDetail\n","import React, { useState } from \"react\"\nimport { Space, Comment, Tooltip, Rate, List, Input, Button, Divider } from \"antd\"\nimport moment from \"moment\"\nimport styled from \"styled-components\"\nimport Axios from \"axios\"\n\nconst BottomCommentDiv = styled.div`\n  z-index: 10;\n  position: relative;\n  background: white;\n  .ant-space {\n    display: flex;\n    margin-bottom: 18px;\n    h3 {\n      margin-bottom: 0;\n    }\n    & + div {\n      display: flex;\n      button {\n        height: 98px;\n        margin-left: 16px;\n      }\n    }\n  }\n  .ant-comment {\n    button {\n      border: none;\n    }\n    button:hover, button:focus, button:active, button::after {\n      outline: none;\n      border: none;\n      box-shadow: none !important;\n      color: black;\n    }\n  }\n  .ant-comment-content-author {\n    display: flex;\n    align-items: center;\n    div {\n      ul {\n        margin-left: 10px;\n      }\n    }\n  }\n  .ant-comment-content-detail {\n    text-align: left;\n  }\n  .ant-comment-actions {\n    text-align: right;\n  }\n`\n\nconst { TextArea } = Input\n\nconst BottomComment = (props) => {\n  const [data, setData] = useState([])\n\n  return (\n    <BottomCommentDiv>\n      <Space>\n        <h3>댓글 ({props.comment.length})</h3>\n        { props.hideInput ?\n          <></>\n          :\n          <Rate onChange={props.onChangeStar} />\n        }\n      </Space>\n      { props.hideInput ?\n        <></>\n        :\n        <div>\n          <TextArea\n            autoSize={{ minRows: 4, maxRows: 4 }}\n            onChange={props.onChangeCommentContent}\n          />\n          <Button onClick={props.onSaveComment}>저장</Button>\n        </div>\n      }\n      <Divider />\n      <List\n        className=\"comment-list\"\n        itemLayout=\"horizontal\"\n        dataSource={props.comment}\n      >\n        {props.comment && props.comment.map((item, i) => (\n          <li key={i}>\n            <Comment\n              actions={props.user !== undefined && props.user.nickname === item.nickname\n                ?\n                [<Button onClick={() => props.onModify(i, item.star, item.content)}><span>수정</span></Button>, <Button onClick={() => props.onDelete(item.content, item.masterId, item.nickname, item.star)}><span>삭제</span></Button>]\n                : \"\"\n              }\n              author={item.nickname}\n              content={(\n              props.modifyStatus && i === props.modifyIndex ?\n                <TextArea\n                  autoSize={{ minRows: 4, maxRows: 4 }}\n                  onChange={props.onChangeCommentContent}\n                  value={props.modifyStatus && i === props.modifyIndex ? props.commentContent : item.content}\n                />\n                :\n                <p>{item.content}</p>\n              )}\n              datetime={(\n              <div>\n                <span>{moment().format('YYYY-MM-DD')}</span>\n                <Rate value={props.modifyStatus && i === props.modifyIndex ? props.star : item.star} disabled={props.modifyStatus && i === props.modifyIndex ? false : true} onChange={props.onChangeStar}/>\n              </div>\n              )}\n            />\n            <Divider />\n          </li>\n        ))}\n      </List>\n    </BottomCommentDiv>\n  )\n}\n\nexport default BottomComment\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"react-scroll\"\n\nconst SideScrollDiv = styled.div`\n  width: 10%;\n  position: fixed;\n  right: 5rem;\n  margin-top: 10px;\n`\n\nconst SideScroll = (props) => {\n  return (\n    <SideScrollDiv>\n      {props.countList && props.countList.map((item, i) => (\n        <div key={i}>\n          <Link to={props.id[i] || \"\"} spy={true} smooth={true}>\n            <span>Day {i + 1}</span>\n          </Link>\n        </div>\n      ))}\n    </SideScrollDiv>\n  )\n}\n\nexport default SideScroll\n","import React, { useState } from \"react\"\nimport { Button } from \"antd\"\nimport { LikeOutlined, LikeFilled } from \"@ant-design/icons\"\nimport styled from \"styled-components\"\nimport Axios from \"axios\"\n\nconst LikeToggleDiv = styled.div`\n  height: 185px;\n  z-index: 10;\n  position: relative;\n  background: white;\n  button {\n    border: none;\n    color: #40a9ff;\n    svg {\n      width: 25px;\n      height: 25px;\n    }\n  }\n  button:hover, button:focus, button:active, button::after {\n    outline: none;\n    border: none;\n    box-shadow: none !important;\n  }\n`\nconst LikeToggle = (props) => {\n\n  return (\n    <LikeToggleDiv>\n      <Button onClick={props.onToggleLike}>\n        { props.toggle ?\n          <div>\n            <LikeFilled />\n            <span>{props.likeCount}</span>\n          </div>\n          :\n          <div>\n            <LikeOutlined />\n            <span>{props.likeCount}</span>\n          </div>\n        }\n      </Button>\n    </LikeToggleDiv>\n  )\n}\n\nexport default LikeToggle\n","import React, { useState, useEffect } from \"react\"\nimport TopMaster from \"./Sections/TopMaster\"\nimport MiddleDetail from \"./Sections/MiddleDetail\"\nimport BottomComment from \"./Sections/BottomComment\"\nimport SideScroll from \"./Sections/SideScroll\"\nimport LikeToggle from \"./Sections/LikeToggle\"\nimport styled from \"styled-components\"\nimport { useParams } from \"react-router-dom\"\nimport Axios from \"axios\"\n\nconst DetailDiv = styled.div`\n  margin: 3rem 5rem;\n`\n\nconst MiddleDiv = styled.div`\n  width: 100%;\n  display: flex;\n`\n\nconst Detail = (props) => {\n  const [masterData, setMasterData] = useState([])\n  const [nickname, setNickname] = useState(\"\")\n  const [countList, setCountList] = useState([])\n  const [detailDateString, setDetailDateString] = useState([])\n  const [title, setTitle] = useState([])\n  const [content, setContent] = useState([])\n  const [id, setId] = useState([])\n  const [loginStatus, setLoginStatus] = useState(false)\n  const [comment, setComment] = useState([])\n  const [toggle, setToggle] = useState(false)\n  const [likeCount, setLikeCount] = useState(0)\n  const [star, setStar] = useState(\"\")\n  const [commentContent, setCommentContent] = useState(\"\")\n  const [modifyStatus, setModifyStatus] = useState(false)\n  const [hideInput, setHideInput] = useState(false)\n  const [modifyIndex, setModifyIndex] = useState(0)\n\n  const param = useParams()\n\n  useEffect(() => {\n    let detailDatestringArr = [...detailDateString]\n    let titleArr = [...title]\n    let contentArr = [...content]\n    let idArr = [...id]\n    let refineDate = []\n\n    // timeline master 가져오기\n    Axios.get(`/timeline/master/list`)\n      .then(res => {\n        if(res.data) {\n          const data = res.data.filter(item => item.id.toString() === param.timelineId)\n          setMasterData(data[0])\n          Axios.get(`/auth/nicknames/${data[0].author}`)\n            .then(res => {\n              setNickname(res.data.nickname)\n            })\n        }\n      })\n\n    // timeline detail 가져오기\n    Axios.get(`/timeline/detail/${param.timelineId}`)\n      .then(res => {\n        if(res.data) {\n          setCountList(Object.keys(res.data))\n          setDetailDateString(res.data.scheduleDate)\n          res.data.forEach((item, i) => {\n            refineDate[i] = item.scheduleDate\n            titleArr[i] = item.title\n            contentArr[i] = item.content\n            idArr[i] = item.id.toString()\n          })\n\n          // scheduleDate에 - 문자열 붙이기\n          refineDate.forEach((item, i) => {\n            detailDatestringArr[i] = item.substring(0, 4) + \"-\" + item.substring(4, 6) + \"-\" + item.substring(6, 8)\n          })\n\n          setDetailDateString(detailDatestringArr)\n          setTitle(titleArr)\n          setContent(contentArr)\n          setId(idArr)\n        }\n      })\n\n      // comment 리스트 가져오기\n      Axios.get(\"/timeline/comment/list\")\n        .then(res => {\n          const data = res.data.filter(item => item.masterId.toString() === param.timelineId)\n          setComment(data)\n        })\n  }, [])\n\n  useEffect(() => {\n    if(props.user.userData !== undefined) {\n      setLoginStatus(true)\n\n      // 렌더링 되자 마자 likeCount 가져오기\n      Axios.get(\"/timeline/like/list\")\n        .then(res => {\n          const data = res.data.filter(item => item.masterId.toString() === param.timelineId)\n          setLikeCount(data.length)\n          Axios.get(`/auth/getId/${props.user.userData.email}`)\n            .then(userRes => {\n              if(userRes.data) {\n                const checkMyLikes = data.filter(item => item.memberId === userRes.data)\n                // 현재 유저가 like 추천한 글인지 체크 후 아이콘(empty, full) 세팅\n                if(checkMyLikes.length !== 0) {\n                  setToggle(true)\n                }\n              }\n            })\n        })\n\n      // 댓글 작성했는지 안 했는지 상태값 넣어서 comment input 영역 숨기거나 보여주기\n      const check = comment.filter(item => item.nickname === props.user.userData.nickname)\n      if(check.length !== 0) {\n        setHideInput(true)\n      }\n    }\n  }, [props.user])\n\n  const onChangeStar = (value) => {\n    setStar(value)\n  }\n\n  const onChangeCommentContent = (e) => {\n    setCommentContent(e.target.value)\n  }\n\n  const onToggleLike = () => {\n    // 로그인한 상태이고 email 값 있을 때\n    if(props.user.userData.email) {\n      Axios.get(`/auth/getId/${props.user.userData.email}`)\n        .then(res => {\n          if(res.data) {\n            const variables = {\n              masterId: parseInt(param.timelineId),\n              memberId: res.data\n            }\n\n            // 추천한 상태에서 추천 취소할 때 Icon full->empty\n            if(toggle) {\n              Axios.post(\"/timeline/like/change\", variables)\n                .then(res => {\n                  if(res.data) {\n                    setLikeCount(res.data.likeCount)\n                    setToggle(false)\n                  }\n                })\n              // Axios.post(\"/timeline/like/change\", variables)\n            // 추천 안 한 상태에서 추천할 때 Icon emtpy->full\n            } else {\n              Axios.post(\"/timeline/like/change\", variables)\n                .then(res => {\n                  if(res.data) {\n                    setLikeCount(res.data.likeCount)\n                    setToggle(true)\n                  }\n                })\n            }\n\n          }\n        })\n    }\n  }\n\n  const onSaveComment = () => {\n    if(props.user.userData === undefined) {\n      alert(\"로그인 후 작성 가능합니다\")\n    } else {\n      const variables = {\n        content: commentContent,\n        masterId: parseInt(param.timelineId),\n        nickname: props.user !== undefined ? props.user.userData.nickname : \"\",\n        star: star\n      }\n\n      // 댓글 내용 유효성 체크\n      if(!commentContent || !param.timelineId || !star) {\n        alert(\"내용을 입력해 주세요\")\n        return false\n      }\n\n      Axios.post(\"/timeline/comment\", variables)\n        .then(res => {\n          if(res.status === 200) {\n            alert(\"댓글 작성을 완료했습니다\")\n            // 댓글 저장하고 나서 다시 댓글 불러오기\n            Axios.get(\"/timeline/comment/list\")\n              .then(res => {\n                const data = res.data.filter(item => item.masterId.toString() === param.timelineId)\n                setComment(data)\n                // 작성한 댓글이 있을 경우 새 댓글 입력하기 위한 영역 숨기기\n                setHideInput(true)\n              })\n          }\n        })\n    }\n  }\n\n  const onDelete = (commentContent, id, nickname, star) => {\n    let variables = {\n      content: commentContent,\n      masterId: id,\n      nickname: nickname,\n      star: star\n    }\n\n    //\n    // Axios.delete(\"/timeline/comment\", variables)\n    //   .then(res => {\n    //     console.log(res);\n    //   })\n  }\n\n  const onModify = (i, stars, contents) => {\n    // 수정 버튼 클릭하면 comment 영역 변경\n    setModifyStatus(true)\n    setModifyIndex(i)\n    setStar(stars)\n    setCommentContent(contents)\n  }\n\n  return (\n    <DetailDiv>\n      <TopMaster masterData={masterData} nickname={nickname} />\n      <MiddleDiv>\n        <MiddleDetail countList={countList} detailDateString={detailDateString} title={title} content={content} id={id} />\n        <SideScroll countList={countList} id={id} />\n      </MiddleDiv>\n      { /* 로그인 시에만 추천 버튼 노출 */ }\n      { loginStatus &&\n        <LikeToggle toggle={toggle} onToggleLike={onToggleLike} likeCount={likeCount} />\n      }\n      <BottomComment comment={comment} user={props.user.userData} onSaveComment={onSaveComment} onChangeCommentContent={onChangeCommentContent} onChangeStar={onChangeStar}\n        onDelete={onDelete} onModify={onModify} hideInput={hideInput} modifyStatus={modifyStatus} modifyIndex={modifyIndex} star={star} commentContent={commentContent} />\n    </DetailDiv>\n  )\n}\n\nexport default Detail\n","export const AUTH_USER = \"auth_user\"\n","import Axios from 'axios'\nimport {\n  AUTH_USER,\n} from './types'\n\nexport function auth(email) {\n  const request = Axios.get(`/member/${email}`)\n    .then(res => res.data)\n\n  return {\n    type: AUTH_USER,\n    payload: request\n  }\n}\n","import React, { useEffect } from \"react\"\nimport { auth } from \"../_actions/user_actions\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useCookies } from \"react-cookie\"\nimport Axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\n\nexport default function authHoc(SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n      const [cookies, setCookie, removeCookie] = useCookies([])\n      let user = useSelector(state => state.user)\n      const history = useHistory()\n      const dispatch = useDispatch()\n\n      const removeCookies = () => {\n        removeCookie(\"tl_e\")\n        removeCookie(\"tl_re\")\n        removeCookie(\"tl_exp\")\n        removeCookie(\"tl_token\")\n        window.location.reload()\n        history.push(\"/login\")\n      }\n\n      useEffect(() => {\n        if(cookies.tl_e && cookies.tl_token && cookies.tl_re && cookies.tl_exp) {\n          const date = new Date()\n          const expTime = parseInt(cookies.tl_exp)\n\n          const tokens = {\n            \"accessToken\": cookies.tl_token,\n            \"refreshToken\": cookies.tl_re\n          }\n\n          let over3h = expTime + 10800000\n\n          if(date.getTime() > expTime) {\n            // 로그인 후 3시간 이상 지났을 때는 cookie 삭제\n            if(date.getTime() > over3h) {\n              removeCookies()\n            }\n\n            Axios.post(\"/auth/reissue\", tokens)\n              .then(res => {\n                setCookie(\"tl_token\", res.data.accessToken)\n                setCookie(\"tl_exp\", res.data.accessTokenExpiresIn)\n                setCookie(\"tl_re\", res.data.refreshToken)\n                history.push(\"/mypage\")\n                window.location.reload()\n              })\n              .catch(err => {\n                removeCookies()\n              })\n            }\n\n          // member 정보 가져오기 위해 header에 token 담아서 넘김\n          Axios.defaults.headers.common['Authorization'] = `Bearer ${cookies.tl_token}`\n          dispatch(auth(cookies.tl_e))\n        // cookie에 token 관련 값 4개 중 하나라도 없으면 쿠키 삭제 후 login 페이지로 이동\n        } else {\n          if (option) {\n            removeCookie(\"tl_e\")\n            removeCookie(\"tl_re\")\n            removeCookie(\"tl_exp\")\n            removeCookie(\"tl_token\")\n            history.push(\"/login\")\n          }\n        }\n      }, [cookies])\n\n      return (\n        <SpecificComponent {...props} user={user} />\n      )\n    }\n  return AuthenticationCheck\n}\n","import React, { Suspense } from \"react\"\nimport { Switch, Route } from \"react-router-dom\"\nimport \"./App.css\"\nimport NavBar from \"./components/NavBar/NavBar\"\nimport LoginPage from \"./components/AuthPage/LoginPage\"\nimport SignupPage from \"./components/AuthPage/SignupPage\"\nimport FindPwPage from \"./components/AuthPage/FindPwPage\"\nimport MyPage from \"./components/MyPage/MyPage\"\nimport MyTimeline from \"./components/MyPage/MyTimeline\"\nimport CreateTimeline from \"./components/CreateTimeline/CreateTimeline\"\nimport TimelineList from \"./components/ManageTimeline/TimelineList\"\nimport TimelineItem from \"./components/ManageTimeline/TimelineItem\"\nimport TimelineSearch from \"./components/TimelineSearch/TimelineSearch\"\nimport MyInfo from \"./components/MyPage/MyInfo\"\nimport Main from \"./components/Main/Main\"\nimport Detail from \"./components/Detail/Detail\"\nimport Auth from \"./hoc/auth\"\n\nfunction App() {\n  return (\n    <Suspense fallback={(<div>...</div>)}>\n      <NavBar />\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Main}></Route>\n          <Route exact path=\"/timeline/:timelineId\" component={Auth(Detail, false)}></Route>\n          <Route exact path=\"/login\" component={LoginPage}></Route>\n          <Route exact path=\"/signup\" component={SignupPage}></Route>\n          <Route exact path=\"/findpw\" component={FindPwPage}></Route>\n          <Route exact path=\"/mypage\" component={Auth(MyPage, true)}></Route>\n          <Route exact path=\"/mytimeline\" component={Auth(MyTimeline, true)}></Route>\n          <Route exact path=\"/myinfo\" component={Auth(MyInfo, true)}></Route>\n          <Route exact path=\"/createtimeline\" component={Auth(CreateTimeline, true)}></Route>\n          <Route exact path=\"/timelinelist\" component={Auth(TimelineList, true)}></Route>\n          <Route exact path=\"/timelinelist/:timelineId\" component={Auth(TimelineItem, true)}></Route>\n          <Route exact path=\"/search/timeline\" component={Auth(TimelineSearch, false)}></Route>\n        </Switch>\n      </div>\n    </Suspense>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux'\nimport user from './user_reducer'\n\nconst rootReducer = combineReducers({\n  user,\n})\n\nexport default rootReducer\n","import {\n  AUTH_USER,\n} from '../_actions/types'\n\nexport default function UserReducer(state={}, action) {\n  switch (action.type) {\n    case AUTH_USER:\n      return {...state, userData: { email: action.payload.email, nickname: action.payload.nickname } }\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport promiseMiddleware from 'redux-promise'\nimport ReduxThunk from 'redux-thunk'\nimport rootReducer from './_reducers'\nimport { ConfigProvider } from 'antd';\nimport koKR from 'antd/lib/locale/ko_KR';\n\nconst store = createStore(rootReducer, compose(\n    applyMiddleware(promiseMiddleware, ReduxThunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  )\n)\n\nReactDOM.render(\n  <Provider\n    store={store}\n  >\n    <BrowserRouter>\n      <ConfigProvider locale={koKR}>\n        <App />\n      </ConfigProvider>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}