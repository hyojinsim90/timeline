{"version":3,"sources":["components/NavBar/NavBar.js","components/AuthPage/LoginPage.js","components/AuthPage/SignupPage.js","components/AuthPage/FindPwPage.js","components/MyPage/Sections/MenuBar.js","components/MyPage/MyPage.js","components/MyPage/MyTimeline.js","components/CreateTimeline/Sections/TimelineDetail.js","components/CreateTimeline/Sections/TimelineView.js","components/CreateTimeline/CreateTimeline.js","components/TimelinePage/TimelinePage.js","components/MyPage/MyInfo.js","_actions/types.js","_actions/user_actions.js","hoc/auth.js","App.js","reportWebVitals.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["Logo","styled","div","MenuList","LogoM","NavBar","props","useState","toggleMenu","setToggleMenu","toggleBar","setToggleBar","useCookies","cookies","removeCookie","auth","setAuth","useEffect","undefined","tl_token","onLogout","tl_e","Axios","get","then","res","window","location","reload","history","to","selectedKeys","mode","Item","onClick","type","style","marginBottom","MenuOutlined","MenuFoldOutlined","defaultSelectedKeys","theme","inlineCollapsed","LoginDiv","LoginPage","email","setEmail","password","setPassword","errorMessage","setErrorMessage","setCookie","useHistory","label","name","rules","required","value","onChange","e","target","Password","color","fontSize","border","padding","borderRadius","size","variables","post","data","accessToken","accessTokenExpiresIn","refreshToken","push","catch","err","SignupDiv","SignupPage","nickname","setNickname","password1","setPassword1","password2","setPassword2","onSignup","onSubmit","min","max","message","FindPwDiv","FindPwPage","variable","alert","MenuDiv","MenuBar","user","useSelector","state","userData","lg","sm","xs","shape","InfoCircleOutlined","FieldTimeOutlined","FundProjectionScreenOutlined","QuestionCircleOutlined","MyPage","TimelineDiv","MyTimeline","gutter","span","title","bordered","extra","DetailDiv","TextArea","Input","TimelineDetail","countList","map","item","i","onDeleteDetail","CloseSquareOutlined","detailTitle","onChangeDetailTitle","detailDate","date","dateString","onChangeDate","autoSize","minRows","maxRows","detailContent","onchangeDetailContent","TimelineView","lineColor","dateText","detailDateString","CreateTimelineDiv","Option","Select","CreateTimeline","setTitle","setCountList","setDetailTitle","setDetailDate","setDetailDateString","setDetailContent","category","setCategory","complete","setComplete","open","setOpen","onCreateTimeline","detailList","valid","length","forEach","id","year","_d","getFullYear","toString","month","getMonth","getDate","response","console","log","defaultValue","newCountArr","filter","arr","titleArr","splice","onDeleteDetailTitle","dateArr","datestringArr","onDeleteDetailDate","contentArr","onDeleteDetailContent","detailTitleArr","detailDateArr","detailDatestringArr","detailContentArr","countArr","counter","slice","PlusCircleOutlined","TimelinePage","dateInnerStyle","background","bodyContainerStyle","boxShadow","dateComponent","display","float","InfoDiv","MyInfo","existingPw","setExistingPw","checkDuplicate","setCheckDuplicate","checkValid","disabled","put","status","AUTH_USER","request","payload","authHoc","SpecificComponent","option","AuthenticationCheck","dispatch","useDispatch","tl_re","tl_exp","Date","expTime","parseInt","tokens","getTime","defaults","headers","common","App","fallback","className","exact","path","component","Auth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","promiseMiddleware","ReduxThunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","locale","koKR","document","getElementById"],"mappings":"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","file":"static/js/main.977382df.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Menu, Button } from 'antd'\nimport styled from 'styled-components'\nimport { BrowserView, MobileView } from 'react-device-detect'\nimport { MenuOutlined, MenuFoldOutlined } from '@ant-design/icons'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { useCookies } from \"react-cookie\"\nimport Axios from \"axios\"\n\nconst Logo =  styled.div`\n  font-weight: bold;\n  font-size: 3.5vh;\n  padding: 1rem;\n  span {\n    color: #f0f0f0;\n  }\n  a {\n    color: black !important;\n  }\n  + div {\n    border-bottom: 1px solid #f0f0f0;\n  }\n`;\n\nconst MenuList = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst LogoM = styled.div`\n  font-weight: bold;\n  font-size: 3.5vh;\n  padding: 1rem;\n  display: flex;\n  justify-content: space-between;\n  span {\n    color: #f0f0f0;\n  }\n  a {\n    color: black !important;\n  }\n\n  Button {\n    background: black !important;\n    border: none;\n  }\n`;\n\nconst NavBar = (props) => {\n\n  const [toggleMenu, setToggleMenu] = useState(false)\n  const [toggleBar, setToggleBar] = useState(true)\n  const [cookies, setCookie, removeCookie] = useCookies([])\n  const [auth, setAuth] = useState(false)\n\n  useEffect(() => {\n    if(cookies.tl_token !== undefined) {\n      setAuth(true)\n    }\n  }, [cookies])\n\n  const toggleChange = () => {\n    setToggleMenu(!toggleMenu)\n    setToggleBar(!toggleBar)\n  }\n\n  const onMenuClick = () => {\n    setToggleMenu(!toggleMenu)\n    setToggleBar(!toggleBar)\n  }\n\n  const onLogout = () => {\n    if(auth && cookies.tl_e) {\n      Axios.get(`/auth/logout/${cookies.tl_e}`)\n        .then(res => {\n          removeCookie(\"tl_e\")\n          removeCookie(\"tl_re\")\n          removeCookie(\"tl_exp\")\n          removeCookie(\"tl_token\")\n          window.location.reload()\n          props.history(\"/login\")\n        })\n    }\n  }\n\n  return(\n    <div>\n      <BrowserView>\n        <Logo>\n          <Link to=\"/\">\n            TI<span>MELI</span>NE\n          </Link>\n        </Logo>\n        <MenuList>\n          <Menu selectedKeys=\"mail\" mode=\"horizontal\">\n            <Menu.Item key=\"timeline\">\n              타임라인\n            </Menu.Item>\n            <Menu.Item key=\"class\">\n              클래스\n            </Menu.Item>\n          </Menu>\n          <Menu mode=\"horizontal\">\n            <Menu.Item key=\"mypage\">\n              <Link to=\"/mypage\">\n                마이페이지\n              </Link>\n            </Menu.Item>\n            { auth ?\n            <>\n              <Menu.Item key=\"logout\" onClick={onLogout}>\n                로그아웃\n              </Menu.Item>\n            </>\n            :\n            <>\n              <Menu.Item key=\"login\">\n                <Link to=\"/login\">\n                  로그인\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"signup\">\n                <Link to=\"/signup\">\n                  회원가입\n                </Link>\n              </Menu.Item>\n            </>\n            }\n          </Menu>\n        </MenuList>\n      </BrowserView>\n      <MobileView>\n        <LogoM>\n          <Link to=\"/\">\n            TI<span>MELI</span>NE\n          </Link>\n          <div >\n            <Button type=\"primary\" onClick={toggleChange} style={{ marginBottom: 16 }}>\n              { toggleBar ? <MenuOutlined /> : <MenuFoldOutlined /> }\n            </Button>\n          </div>\n        </LogoM>\n        { toggleMenu ?\n          <Menu\n            defaultSelectedKeys={['1']}\n            mode=\"inline\"\n            theme=\"light\"\n            inlineCollapsed={toggleBar}\n            onClick={onMenuClick}\n          >\n            <Menu.Item key=\"timeline\">\n              타임라인\n            </Menu.Item>\n            <Menu.Item key=\"class\">\n              클래스\n            </Menu.Item>\n            <Menu.Item key=\"mypage\">\n              <Link to=\"/mypage\">\n                마이페이지\n              </Link>\n            </Menu.Item>\n            { auth ?\n              <>\n                <Menu.Item key=\"logout\" onClick={onLogout}>\n                  로그아웃\n                </Menu.Item>\n              </>\n              :\n              <>\n                <Menu.Item key=\"login\">\n                  <Link to=\"/login\">\n                    로그인\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"signup\">\n                  <Link to=\"/signup\">\n                    회원가입\n                  </Link>\n                </Menu.Item>\n              </>\n            }\n          </Menu>\n          : <></>\n        }\n      </MobileView>\n    </div>\n  )\n}\n\nexport default NavBar;\n","import React, { useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport styled from \"styled-components\"\nimport { useHistory } from \"react-router-dom\"\nimport { useCookies } from \"react-cookie\"\nimport Axios from \"axios\"\nimport { Link } from \"react-router-dom\"\n\nconst LoginDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    // 비밀번호 찾기 영역\n    .ant-form-item:nth-child(2) {\n      margin-bottom: 0;\n      & + .ant-form-item .ant-col {\n        text-align: right;\n        #search {\n          color: lightgray !important;\n        }\n      }\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    .ant-input-password {\n      height: 32px;\n      input {\n        height: 100%;\n      }\n    }\n    button {\n      width: 100%;\n      background: black;\n      color: #ffffff;\n      margin-top: 1rem;\n    }\n  }\n`;\n\nconst LoginPage = () => {\n\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [errorMessage, setErrorMessage] = useState(\"\")\n  const [cookies, setCookie] = useCookies(\"\")\n\n  const history = useHistory()\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value)\n  }\n\n  const onChangePwd = (e) => {\n    setPassword(e.target.value)\n  }\n\n  const onLogin = () => {\n\n    var variables = {\n      \"email\": email,\n      \"password\": password\n    }\n\n    Axios.post(\"/auth/login\", variables)\n      .then(res => {\n        setCookie(\"tl_token\", res.data.accessToken)\n        setCookie(\"tl_exp\", res.data.accessTokenExpiresIn)\n        setCookie(\"tl_e\", email)\n        setCookie(\"tl_re\", res.data.refreshToken)\n        history.push(\"/mypage\")\n        window.location.reload()\n      })\n      .catch(err => {\n        setErrorMessage(\"이메일이나 비밀번호를 다시 확인해 주세요\")\n      })\n  }\n\n  return (\n    <LoginDiv>\n      <h1>로그인</h1>\n      <br />\n      <Form>\n        <Form.Item\n          label=\"이메일 주소:\"\n          name=\"email\"\n          rules={[{ required: true }]}\n        >\n          <Input value={email} onChange={onChangeEmail} />\n        </Form.Item>\n        <Form.Item\n          label=\"비밀번호:\"\n          name=\"password\"\n          rules={[{ required: true }]}\n        >\n          <Input.Password value={password} onChange={onChangePwd} />\n        </Form.Item>\n        <Form.Item name=\"search\">\n          <Link to=\"/findpw\">\n            비밀번호 찾기\n          </Link>\n        </Form.Item>\n        {errorMessage && (\n          <label><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{errorMessage}</p></label>\n        )}\n        <Form.Item>\n          <Button size=\"large\" onClick={onLogin}>\n            로그인\n          </Button>\n        </Form.Item>\n      </Form>\n    </LoginDiv>\n  )\n}\n\nexport default LoginPage;\n","import React, { useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport styled from 'styled-components';\nimport Axios from 'axios'\nimport { useHistory } from 'react-router-dom'\n\nconst SignupDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    .ant-input-password {\n      height: 32px;\n      input {\n        height: 100%;\n      }\n    }\n    button {\n      width: 100%;\n      background: black;\n      color: #ffffff;\n      margin-top: 1rem;\n    }\n  }\n`;\n\nconst SignupPage = () => {\n  const [email, setEmail] = useState('')\n  const [nickname, setNickname] = useState('')\n  const [password1, setPassword1] = useState('')\n  const [password2, setPassword2] = useState('')\n\n  const history = useHistory()\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value)\n  }\n\n  const onChangeNickname = (e) => {\n    setNickname(e.target.value)\n  }\n\n  const onChangePwd1 = (e) => {\n    setPassword1(e.target.value)\n  }\n\n  const onChangePwd2 = (e) => {\n    setPassword2(e.target.value)\n  }\n\n  const onSignup = () => {\n    const variables = {\n      'email': email,\n      'nickname': nickname,\n      'password': password2\n    }\n\n    Axios.post('/auth/signup', variables)\n      .then(res => {\n        history.push('/login')\n      })\n  }\n\n  return (\n    <SignupDiv>\n      <h1>회원가입</h1>\n      <br />\n      <Form onSubmit={onSignup}>\n        <Form.Item\n          label=\"이메일 주소:\"\n          name=\"email\"\n          rules={[{ required: true }]}\n        >\n          <Input onChange={onChangeEmail} />\n        </Form.Item>\n        <Form.Item\n          label=\"닉네임:\"\n          name=\"nickname\"\n          rules={[{ required: true }]}\n        >\n          <Input onChange={onChangeNickname} />\n        </Form.Item>\n        <Form.Item\n          label=\"비밀번호(8~16자):\"\n          name=\"password1\"\n          rules={[{ required: true, min: 8, max: 16, message: '다시 입력해 주세요' }]}\n        >\n          <Input.Password value={password1} onChange={onChangePwd1} />\n        </Form.Item>\n        <Form.Item\n          label=\"비밀번호 확인(8~16자):\"\n          name=\"password2\"\n          rules={[{ required: true, min: 8, max: 16, message: '다시 입력해 주세요' }]}\n        >\n          <Input.Password value={password2} onChange={onChangePwd2}  />\n        </Form.Item>\n        <Form.Item>\n          <Button size=\"large\" onClick={onSignup}>\n            가입하기\n          </Button>\n        </Form.Item>\n      </Form>\n    </SignupDiv>\n  )\n}\n\nexport default SignupPage;\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { Form, Input, Button } from \"antd\"\nimport Axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\n\nconst FindPwDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    .ant-input-password {\n      height: 32px;\n      input {\n        height: 100%;\n      }\n    }\n    button {\n      width: 100%;\n      background: black;\n      color: #ffffff;\n      margin-top: 1rem;\n      margin-bottom: 1rem;\n    }\n    p {\n      text-align: left;\n    }\n  }\n`\n\nconst FindPwPage = () => {\n\n  const [email, setEmail] = useState(\"\")\n\n  const history = useHistory()\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value)\n  }\n\n  const onFindPw = () => {\n    let variable = {\n      \"email\": email\n    }\n\n    Axios.post(\"/auth/findPw/sendmail\", variable)\n      .then(res => {\n        alert(\"메일 발송이 완료되었습니다\")\n        history.push(\"/login\")\n      })\n  }\n\n  return (\n    <FindPwDiv>\n      <h1>비밀번호 찾기</h1>\n      <br />\n      <Form >\n        <Form.Item\n          label=\"이메일 주소:\"\n          name=\"email\"\n          rules={[{ required: true }]}\n        >\n          <Input onChange={onChangeEmail} />\n        </Form.Item>\n        <Form.Item>\n          <Button size=\"large\" onClick={onFindPw}>\n            비밀번호 찾기\n          </Button>\n          <p>비밀번호 찾기 버튼을 클릭하시면 바뀐 비밀번호가 입력하신 이메일로 전송됩니다.</p>\n        </Form.Item>\n      </Form>\n    </FindPwDiv>\n  )\n}\n\nexport default FindPwPage\n","import React, { useState, useEffect } from \"react\"\nimport { Row, Col, Card, Button } from \"antd\"\nimport { InfoCircleOutlined, FieldTimeOutlined, FundProjectionScreenOutlined, QuestionCircleOutlined } from \"@ant-design/icons\"\nimport styled from \"styled-components\"\nimport { Link } from \"react-router-dom\"\nimport { useSelector } from \"react-redux\"\n\nconst MenuDiv = styled.div`\n  padding: 3rem 2rem;\n  .ant-row {\n    display: flex;\n    align-items: center;\n    border: 1px solid #f0f0f0;\n  }\n  .ant-col-sm-24 {\n    background: black;\n    padding: 12px 0;\n    .ant-card {\n      width: 100%;\n      background: black;\n      color: white;\n    }\n  }\n  .ant-col-sm-12 {\n    display: flex;\n    justify-content: space-around;\n    padding: 24px 0;\n    font-size: 18px;\n  }\n  .ant-card {\n    border: none;\n    .ant-card-body {\n      font-size: 18px;\n    }\n  }\n`;\n\nconst MenuBar = () => {\n\n  const [nickname, setNickname] = useState(\"\")\n  const user = useSelector(state => state.user.userData)\n\n  useEffect(() => {\n    if(user !== undefined) {\n      setNickname(user.nickname)\n    }\n  }, [user])\n\n  return (\n    <MenuDiv>\n      <Row>\n        <Col lg={8} sm={24} xs={24}>\n          <Card>\n            <p>{nickname}님 안녕하세요</p>\n            <Button shape=\"round\">정회원</Button>\n          </Card>\n        </Col>\n        <Col lg={8} sm={12} xs={24}>\n          <div>\n            <Link to=\"/myinfo\">\n              <InfoCircleOutlined />\n              <p>내 정보 관리</p>\n            </Link>\n          </div>\n          <div>\n            <Link to=\"/mytimeline\">\n              <FieldTimeOutlined />\n              <p>내 타임라인</p>\n            </Link>\n          </div>\n        </Col>\n        <Col lg={8} sm={12} xs={24}>\n          <div>\n            <FundProjectionScreenOutlined />\n            <p>내 클래스</p>\n          </div>\n          <div>\n            <QuestionCircleOutlined />\n            <p>문의하기</p>\n          </div>\n        </Col>\n      </Row>\n    </MenuDiv>\n  )\n}\n\nexport default MenuBar;\n","import React from \"react\"\nimport MenuBar from \"./Sections/MenuBar\"\n\nconst MyPage = () => {\n\n  return (\n    <>\n      <MenuBar />\n    </>\n  )\n}\n\nexport default MyPage\n","import React from 'react';\nimport MenuBar from './Sections/MenuBar';\nimport { Row, Col, Card, Button } from 'antd';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst TimelineDiv = styled.div`\n  padding: 3rem 2rem;\n  .ant-card {\n    text-align: left;\n    margin-bottom: 3rem;\n    font-size: 17px;\n    .ant-card-head-title {\n      font-weight: bold;\n      font-size: 17px;\n    }\n  }\n`;\n\nconst MyTimeline = () => {\n  return (\n    <div>\n      <MenuBar />\n      <TimelineDiv>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Card title=\"내 타임라인\" bordered={false} extra={<Link to=\"/createtimeline\"><Button size=\"large\">생성하기</Button></Link>}>\n              내 타임라인이 없습니다\n            </Card>\n          </Col>\n          <Col span={24}>\n            <Card title=\"관심 타임라인\" bordered={false}>\n              관심 타임라인이 없습니다\n            </Card>\n          </Col>\n          <Col span={24}>\n            <Card title=\"추천 타임라인\" bordered={false}>\n              추천 타임라인이 없습니다\n            </Card>\n          </Col>\n        </Row>\n      </TimelineDiv>\n    </div>\n  )\n}\n\nexport default MyTimeline;\n","import React from \"react\"\nimport { Form, Input, DatePicker, Divider, Button } from \"antd\"\nimport styled from \"styled-components\"\nimport { CloseSquareOutlined } from \"@ant-design/icons\"\n\nconst DetailDiv = styled.div`\n  div {\n    display: flex;\n    flex-direction: column;\n    div {\n      button {\n        display: flex;\n        justify-content: flex-end;\n        border: none;\n        outline: none;\n        color: #FF4B2B;\n        &:active: {\n          border: none;\n          outline: none;\n        }\n        &::after {\n          border: none;\n          outline: none;\n\n        }\n      }\n      margin-bottom: 20px;\n      .ant-picker {\n        height: 32px;\n        .ant-picker-input {\n          display: flex;\n          flex-direction: row;\n        }\n      }\n    }\n  }\n`\n\nconst { TextArea } = Input\n\nconst TimelineDetail = (props) => {\n\n  return (\n    <DetailDiv>\n      {props.countList && props.countList.map((item, i) => (\n        <div key={i}>\n          <Divider />\n          <div>\n            {item}\n            <Button onClick={() => props.onDeleteDetail(item, i)}>\n              <CloseSquareOutlined />\n            </Button>\n            <label>타임라인 상세 제목</label>\n            <Input\n              type=\"text\"\n              value={props.detailTitle[i]}\n              onChange={(e) => props.onChangeDetailTitle(e, i)}\n              required\n            />\n          </div>\n          <div>\n            <label>날짜</label>\n            <DatePicker\n              value={props.detailDate[i]}\n              onChange={(date, dateString) => props.onChangeDate(date, dateString, i)}\n            />\n          </div>\n          <div>\n            <label>내용</label>\n            <TextArea\n              autoSize={{ minRows: 6, maxRows: 6 }}\n              value={props.detailContent[i]}\n              onChange={(e) => props.onchangeDetailContent(e, i)}\n            />\n          </div>\n        </div>\n      ))}\n    </DetailDiv>\n  )\n}\n\nexport default TimelineDetail\n","import React from \"react\"\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react'\n\nconst TimelineView = (props) => {\n  return (\n    <>\n      <Timeline lineColor={'black'}>\n        {props.countList && props.countList.map((item, i) => (\n          <TimelineItem\n            key={i}\n            dateText={props.detailDateString[i]}\n            style={{ color: '#e86971' }}\n          >\n            <h3>{props.detailTitle[i]}</h3>\n            <p>\n              {props.detailContent[i]}\n            </p>\n          </TimelineItem>\n        ))}\n      </Timeline>\n    </>\n  )\n}\n\nexport default TimelineView\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { Form, Input, Select, Button, DatePicker, Divider } from \"antd\"\nimport { Link } from \"react-router-dom\"\nimport Axios from \"axios\"\nimport { PlusCircleOutlined } from \"@ant-design/icons\"\nimport TimelineDetail from \"./Sections/TimelineDetail\"\nimport { useSelector } from \"react-redux\"\nimport TimelineView from \"./Sections/TimelineView\"\n\nconst CreateTimelineDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    a button {\n      width: 100%;\n      background: black;\n      color: #ffffff;\n      margin-top: 100px;\n    }\n  }\n`\n\nconst { Option } = Select\n\nconst CreateTimeline = () => {\n  const [title, setTitle] = useState(\"\")\n  const [countList, setCountList] = useState([0])\n  const [detailTitle, setDetailTitle] = useState([])\n  const [detailDate, setDetailDate] = useState([])\n  const [detailDateString, setDetailDateString] = useState([])\n  const [detailContent, setDetailContent] = useState([])\n  const [category, setCategory] = useState(\"경제\")\n  const [complete, setComplete] = useState(false)\n  const [open, setOpen] = useState(false)\n\n  const user = useSelector(state => state.user)\n\n  const onCreateTimeline = (e) => {\n    let variables = {\n      \"author\": user.userData.email,\n      \"category\": category,\n      \"complete\": complete,\n      \"open\": open,\n      \"title\": title\n    }\n\n    let detailList = []\n    let valid = true\n\n    // 타임라인이 하나도 없을 때\n    if(countList.length === 0) {\n      alert(\"1개 이상의 타임라인을 작성해 주세요\")\n      return false\n    } else if(!title) {\n      alert(\"제목을 작성해 주세요\")\n      return false\n    }\n\n    // 타임라인 상세 내용 유효성 검사\n    countList.forEach((item, i) => {\n      if(detailTitle[i] === undefined || detailTitle[i] === \"\") {\n        alert(\"타임라인 제목을 입력해 주세요\")\n        valid = false\n      } else if(detailContent[i] === undefined || detailContent[i] === \"\") {\n        alert(\"타임라인 내용을 입력해 주세요\")\n        valid = false\n      } else if(detailDate[i] === undefined || detailDate[i] === \"\") {\n        alert(\"타임라인 날짜를 입력해 주세요\")\n        valid = false\n      }\n    })\n\n    if(valid) {\n      Axios.post(\"/timeline/master/save\", variables)\n        .then(res => {\n          // master에서 id값 return하면 받아서 detail 저장\n          if(res.data.id) {\n            countList.forEach((item, i) => {\n              let year = detailDate[i]._d.getFullYear().toString()\n              let month = (detailDate[i]._d.getMonth() + 1) < 10 ? \"0\" + (detailDate[i]._d.getMonth() + 1) : (detailDate[i]._d.getMonth() + 1).toString()\n              let date = (detailDate[i]._d.getDate()) < 10 ? \"0\" + (detailDate[i]._d.getDate()) : detailDate[i]._d.getDate()\n\n              detailList.push({\n                \"content\": detailContent[i],\n                \"masterId\": res.data.id,\n                \"scheduleDate\": year + month + date,\n                \"title\": detailTitle[i]\n              })\n            })\n\n            Axios.post(\"/timeline/detail/save\", detailList)\n              .then(response => {\n                console.log(response);\n              })\n          }\n        })\n    }\n  }\n\n  const onChangeTitle = (e) => {\n    setTitle(e.target.value)\n  }\n\n  const onChangeDetailTitle= (e, i) => {\n    let detailTitleArr = [...detailTitle]\n\n    detailTitleArr[i] = e.target.value\n    setDetailTitle(detailTitleArr)\n  }\n\n  const onChangeDate = (date, dateString, i) => {\n    let detailDateArr = [...detailDate]\n    let detailDatestringArr = [...detailDateString]\n\n    detailDateArr[i] = date\n    detailDatestringArr[i] = dateString\n    setDetailDate(detailDateArr)\n    setDetailDateString(detailDatestringArr)\n  }\n\n  const onchangeDetailContent = (e, i) => {\n    let detailContentArr = [...detailContent]\n\n    detailContentArr[i] = e.target.value\n    setDetailContent(detailContentArr)\n  }\n\n  const onSelectCategory = (value) => {\n    setCategory(value)\n  }\n\n  const onSelectComplete = (value) => {\n    setComplete(value)\n  }\n\n  const onSelectOpen = (value) => {\n    setOpen(value)\n  }\n\n  const onAddDetailDiv = () => {\n    let countArr = countList.length === 0 ? [0] : [...countList]\n    let counter = countArr.slice(-1)[0]\n\n    // 타임라인 상세 영역 다 삭제해서 하나도 없을 때\n    if(countList.length === 0) {\n      setCountList(countArr)\n    // 타임라인 상세 영역 1개 이상일 때\n    } else {\n      counter += 1\n      countArr[countArr.length] = counter\n      setCountList(countArr)\n    }\n  }\n\n  const onDeleteDetailTitle = (i) => {\n    let titleArr = [...detailTitle]\n    titleArr.splice(i, 1)\n    setDetailTitle(titleArr)\n  }\n\n  const onDeleteDetailDate = (i) => {\n    let dateArr = [...detailDate]\n    let datestringArr = [...detailDateString]\n\n    dateArr.splice(i, 1)\n    datestringArr.splice(i, 1)\n    setDetailDate(dateArr)\n    setDetailDateString(datestringArr)\n  }\n\n  const onDeleteDetailContent = (i) => {\n    let contentArr = [...detailContent]\n    contentArr.splice(i, 1)\n    setDetailContent(contentArr)\n  }\n\n  const onDeleteDetail = (item, i) => {\n    let countArr = [...countList]\n    // array 값과 일치하는 것만 삭제, 일치하지 않는 것들만 남김\n    const newCountArr = countArr.filter((arr) => arr !== item)\n    setCountList(newCountArr)\n    onDeleteDetailTitle(i)\n    onDeleteDetailDate(i)\n    onDeleteDetailContent(i)\n  }\n\n  return (\n    <CreateTimelineDiv>\n      <h1>타임라인 생성하기</h1>\n      <br />\n      <Form onSubmit={onCreateTimeline}>\n        <Form.Item\n          label=\"타임라인 제목\"\n          name=\"title\"\n        >\n          <Input\n            type=\"text\"\n            onChange={onChangeTitle}\n            value={title}\n            required\n          />\n        </Form.Item>\n        <Form.Item\n          label=\"분야\"\n        >\n          <Select defaultValue=\"경제\" onChange={onSelectCategory}>\n            <Option value=\"경제\">경제</Option>\n            <Option value=\"사회\">사회</Option>\n          </Select>\n        </Form.Item>\n        <Form.Item\n          label=\"진행 여부\"\n        >\n          <Select defaultValue=\"false\" onChange={onSelectComplete}>\n            <Option value=\"false\">진행중</Option>\n            <Option value=\"true\">진행완료</Option>\n          </Select>\n        </Form.Item>\n        <Form.Item\n          label=\"공개 여부\"\n        >\n          <Select defaultValue=\"false\" onChange={onSelectOpen}>\n            <Option value=\"false\">비공개</Option>\n            <Option value=\"true\">공개</Option>\n          </Select>\n        </Form.Item>\n        <TimelineDetail countList={countList} onDeleteDetail={onDeleteDetail} onChangeDetailTitle={onChangeDetailTitle} detailTitle={detailTitle}\n          onChangeDate={onChangeDate} detailDate={detailDate} onchangeDetailContent={onchangeDetailContent} detailContent={detailContent} />\n        <Button onClick={onAddDetailDiv}>\n          <PlusCircleOutlined />추가\n        </Button>\n        <Divider />\n        <TimelineView countList={countList} detailTitle={detailTitle} detailDateString={detailDateString} detailContent={detailContent}/>\n        <Divider />\n        <Button size=\"large\" onClick={onCreateTimeline}>생성하기</Button>\n      </Form>\n    </CreateTimelineDiv>\n  )\n}\nexport default CreateTimeline\n","import React from 'react';\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react';\n\nconst TimelinePage = () => {\n  return (\n    <>\n    <Timeline lineColor={'#ddd'}>\n      <TimelineItem\n        key=\"001\"\n        dateText=\"11/2010 – Present\"\n        style={{ color: '#e86971' }}\n      >\n        <h3>Title, Company</h3>\n        <h4>Subtitle</h4>\n        <p>\n          Est incididunt sint eu minim dolore mollit velit velit commodo ex nulla\n          exercitation. Veniam velit adipisicing anim excepteur nostrud magna\n          nostrud aliqua dolor. Sunt aute est duis ut nulla officia irure\n          reprehenderit laborum fugiat dolore in elit. Adipisicing do qui duis Lorem\n          est.\n        </p>\n        <p>\n          Est incididunt sint eu minim dolore mollit velit velit commodo ex nulla\n          exercitation. Veniam velit adipisicing anim excepteur nostrud magna\n          nostrud aliqua dolor. Sunt aute est duis ut nulla officia irure\n          reprehenderit laborum fugiat dolore in elit. Adipisicing do qui duis Lorem\n          est.\n        </p>\n        <p>\n          Est incididunt sint eu minim dolore mollit velit velit commodo ex nulla\n          exercitation. Veniam velit adipisicing anim excepteur nostrud magna\n          nostrud aliqua dolor. Sunt aute est duis ut nulla officia irure\n          reprehenderit laborum fugiat dolore in elit. Adipisicing do qui duis Lorem\n          est.\n        </p>\n      </TimelineItem>\n      <TimelineItem\n        key=\"002\"\n        dateText=\"04/2009 – 11/2010\"\n        dateInnerStyle={{ background: '#61b8ff', color: '#000' }}\n        bodyContainerStyle={{\n          background: '#ddd',\n          padding: '20px',\n          borderRadius: '8px',\n          boxShadow: '0.5rem 0.5rem 2rem 0 rgba(0, 0, 0, 0.2)',\n        }}\n      >\n        <h3 style={{ color: '#61b8ff' }}>Title, Company</h3>\n        <h4 style={{ color: '#61b8ff' }}>Subtitle</h4>\n        <p>\n          Est incididunt sint eu minim dolore mollit velit velit commodo ex nulla\n          exercitation. Veniam velit adipisicing anim excepteur nostrud magna\n          nostrud aliqua dolor. Sunt aute est duis ut nulla officia irure\n          reprehenderit laborum fugiat dolore in elit. Adipisicing do qui duis Lorem\n          est.\n        </p>\n        <p>\n          Est incididunt sint eu minim dolore mollit velit velit commodo ex nulla\n          exercitation. Veniam velit adipisicing anim excepteur nostrud magna\n          nostrud aliqua dolor. Sunt aute est duis ut nulla officia irure\n          reprehenderit laborum fugiat dolore in elit. Adipisicing do qui duis Lorem\n          est.\n        </p>\n      </TimelineItem>\n      <TimelineItem\n        key=\"003\"\n        dateComponent={(\n          <div\n            style={{\n              display: 'block',\n              float: 'left',\n              padding: '10px',\n              background: 'rgb(150, 150, 150)',\n              color: '#fff',\n            }}\n          >\n            11/2008 – 04/2009\n          </div>\n        )}\n      >\n        <h3>Title, Company</h3>\n        <h4>Subtitle</h4>\n        <p>\n          Est incididunt sint eu minim dolore mollit velit velit commodo ex nulla\n          exercitation. Veniam velit adipisicing anim excepteur nostrud magna\n          nostrud aliqua dolor. Sunt aute est duis ut nulla officia irure\n          reprehenderit laborum fugiat dolore in elit. Adipisicing do qui duis Lorem\n          est.\n        </p>\n        <p>\n          Est incididunt sint eu minim dolore mollit velit velit commodo ex nulla\n          exercitation. Veniam velit adipisicing anim excepteur nostrud magna\n          nostrud aliqua dolor. Sunt aute est duis ut nulla officia irure\n          reprehenderit laborum fugiat dolore in elit. Adipisicing do qui duis Lorem\n          est.\n        </p>\n        <p>\n          Est incididunt sint eu minim dolore mollit velit velit commodo ex nulla\n          exercitation. Veniam velit adipisicing anim excepteur nostrud magna\n          nostrud aliqua dolor. Sunt aute est duis ut nulla officia irure\n          reprehenderit laborum fugiat dolore in elit. Adipisicing do qui duis Lorem\n          est.\n        </p>\n      </TimelineItem>\n      <TimelineItem\n        key=\"004\"\n        dateText=\"08/2008 – 11/2008\"\n        dateInnerStyle={{ background: '#76bb7f' }}\n      >\n        <h3>Title, Company</h3>\n        <h4>Subtitle</h4>\n        <p>\n          Est incididunt sint eu minim dolore mollit velit velit commodo ex nulla\n          exercitation. Veniam velit adipisicing anim excepteur nostrud magna\n          nostrud aliqua dolor. Sunt aute est duis ut nulla officia irure\n          reprehenderit laborum fugiat dolore in elit. Adipisicing do qui duis Lorem\n          est.\n        </p>\n        <p>\n          Est incididunt sint eu minim dolore mollit velit velit commodo ex nulla\n          exercitation. Veniam velit adipisicing anim excepteur nostrud magna\n          nostrud aliqua dolor. Sunt aute est duis ut nulla officia irure\n          reprehenderit laborum fugiat dolore in elit. Adipisicing do qui duis Lorem\n          est.\n        </p>\n      </TimelineItem>\n      </Timeline>\n    </>\n  )\n}\n\nexport default TimelinePage;\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { Form, Input, Button } from \"antd\"\nimport { useSelector } from \"react-redux\"\nimport Axios from \"axios\"\nimport MenuBar from \"./Sections/MenuBar\"\n\nconst InfoDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    // 닉네임 영역\n    #nickname {\n      display: flex;\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    .ant-input-password {\n      height: 32px;\n      input {\n        height: 100%;\n      }\n    }\n    .ant-form-item:last-child {\n      button {\n        width: 100%;\n        background: black;\n        color: #ffffff;\n        margin-top: 1rem;\n      }\n    }\n  }\n`;\n\n\nconst MyInfo = () => {\n\n  const [email, setEmail] = useState(\"\")\n  const [nickname, setNickname] = useState([])\n  const [password1, setPassword1] = useState(\"\")\n  const [password2, setPassword2] = useState(\"\")\n  const [existingPw, setExistingPw] = useState(\"\")\n  const [checkDuplicate, setCheckDuplicate] = useState(false)\n  const [checkValid, setCheckValid] = useState(true)\n\n  const user = useSelector(state => state.user.userData)\n\n  useEffect(() => {\n    if(user !== undefined) {\n      setEmail(user.email)\n      setNickname(user.nickname)\n\n      Axios.get(`/member/${user.email}`)\n        .then(res => {\n          setExistingPw(res.data.password)\n        })\n    }\n  }, [user])\n\n  const onChangeNick = (e) => {\n    setNickname(e.target.value)\n  }\n\n  const onChangePwd1 = (e) => {\n    setPassword1(e.target.value)\n  }\n\n  const onChangePwd2 = (e) => {\n    setPassword2(e.target.value)\n  }\n\n  // 중복확인 체크\n  const onCheckDup = () => {\n    Axios.get(\"/member/ids\")\n      .then(res => {\n        const duplicate = res.data.filter(item => item.nickname === nickname)\n        // 닉네임 중복일 경우\n        if(duplicate.length > 0) {\n          // 다른 사람 닉네임과 중복일 경우\n          if(nickname !== user.nickname) {\n            setCheckDuplicate(false)\n            alert(\"이미 있는 닉네임입니다\")\n          // 내 기존 닉네임일 경우\n          } else {\n            setCheckDuplicate(true)\n            alert(\"사용할 수 있는 닉네임입니다\")\n          }\n        } else {\n          setCheckDuplicate(true)\n          alert(\"사용할 수 있는 닉네임입니다\")\n        }\n      })\n  }\n\n  const onChangeInfo = () => {\n\n      // 닉네임 중복확인 버튼 클릭하도록 하기\n    if(checkDuplicate === false) {\n      alert(\"닉네임 중복확인을 해주세요\")\n      return false\n    } else if(password1 || password2) {\n      if(password1 !== password2) {\n        alert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다\")\n        return false\n      }\n    }\n\n    const variables = {\n      \"nickname\": nickname,\n      \"password\": password1 ? password1 : existingPw\n    }\n\n    if(checkDuplicate && checkValid) {\n      Axios.put(`/member/${email}`, variables)\n        .then(res => {\n          // 닉네임, 비밀번호 변경 성공 시 페이지 새로고침\n          if(res.status === 200) {\n            window.location.reload()\n          }\n        })\n    }\n  }\n\n  return (\n    <div>\n      <MenuBar />\n      <InfoDiv>\n        <Form>\n          <Form.Item\n            label=\"이메일:\"\n            name=\"email\"\n            rules={[{ required: true }]}\n          >\n            <div>\n              { email &&\n                <Input value={email} disabled />\n              }\n            </div>\n          </Form.Item>\n          <Form.Item\n            label=\"닉네임:\"\n            name=\"nickname\"\n            rules={[{ required: true }]}\n          >\n            <div>\n              <Input value={nickname} onChange={onChangeNick} />\n              <Button onClick={onCheckDup}>중복확인</Button>\n            </div>\n          </Form.Item>\n          <Form.Item\n            label=\"비밀번호(8~16자):\"\n            name=\"password1\"\n            rules={[{ required: true, min: 8, max: 16, message: '다시 입력해 주세요' }]}\n          >\n            <Input.Password value={password1} onChange={onChangePwd1} />\n          </Form.Item>\n          <Form.Item\n            label=\"비밀번호 확인(8~16자):\"\n            name=\"password2\"\n            rules={[{ required: true, min: 8, max: 16, message: '다시 입력해 주세요' }]}\n          >\n            <Input.Password value={password2} onChange={onChangePwd2} />\n          </Form.Item>\n          <Form.Item\n            name=\"button\"\n          >\n            <Button size=\"large\" onClick={onChangeInfo}>\n              수정하기\n            </Button>\n          </Form.Item>\n        </Form>\n      </InfoDiv>\n    </div>\n  )\n}\n\nexport default MyInfo\n","export const AUTH_USER = \"auth_user\"\n","import Axios from 'axios'\nimport {\n  AUTH_USER,\n} from './types'\n\nexport function auth(email) {\n  const request = Axios.get(`/member/${email}`)\n    .then(res => res.data)\n\n  return {\n    type: AUTH_USER,\n    payload: request\n  }\n}\n","import React, { useEffect } from \"react\"\nimport { auth } from \"../_actions/user_actions\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useCookies } from \"react-cookie\"\nimport Axios from \"axios\"\n\nexport default function authHoc(SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n      const [cookies, setCookie] = useCookies([])\n      let user = useSelector(state => state.user)\n      const dispatch = useDispatch()\n\n      useEffect(() => {\n          if (!cookies.tl_e || !cookies.tl_token || !cookies.tl_re || !cookies.tl_exp) {\n            if (option) {\n              props.history.push(\"/login\")\n            }\n            } else {\n              const date = new Date()\n              const expTime = parseInt(cookies.tl_exp)\n\n              const tokens = {\n                \"accessToken\": cookies.tl_token,\n                \"refreshToken\": cookies.tl_re\n              }\n\n              if(date.getTime() > expTime) {\n                Axios.post(\"/auth/reissue\", tokens)\n                  .then(res => {\n                    setCookie(\"tl_token\", res.data.accessToken)\n                    setCookie(\"tl_exp\", res.data.accessTokenExpiresIn)\n                    setCookie(\"tl_re\", res.data.refreshToken)\n                  })\n                }\n\n              // member 정보 가져오기 위해 header에 token 담아서 넘김\n              Axios.defaults.headers.common['Authorization'] = `Bearer ${cookies.tl_token}`\n              dispatch(auth(cookies.tl_e))\n            }\n      }, [cookies])\n\n      return (\n        <SpecificComponent {...props} user={user} />\n      )\n    }\n  return AuthenticationCheck\n}\n","import React, { Suspense } from \"react\"\nimport { Switch, Route } from \"react-router-dom\"\nimport \"./App.css\"\nimport NavBar from \"./components/NavBar/NavBar\"\nimport LoginPage from \"./components/AuthPage/LoginPage\"\nimport SignupPage from \"./components/AuthPage/SignupPage\"\nimport FindPwPage from \"./components/AuthPage/FindPwPage\"\nimport MyPage from \"./components/MyPage/MyPage\"\nimport MyTimeline from \"./components/MyPage/MyTimeline\"\nimport CreateTimeline from \"./components/CreateTimeline/CreateTimeline\"\nimport TimelinePage from \"./components/TimelinePage/TimelinePage\"\nimport MyInfo from \"./components/MyPage/MyInfo\"\nimport Auth from \"./hoc/auth\"\n\nfunction App() {\n  return (\n    <Suspense fallback={(<div>...</div>)}>\n      <NavBar />\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/login\" component={Auth(LoginPage, true)}></Route>\n          <Route exact path=\"/signup\" component={SignupPage}></Route>\n          <Route exact path=\"/findpw\" component={FindPwPage}></Route>\n          <Route exact path=\"/mypage\" component={Auth(MyPage, true)}></Route>\n          <Route exact path=\"/mytimeline\" component={Auth(MyTimeline, true)}></Route>\n          <Route exact path=\"/myinfo\" component={Auth(MyInfo, true)}></Route>\n          <Route exact path=\"/createtimeline\" component={Auth(CreateTimeline, true)}></Route>\n          <Route exact path=\"/timeline\" component={TimelinePage}></Route>\n        </Switch>\n      </div>\n    </Suspense>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux'\nimport user from './user_reducer'\n\nconst rootReducer = combineReducers({\n  user,\n})\n\nexport default rootReducer\n","import {\n  AUTH_USER,\n} from '../_actions/types'\n\nexport default function UserReducer(state={}, action) {\n  switch (action.type) {\n    case AUTH_USER:\n      return {...state, userData: { email: action.payload.email, nickname: action.payload.nickname } }\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport promiseMiddleware from 'redux-promise'\nimport ReduxThunk from 'redux-thunk'\nimport rootReducer from './_reducers'\nimport { ConfigProvider } from 'antd';\nimport koKR from 'antd/lib/locale/ko_KR';\n\nconst store = createStore(rootReducer, compose(\n    applyMiddleware(promiseMiddleware, ReduxThunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  )\n)\n\nReactDOM.render(\n  <Provider\n    store={store}\n  >\n    <BrowserRouter>\n      <ConfigProvider locale={koKR}>\n        <App />\n      </ConfigProvider>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}