{"version":3,"sources":["components/NavBar/NavBar.js","components/AuthPage/LoginPage.js","components/AuthPage/SignupPage.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","styled","div","MenuList","LogoM","NavBar","useState","toggleMenu","setToggleMenu","toggleBar","setToggleBar","to","selectedKeys","mode","Item","type","onClick","style","marginBottom","MenuOutlined","MenuFoldOutlined","defaultSelectedKeys","theme","inlineCollapsed","LoginDiv","LoginPage","email","setEmail","password","setPassword","value","required","onChange","e","target","size","SignupDiv","SignupPage","password1","setPassword1","password2","setPassword2","htmlFor","minLength","pattern","App","fallback","className","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02bb2723.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Menu, Button } from 'antd';\nimport styled from 'styled-components';\nimport { BrowserView, MobileView } from 'react-device-detect';\nimport { MenuOutlined, MenuFoldOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\n\nconst Logo =  styled.div`\n  font-weight: bold;\n  font-size: 3.5vh;\n  padding: 1rem;\n  span {\n    color: #f0f0f0;\n  }\n  a {\n    color: black !important;\n  }\n  + div {\n    border-bottom: 1px solid #f0f0f0;\n  }\n`;\n\nconst MenuList = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst LogoM = styled.div`\n  font-weight: bold;\n  font-size: 3.5vh;\n  padding: 1rem;\n  display: flex;\n  justify-content: space-between;\n  span {\n    color: #f0f0f0;\n  }\n  a {\n    color: black !important;\n  }\n\n  Button {\n    background: black !important;\n    border: none;\n  }\n`;\n\nfunction NavBar() {\n\n  const [toggleMenu, setToggleMenu] = useState(false)\n  const [toggleBar, setToggleBar] = useState(true)\n\n  const toggleChange = () => {\n    setToggleMenu(!toggleMenu)\n    setToggleBar(!toggleBar)\n  }\n\n  const onMenuClick = () => {\n    setToggleMenu(!toggleMenu)\n    setToggleBar(!toggleBar)\n  }\n\n  return(\n    <div>\n      <BrowserView>\n        <Logo>\n          <Link to=\"/\">\n            TI<span>MELI</span>NE\n          </Link>\n        </Logo>\n        <MenuList>\n          <Menu selectedKeys=\"mail\" mode=\"horizontal\">\n            <Menu.Item key=\"timeline\">\n              타임라인\n            </Menu.Item>\n            <Menu.Item key=\"class\">\n              클래스\n            </Menu.Item>\n          </Menu>\n          <Menu mode=\"horizontal\">\n            <Menu.Item key=\"login\">\n              <Link to=\"/login\">\n                로그인\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"signup\">\n              <Link to=\"/signup\">\n                회원가입\n              </Link>\n            </Menu.Item>\n          </Menu>\n        </MenuList>\n      </BrowserView>\n      <MobileView>\n        <LogoM>\n          <Link to=\"/\">\n            TI<span>MELI</span>NE\n          </Link>\n          <div >\n            <Button type=\"primary\" onClick={toggleChange} style={{ marginBottom: 16 }}>\n              { toggleBar ? <MenuOutlined /> : <MenuFoldOutlined /> }\n            </Button>\n          </div>\n        </LogoM>\n        { toggleMenu ?\n          <Menu\n            defaultSelectedKeys={['1']}\n            mode=\"inline\"\n            theme=\"light\"\n            inlineCollapsed={toggleBar}\n            onClick={onMenuClick}\n          >\n            <Menu.Item key=\"timeline\">\n              타임라인\n            </Menu.Item>\n            <Menu.Item key=\"class\">\n              클래스\n            </Menu.Item>\n            <Menu.Item key=\"login\">\n              <Link to=\"/login\">\n                로그인\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"signup\">\n              <Link to=\"/signup\">\n                회원가입\n              </Link>\n            </Menu.Item>\n          </Menu>\n          : <></>\n        }\n      </MobileView>\n    </div>\n  )\n}\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport { Input } from 'antd';\nimport styled from 'styled-components';\n\nconst LoginDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    label {\n      margin-bottom: 1rem;\n    }\n    input {\n      margin-bottom: 1.5rem;\n      &[type=submit] {\n        background: black;\n        color: white;\n        margin-top: 1rem;\n      }\n    }\n  }\n`;\n\nconst LoginPage = () => {\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [errors, setErrors] = useState(false)\n\n  return (\n    <LoginDiv>\n      <h1>로그인</h1>\n      <br />\n      <form>\n        <label>이메일 주소:</label>\n        <Input\n          type='email'\n          value={email}\n          required\n          onChange={e => setEmail(e.target.value)}\n        />\n        <label>비밀번호:</label>\n        <Input\n          type='password'\n          value={password}\n          required\n          onChange={e => setPassword(e.target.value)}\n        />\n        <Input type='submit' size=\"large\" value='로그인' />\n      </form>\n    </LoginDiv>\n  )\n}\n\nexport default LoginPage;\n","import React, { useState } from 'react';\nimport { Input } from 'antd';\nimport styled from 'styled-components';\n\nconst SignupDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    label {\n      margin-bottom: 1rem;\n    }\n    input {\n      margin-bottom: 1.5rem;\n      &[type=submit] {\n        background: black;\n        color: white;\n        margin-top: 1rem;\n      }\n    }\n  }\n`;\n\nconst SignupPage = () => {\n  const [email, setEmail] = useState('')\n  const [password1, setPassword1] = useState('')\n  const [password2, setPassword2] = useState('')\n  const [errors, setErrors] = useState(false)\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value)\n  }\n\n  const onChangePwd1 = (e) => {\n    setPassword1(e.target.value)\n  }\n\n  const onChangePwd2 = (e) => {\n    setPassword2(e.target.value)\n  }\n\n  return (\n    <SignupDiv>\n      <h1>회원가입</h1>\n      <br />\n      <form>\n        <label htmlFor='email'>이메일 주소:</label>\n        <Input\n          type='email'\n          value={email}\n          onChange={onChangeEmail}\n          required\n        />\n        <label htmlFor='password1'>비밀번호(소문자, 숫자, 특수문자 포함 8~16자):</label>\n        <Input\n          type='password'\n          value={password1}\n          onChange={onChangePwd1}\n          minLength='8'\n          pattern='^(?=.*[a-z])(?=.*\\d)(?=.*[$@$!%*#?&])[a-z\\d$@$!%*#?&]{8,16}$'\n          required\n        />\n        <br />\n        <label htmlFor='password2'>비밀번호 확인(소문자, 숫자, 특수문자 포함 8~16자):</label>\n        <Input\n          type='password'\n          value={password2}\n          onChange={onChangePwd2}\n          minLength='8'\n          pattern='^(?=.*[a-z])(?=.*\\d)(?=.*[$@$!%*#?&])[a-z\\d$@$!%*#?&]{8,16}$'\n          required\n        />\n        <Input type='submit' size=\"large\" value='가입하기' />\n      </form>\n    </SignupDiv>\n  )\n}\n\nexport default SignupPage;\n","import React, { Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport NavBar from './components/NavBar/NavBar';\nimport LoginPage from './components/AuthPage/LoginPage';\nimport SignupPage from './components/AuthPage/SignupPage';\n\nfunction App() {\n  return (\n    <Suspense fallback={(<div>...</div>)}>\n      <NavBar />\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/login\" component={LoginPage}></Route>\n          <Route exact path=\"/signup\" component={SignupPage}></Route>\n        </Switch>\n      </div>\n    </Suspense>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}