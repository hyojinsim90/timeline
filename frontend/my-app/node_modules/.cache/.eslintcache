[{"C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\index.js":"1","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\App.js":"2","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\_reducers\\index.js":"4","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\hoc\\auth.js":"5","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\NavBar\\NavBar.js":"6","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\AuthPage\\FindPwPage.js":"7","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\AuthPage\\SignupPage.js":"8","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\MyPage\\MyPage.js":"9","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\MyPage\\MyTimeline.js":"10","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\AuthPage\\LoginPage.js":"11","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\MyPage\\MyInfo.js":"12","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\CreateTimeline\\CreateTimeline.js":"13","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\TimelinePage\\TimelinePage.js":"14","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\_reducers\\user_reducer.js":"15","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\MyPage\\Sections\\MenuBar.js":"16","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\CreateTimeline\\Sections\\TimelineDetail.js":"17","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\CreateTimeline\\Sections\\TimelineView.js":"18","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\_actions\\types.js":"19","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\_actions\\user_actions.js":"20","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\CreateTimeline\\Sections\\UploadImage.js":"21","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\MyPage\\TimelineList.js":"22","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\MyPage\\Sections\\SomeTimeline.js":"23"},{"size":1145,"mtime":1623006128000,"results":"24","hashOfConfig":"25"},{"size":1635,"mtime":1623006128000,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1623006128000,"results":"27","hashOfConfig":"25"},{"size":152,"mtime":1623006128000,"results":"28","hashOfConfig":"25"},{"size":2440,"mtime":1623006128000,"results":"29","hashOfConfig":"25"},{"size":4619,"mtime":1623006128000,"results":"30","hashOfConfig":"25"},{"size":1830,"mtime":1623006128000,"results":"31","hashOfConfig":"25"},{"size":4101,"mtime":1623006128000,"results":"32","hashOfConfig":"25"},{"size":165,"mtime":1623006128000,"results":"33","hashOfConfig":"25"},{"size":1776,"mtime":1623006128000,"results":"34","hashOfConfig":"25"},{"size":3015,"mtime":1623006128000,"results":"35","hashOfConfig":"25"},{"size":4909,"mtime":1623006128000,"results":"36","hashOfConfig":"25"},{"size":8822,"mtime":1623006128000,"results":"37","hashOfConfig":"25"},{"size":5185,"mtime":1623006128000,"results":"38","hashOfConfig":"25"},{"size":292,"mtime":1623006128000,"results":"39","hashOfConfig":"25"},{"size":2011,"mtime":1623006128000,"results":"40","hashOfConfig":"25"},{"size":2023,"mtime":1623006128000,"results":"41","hashOfConfig":"25"},{"size":1016,"mtime":1623006128000,"results":"42","hashOfConfig":"25"},{"size":37,"mtime":1623006128000,"results":"43","hashOfConfig":"25"},{"size":231,"mtime":1623006128000,"results":"44","hashOfConfig":"25"},{"size":744,"mtime":1623006128000,"results":"45","hashOfConfig":"25"},{"size":2117,"mtime":1623006128000,"results":"46","hashOfConfig":"25"},{"size":1279,"mtime":1623006128000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lxwwjr",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\index.js",[],"C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\App.js",[],"C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\_reducers\\index.js",[],"C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\hoc\\auth.js",["99"],"import React, { useEffect } from \"react\"\nimport { auth } from \"../_actions/user_actions\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useCookies } from \"react-cookie\"\nimport Axios from \"axios\"\n\nexport default function authHoc(SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n      const [cookies, setCookie, removeCookie] = useCookies([])\n      let user = useSelector(state => state.user)\n      const dispatch = useDispatch()\n\n      const removeCookies = () => {\n        removeCookie(\"tl_e\")\n        removeCookie(\"tl_re\")\n        removeCookie(\"tl_exp\")\n        removeCookie(\"tl_token\")\n        window.location.reload()\n        props.history(\"/login\")\n      }\n\n      useEffect(() => {\n        if(cookies.tl_e && cookies.tl_token && cookies.tl_re && cookies.tl_exp) {\n          const date = new Date()\n          const expTime = parseInt(cookies.tl_exp)\n\n          const tokens = {\n            \"accessToken\": cookies.tl_token,\n            \"refreshToken\": cookies.tl_re\n          }\n\n          let over3h = expTime + 10800000\n\n          if(date.getTime() > expTime) {\n\n            // 로그인 후 3시간 이상 지났을 때는 cookie 삭제\n            if(date.getTime() > over3h) {\n              removeCookies()\n            }\n\n            Axios.post(\"/auth/reissue\", tokens)\n              .then(res => {\n                setCookie(\"tl_token\", res.data.accessToken)\n                setCookie(\"tl_exp\", res.data.accessTokenExpiresIn)\n                setCookie(\"tl_re\", res.data.refreshToken)\n                window.location.reload()\n                props.history(\"/mypage\")\n              })\n              .catch(err => {\n                removeCookies()\n              })\n            }\n\n          // member 정보 가져오기 위해 header에 token 담아서 넘김\n          Axios.defaults.headers.common['Authorization'] = `Bearer ${cookies.tl_token}`\n          dispatch(auth(cookies.tl_e))\n        // cookie에 token 관련 값 4개 중 하나라도 없으면 쿠키 삭제 후 login 페이지로 이동\n        } else {\n          if (option) {\n            removeCookie(\"tl_e\")\n            removeCookie(\"tl_re\")\n            removeCookie(\"tl_exp\")\n            removeCookie(\"tl_token\")\n            props.history.push(\"/login\")\n          }\n        }\n      }, [cookies])\n\n      return (\n        <SpecificComponent {...props} user={user} />\n      )\n    }\n  return AuthenticationCheck\n}\n","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\NavBar\\NavBar.js",["100","101"],"import React, { useState, useEffect } from 'react'\nimport { Menu, Button } from 'antd'\nimport styled from 'styled-components'\nimport { BrowserView, MobileView } from 'react-device-detect'\nimport { MenuOutlined, MenuFoldOutlined } from '@ant-design/icons'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { useCookies } from \"react-cookie\"\nimport Axios from \"axios\"\n\nconst Logo =  styled.div`\n  font-weight: bold;\n  font-size: 3.5vh;\n  padding: 1rem;\n  span {\n    color: #f0f0f0;\n  }\n  a {\n    color: black !important;\n  }\n  + div {\n    border-bottom: 1px solid #f0f0f0;\n  }\n`;\n\nconst MenuList = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst LogoM = styled.div`\n  font-weight: bold;\n  font-size: 3.5vh;\n  padding: 1rem;\n  display: flex;\n  justify-content: space-between;\n  span {\n    color: #f0f0f0;\n  }\n  a {\n    color: black !important;\n  }\n\n  Button {\n    background: black !important;\n    border: none;\n  }\n`;\n\nconst NavBar = (props) => {\n\n  const [toggleMenu, setToggleMenu] = useState(false)\n  const [toggleBar, setToggleBar] = useState(true)\n  const [cookies, setCookie, removeCookie] = useCookies([])\n  const [auth, setAuth] = useState(false)\n\n  useEffect(() => {\n    if(cookies.tl_token !== undefined) {\n      setAuth(true)\n    }\n  }, [cookies])\n\n  const toggleChange = () => {\n    setToggleMenu(!toggleMenu)\n    setToggleBar(!toggleBar)\n  }\n\n  const onMenuClick = () => {\n    setToggleMenu(!toggleMenu)\n    setToggleBar(!toggleBar)\n  }\n\n  const onLogout = () => {\n    if(auth && cookies.tl_e) {\n      Axios.get(`/auth/logout/${cookies.tl_e}`)\n        .then(res => {\n          removeCookie(\"tl_e\")\n          removeCookie(\"tl_re\")\n          removeCookie(\"tl_exp\")\n          removeCookie(\"tl_token\")\n          window.location.reload()\n          props.history(\"/login\")\n        })\n    }\n  }\n\n  return(\n    <div>\n      <BrowserView>\n        <Logo>\n          <Link to=\"/\">\n            TI<span>MELI</span>NE\n          </Link>\n        </Logo>\n        <MenuList>\n          <Menu selectedKeys=\"mail\" mode=\"horizontal\">\n            <Menu.Item key=\"timeline\">\n              타임라인\n            </Menu.Item>\n            <Menu.Item key=\"class\">\n              클래스\n            </Menu.Item>\n          </Menu>\n          <Menu mode=\"horizontal\">\n            <Menu.Item key=\"mypage\">\n              <Link to=\"/mypage\">\n                마이페이지\n              </Link>\n            </Menu.Item>\n            { auth ?\n            <>\n              <Menu.Item key=\"logout\" onClick={onLogout}>\n                로그아웃\n              </Menu.Item>\n            </>\n            :\n            <>\n              <Menu.Item key=\"login\">\n                <Link to=\"/login\">\n                  로그인\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"signup\">\n                <Link to=\"/signup\">\n                  회원가입\n                </Link>\n              </Menu.Item>\n            </>\n            }\n          </Menu>\n        </MenuList>\n      </BrowserView>\n      <MobileView>\n        <LogoM>\n          <Link to=\"/\">\n            TI<span>MELI</span>NE\n          </Link>\n          <div >\n            <Button type=\"primary\" onClick={toggleChange} style={{ marginBottom: 16 }}>\n              { toggleBar ? <MenuOutlined /> : <MenuFoldOutlined /> }\n            </Button>\n          </div>\n        </LogoM>\n        { toggleMenu ?\n          <Menu\n            defaultSelectedKeys={['1']}\n            mode=\"inline\"\n            theme=\"light\"\n            inlineCollapsed={toggleBar}\n            onClick={onMenuClick}\n          >\n            <Menu.Item key=\"timeline\">\n              타임라인\n            </Menu.Item>\n            <Menu.Item key=\"class\">\n              클래스\n            </Menu.Item>\n            <Menu.Item key=\"mypage\">\n              <Link to=\"/mypage\">\n                마이페이지\n              </Link>\n            </Menu.Item>\n            { auth ?\n              <>\n                <Menu.Item key=\"logout\" onClick={onLogout}>\n                  로그아웃\n                </Menu.Item>\n              </>\n              :\n              <>\n                <Menu.Item key=\"login\">\n                  <Link to=\"/login\">\n                    로그인\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"signup\">\n                  <Link to=\"/signup\">\n                    회원가입\n                  </Link>\n                </Menu.Item>\n              </>\n            }\n          </Menu>\n          : <></>\n        }\n      </MobileView>\n    </div>\n  )\n}\n\nexport default NavBar;\n","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\AuthPage\\FindPwPage.js",[],"C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\AuthPage\\SignupPage.js",[],"C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\MyPage\\MyPage.js",[],"C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\MyPage\\MyTimeline.js",[],"C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\AuthPage\\LoginPage.js",["102"],"import React, { useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport styled from \"styled-components\"\nimport { useHistory } from \"react-router-dom\"\nimport { useCookies } from \"react-cookie\"\nimport Axios from \"axios\"\nimport { Link } from \"react-router-dom\"\n\nconst LoginDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    // 비밀번호 찾기 영역\n    .ant-form-item:nth-child(2) {\n      margin-bottom: 0;\n      & + .ant-form-item .ant-col {\n        text-align: right;\n        #search {\n          color: lightgray !important;\n        }\n      }\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    .ant-input-password {\n      height: 32px;\n      input {\n        height: 100%;\n      }\n    }\n    button {\n      width: 100%;\n      background: black;\n      color: #ffffff;\n      margin-top: 1rem;\n    }\n  }\n`;\n\nconst LoginPage = () => {\n\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [errorMessage, setErrorMessage] = useState(\"\")\n  const [cookies, setCookie] = useCookies(\"\")\n\n  const history = useHistory()\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value)\n  }\n\n  const onChangePwd = (e) => {\n    setPassword(e.target.value)\n  }\n\n  const onLogin = () => {\n\n    var variables = {\n      \"email\": email,\n      \"password\": password\n    }\n\n    Axios.post(\"/auth/login\", variables)\n      .then(res => {\n        setCookie(\"tl_token\", res.data.accessToken)\n        setCookie(\"tl_exp\", res.data.accessTokenExpiresIn)\n        setCookie(\"tl_e\", email)\n        setCookie(\"tl_re\", res.data.refreshToken)\n        history.push(\"/mypage\")\n        window.location.reload()\n      })\n      .catch(err => {\n        setErrorMessage(\"이메일이나 비밀번호를 다시 확인해 주세요\")\n      })\n  }\n\n  return (\n    <LoginDiv>\n      <h1>로그인</h1>\n      <br />\n      <Form>\n        <Form.Item\n          label=\"이메일 주소:\"\n          name=\"email\"\n          rules={[{ required: true }]}\n        >\n          <Input value={email} onChange={onChangeEmail} />\n        </Form.Item>\n        <Form.Item\n          label=\"비밀번호:\"\n          name=\"password\"\n          rules={[{ required: true }]}\n        >\n          <Input.Password value={password} onChange={onChangePwd} />\n        </Form.Item>\n        <Form.Item name=\"search\">\n          <Link to=\"/findpw\">\n            비밀번호 찾기\n          </Link>\n        </Form.Item>\n        {errorMessage && (\n          <label><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{errorMessage}</p></label>\n        )}\n        <Form.Item>\n          <Button size=\"large\" onClick={onLogin}>\n            로그인\n          </Button>\n        </Form.Item>\n      </Form>\n    </LoginDiv>\n  )\n}\n\nexport default LoginPage;\n","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\MyPage\\MyInfo.js",["103"],"import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { Form, Input, Button } from \"antd\"\nimport { useSelector } from \"react-redux\"\nimport Axios from \"axios\"\nimport MenuBar from \"./Sections/MenuBar\"\n\nconst InfoDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    // 닉네임 영역\n    #nickname {\n      display: flex;\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    .ant-input-password {\n      height: 32px;\n      input {\n        height: 100%;\n      }\n    }\n    .ant-form-item:last-child {\n      button {\n        width: 100%;\n        background: black;\n        color: #ffffff;\n        margin-top: 1rem;\n      }\n    }\n  }\n`\n\n\nconst MyInfo = () => {\n\n  const [email, setEmail] = useState(\"\")\n  const [nickname, setNickname] = useState([])\n  const [password1, setPassword1] = useState(\"\")\n  const [password2, setPassword2] = useState(\"\")\n  const [existingPw, setExistingPw] = useState(\"\")\n  const [checkDuplicate, setCheckDuplicate] = useState(false)\n  const [checkValid, setCheckValid] = useState(true)\n\n  const user = useSelector(state => state.user.userData)\n\n  useEffect(() => {\n    if(user !== undefined) {\n      setEmail(user.email)\n      setNickname(user.nickname)\n\n      Axios.get(`/member/${user.email}`)\n        .then(res => {\n          setExistingPw(res.data.password)\n        })\n    }\n  }, [user])\n\n  const onChangeNick = (e) => {\n    setNickname(e.target.value)\n    setCheckDuplicate(false)\n  }\n\n  const onChangePwd1 = (e) => {\n    setPassword1(e.target.value)\n  }\n\n  const onChangePwd2 = (e) => {\n    setPassword2(e.target.value)\n  }\n\n  // 중복확인 체크\n  const onCheckDup = () => {\n    Axios.get(\"/member/ids\")\n      .then(res => {\n        const duplicate = res.data.filter(item => item.nickname === nickname)\n        // 닉네임 중복일 경우\n        if(duplicate.length > 0) {\n          // 다른 사람 닉네임과 중복일 경우\n          if(nickname !== user.nickname) {\n            setCheckDuplicate(false)\n            alert(\"이미 사용 중인 닉네임입니다\")\n          // 내 기존 닉네임일 경우\n          } else {\n            setCheckDuplicate(true)\n            alert(\"사용할 수 있는 닉네임입니다\")\n          }\n        } else {\n          setCheckDuplicate(true)\n          alert(\"사용할 수 있는 닉네임입니다\")\n        }\n      })\n  }\n\n  const onChangeInfo = () => {\n\n    // 닉네임 중복확인 버튼 클릭하도록 하기\n    if(checkDuplicate === false) {\n      alert(\"닉네임 중복확인을 해주세요\")\n      return false\n    } else if(password1 || password2) {\n      if(password1 !== password2) {\n        alert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다\")\n        return false\n      }\n    }\n\n    const variables = {\n      \"nickname\": nickname,\n      \"password\": password1 ? password1 : existingPw\n    }\n\n    if(checkDuplicate && checkValid) {\n      Axios.put(`/member/${email}`, variables)\n        .then(res => {\n          // 닉네임, 비밀번호 변경 성공 시 페이지 새로고침\n          if(res.status === 200) {\n            window.location.reload()\n          }\n        })\n    }\n  }\n\n  return (\n    <div>\n      <MenuBar />\n      <InfoDiv>\n        <Form>\n          <Form.Item\n            label=\"이메일:\"\n            name=\"email\"\n            rules={[{ required: true }]}\n          >\n            <div>\n              { email &&\n                <Input value={email} disabled />\n              }\n            </div>\n          </Form.Item>\n          <Form.Item\n            label=\"닉네임:\"\n            name=\"nickname\"\n            rules={[{ required: true }]}\n          >\n            <div>\n              <Input value={nickname} onChange={onChangeNick} />\n              <Button onClick={onCheckDup}>중복확인</Button>\n            </div>\n          </Form.Item>\n          <Form.Item\n            label=\"비밀번호(8~16자):\"\n            name=\"password1\"\n            rules={[{ required: true, min: 8, max: 16, message: '다시 입력해 주세요' }]}\n          >\n            <Input.Password value={password1} onChange={onChangePwd1} />\n          </Form.Item>\n          <Form.Item\n            label=\"비밀번호 확인(8~16자):\"\n            name=\"password2\"\n            rules={[{ required: true, min: 8, max: 16, message: '다시 입력해 주세요' }]}\n          >\n            <Input.Password value={password2} onChange={onChangePwd2} />\n          </Form.Item>\n          <Form.Item\n            name=\"button\"\n          >\n            <Button size=\"large\" onClick={onChangeInfo}>\n              수정하기\n            </Button>\n          </Form.Item>\n        </Form>\n      </InfoDiv>\n    </div>\n  )\n}\n\nexport default MyInfo\n","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\CreateTimeline\\CreateTimeline.js",[],"C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\TimelinePage\\TimelinePage.js",[],"C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\_reducers\\user_reducer.js",[],"C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\MyPage\\Sections\\MenuBar.js",[],"C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\CreateTimeline\\Sections\\TimelineDetail.js",[],"C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\CreateTimeline\\Sections\\TimelineView.js",[],"C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\_actions\\types.js",[],"C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\_actions\\user_actions.js",[],"C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\CreateTimeline\\Sections\\UploadImage.js",[],"C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\MyPage\\TimelineList.js",["104"],"import React, { useState, useEffect } from \"react\"\nimport { Table, Tag } from \"antd\"\nimport styled from \"styled-components\"\nimport Axios from \"axios\"\nimport { useSelector } from \"react-redux\"\n\nconst TimelineListDiv = styled.div`\n  padding: 3rem 2rem;\n`\n\nconst TimelineList = () => {\n  const [list, setList] = useState([])\n\n  const user = useSelector(state => state.user)\n\n  const columns = [\n    {\n      title: '이미지',\n      dataIndex: 'image',\n      key: 'image',\n    },\n    {\n      title: '제목',\n      dataIndex: 'title',\n      key: 'title',\n    },\n    {\n      title: '분야',\n      dataIndex: 'category',\n      key: 'category',\n    },\n    {\n      title: '진행여부',\n      dataIndex: 'complete',\n      key: 'complete',\n      render: complete => (\n        <div>\n          { complete ?\n            <Tag color=\"skyblue\">진행중</Tag>\n            :\n            <Tag color=\"mediumpurple\">진행완료</Tag>\n          }\n        </div>\n      ),\n    },\n    {\n      title: '공개여부',\n      dataIndex: 'open',\n      key: 'open',\n      render: open => (\n        <div>\n          { open ?\n            <Tag color=\"black\">공개</Tag>\n            :\n            <Tag color=\"lightgray\">비공개</Tag>\n          }\n        </div>\n      )\n    },\n    {\n      title: '조회수',\n      dataIndex: 'viewCount',\n      key: 'viewCount',\n    },\n    {\n      title: '추천수',\n      dataIndex: 'likeCount',\n      key: 'likeCount',\n    },\n    {\n      title: '생성일자',\n      dataIndex: 'createdDate',\n      key: 'createdDate',\n      render: date => (\n        <div>\n          {date.substring(0, 10)}\n        </div>\n      )\n    },\n ]\n\n  useEffect(() => {\n    let idList = []\n\n    if(user.userData !== undefined && user.userData.email !== undefined) {\n      Axios.get(`/timeline/master/${user.userData.email}`)\n        .then(res => {\n          if(res.data) {\n            setList(res.data)\n          }\n        })\n    }\n  }, [user])\n\n  return (\n    <TimelineListDiv>\n      <Table columns={columns} dataSource={list} rowKey={list => list.id} pagination={false} />\n    </TimelineListDiv>\n  )\n}\n\nexport default TimelineList\n","C:\\Users\\tlagy\\Desktop\\개발 공부\\프로젝트\\timeline\\frontend\\my-app\\src\\components\\MyPage\\Sections\\SomeTimeline.js",[],{"ruleId":"105","severity":1,"message":"106","line":68,"column":10,"nodeType":"107","endLine":68,"endColumn":19,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":7,"column":10,"nodeType":"111","messageId":"112","endLine":7,"endColumn":21},{"ruleId":"109","severity":1,"message":"113","line":54,"column":19,"nodeType":"111","messageId":"112","endLine":54,"endColumn":28},{"ruleId":"109","severity":1,"message":"114","line":55,"column":10,"nodeType":"111","messageId":"112","endLine":55,"endColumn":17},{"ruleId":"109","severity":1,"message":"115","line":54,"column":22,"nodeType":"111","messageId":"112","endLine":54,"endColumn":35},{"ruleId":"109","severity":1,"message":"116","line":83,"column":9,"nodeType":"111","messageId":"112","endLine":83,"endColumn":15},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'props', 'removeCookie', 'removeCookies', and 'setCookie'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["117"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'setCookie' is assigned a value but never used.","'cookies' is assigned a value but never used.","'setCheckValid' is assigned a value but never used.","'idList' is assigned a value but never used.",{"desc":"118","fix":"119"},"Update the dependencies array to be: [cookies, dispatch, props, removeCookie, removeCookies, setCookie]",{"range":"120","text":"121"},[2209,2218],"[cookies, dispatch, props, removeCookie, removeCookies, setCookie]"]