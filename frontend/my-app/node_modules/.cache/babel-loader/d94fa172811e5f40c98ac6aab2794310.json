{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tlagy\\\\Desktop\\\\\\uAC1C\\uBC1C \\uACF5\\uBD80\\\\\\uD504\\uB85C\\uC81D\\uD2B8\\\\timeline\\\\frontend\\\\my-app\\\\src\\\\hoc\\\\auth.js\";\nimport React, { useEffect } from \"react\";\nimport { auth } from \"../_actions/user_actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useCookies } from \"react-cookie\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function authHoc(SpecificComponent, option, adminRoute = null) {\n  var _s = $RefreshSig$();\n\n  function AuthenticationCheck(props) {\n    _s();\n\n    const [cookies, setCookie] = useCookies([]);\n    let user = useSelector(state => state.user);\n    const dispatch = useDispatch();\n    useEffect(() => {\n      if (!cookies.tl_e || !cookies.tl_token || !cookies.tl_re || !cookies.tl_exp) {\n        if (option) {\n          props.history.push(\"/login\");\n        }\n      } else {\n        const date = new Date();\n        const expTime = parseInt(cookies.tl_exp);\n        const tokens = {\n          \"accessToken\": cookies.tl_token,\n          \"refreshToken\": cookies.tl_re\n        };\n\n        if (date.getTime() > expTime) {\n          Axios.post(\"/auth/reissue\", tokens).then(res => {\n            setCookie(\"tl_token\", res.data.accessToken);\n            setCookie(\"tl_exp\", res.data.accessTokenExpiresIn);\n            setCookie(\"tl_re\", res.data.refreshToken);\n          });\n        } // member 정보 가져오기 위해 header에 token 담아서 넘김\n\n\n        Axios.defaults.headers.common['Authorization'] = `Bearer ${cookies.tl_token}`;\n        dispatch(auth(cookies.tl_e));\n      }\n    }, [cookies]);\n    return /*#__PURE__*/_jsxDEV(SpecificComponent, { ...props,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this);\n  }\n\n  _s(AuthenticationCheck, \"ArvDvEI3iji/Czirt3hZfGLow+Q=\", false, function () {\n    return [useCookies, useSelector, useDispatch];\n  });\n\n  return AuthenticationCheck;\n}","map":{"version":3,"sources":["C:/Users/tlagy/Desktop/개발 공부/프로젝트/timeline/frontend/my-app/src/hoc/auth.js"],"names":["React","useEffect","auth","useSelector","useDispatch","useCookies","Axios","authHoc","SpecificComponent","option","adminRoute","AuthenticationCheck","props","cookies","setCookie","user","state","dispatch","tl_e","tl_token","tl_re","tl_exp","history","push","date","Date","expTime","parseInt","tokens","getTime","post","then","res","data","accessToken","accessTokenExpiresIn","refreshToken","defaults","headers","common"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,0BAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,OAAT,CAAiBC,iBAAjB,EAAoCC,MAApC,EAA4CC,UAAU,GAAG,IAAzD,EAA+D;AAAA;;AAC1E,WAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAElC,UAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBT,UAAU,CAAC,EAAD,CAAvC;AACA,QAAIU,IAAI,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAtB;AACA,UAAME,QAAQ,GAAGb,WAAW,EAA5B;AAEAH,IAAAA,SAAS,CAAC,MAAM;AACZ,UAAI,CAACY,OAAO,CAACK,IAAT,IAAiB,CAACL,OAAO,CAACM,QAA1B,IAAsC,CAACN,OAAO,CAACO,KAA/C,IAAwD,CAACP,OAAO,CAACQ,MAArE,EAA6E;AAC3E,YAAIZ,MAAJ,EAAY;AACVG,UAAAA,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACD;AACA,OAJH,MAIS;AACL,cAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,cAAMC,OAAO,GAAGC,QAAQ,CAACd,OAAO,CAACQ,MAAT,CAAxB;AAEA,cAAMO,MAAM,GAAG;AACb,yBAAef,OAAO,CAACM,QADV;AAEb,0BAAgBN,OAAO,CAACO;AAFX,SAAf;;AAKA,YAAGI,IAAI,CAACK,OAAL,KAAiBH,OAApB,EAA6B;AAC3BpB,UAAAA,KAAK,CAACwB,IAAN,CAAW,eAAX,EAA4BF,MAA5B,EACGG,IADH,CACQC,GAAG,IAAI;AACXlB,YAAAA,SAAS,CAAC,UAAD,EAAakB,GAAG,CAACC,IAAJ,CAASC,WAAtB,CAAT;AACApB,YAAAA,SAAS,CAAC,QAAD,EAAWkB,GAAG,CAACC,IAAJ,CAASE,oBAApB,CAAT;AACArB,YAAAA,SAAS,CAAC,OAAD,EAAUkB,GAAG,CAACC,IAAJ,CAASG,YAAnB,CAAT;AACD,WALH;AAMC,SAhBE,CAkBL;;;AACA9B,QAAAA,KAAK,CAAC+B,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,UAAS1B,OAAO,CAACM,QAAS,EAA5E;AACAF,QAAAA,QAAQ,CAACf,IAAI,CAACW,OAAO,CAACK,IAAT,CAAL,CAAR;AACD;AACN,KA3BQ,EA2BN,CAACL,OAAD,CA3BM,CAAT;AA6BA,wBACE,QAAC,iBAAD,OAAuBD,KAAvB;AAA8B,MAAA,IAAI,EAAEG;AAApC;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAvCyE,KACjEJ,mBADiE;AAAA,YAG3CN,UAH2C,EAI7DF,WAJ6D,EAKvDC,WALuD;AAAA;;AAwC5E,SAAOO,mBAAP;AACD","sourcesContent":["import React, { useEffect } from \"react\"\nimport { auth } from \"../_actions/user_actions\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useCookies } from \"react-cookie\"\nimport Axios from \"axios\"\n\nexport default function authHoc(SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n      const [cookies, setCookie] = useCookies([])\n      let user = useSelector(state => state.user)\n      const dispatch = useDispatch()\n\n      useEffect(() => {\n          if (!cookies.tl_e || !cookies.tl_token || !cookies.tl_re || !cookies.tl_exp) {\n            if (option) {\n              props.history.push(\"/login\")\n            }\n            } else {\n              const date = new Date()\n              const expTime = parseInt(cookies.tl_exp)\n\n              const tokens = {\n                \"accessToken\": cookies.tl_token,\n                \"refreshToken\": cookies.tl_re\n              }\n\n              if(date.getTime() > expTime) {\n                Axios.post(\"/auth/reissue\", tokens)\n                  .then(res => {\n                    setCookie(\"tl_token\", res.data.accessToken)\n                    setCookie(\"tl_exp\", res.data.accessTokenExpiresIn)\n                    setCookie(\"tl_re\", res.data.refreshToken)\n                  })\n                }\n\n              // member 정보 가져오기 위해 header에 token 담아서 넘김\n              Axios.defaults.headers.common['Authorization'] = `Bearer ${cookies.tl_token}`\n              dispatch(auth(cookies.tl_e))\n            }\n      }, [cookies])\n\n      return (\n        <SpecificComponent {...props} user={user} />\n      )\n    }\n  return AuthenticationCheck\n}\n"]},"metadata":{},"sourceType":"module"}