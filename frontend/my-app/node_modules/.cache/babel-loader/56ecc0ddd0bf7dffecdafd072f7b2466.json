{"ast":null,"code":"import _objectSpread from\"C:/Users/tlagy/Desktop/\\uAC1C\\uBC1C \\uACF5\\uBD80/\\uD504\\uB85C\\uC81D\\uD2B8/timeline/frontend/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/tlagy/Desktop/\\uAC1C\\uBC1C \\uACF5\\uBD80/\\uD504\\uB85C\\uC81D\\uD2B8/timeline/frontend/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from\"react\";import{auth}from\"../_actions/user_actions\";import{useSelector,useDispatch}from\"react-redux\";import{useCookies}from\"react-cookie\";import Axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function authHoc(SpecificComponent,option){var adminRoute=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;function AuthenticationCheck(props){var _useCookies=useCookies([]),_useCookies2=_slicedToArray(_useCookies,2),cookies=_useCookies2[0],setCookie=_useCookies2[1];var user=useSelector(function(state){return state.user;});var dispatch=useDispatch();useEffect(function(){if(!cookies.tl_e||!cookies.tl_token||!cookies.tl_re||!cookies.tl_exp){if(option){props.history.push(\"/login\");}}else{var date=new Date();var expTime=parseInt(cookies.tl_exp);var tokens={\"accessToken\":cookies.tl_token,\"refreshToken\":cookies.tl_re};if(date.getTime()>expTime){Axios.post(\"/auth/reissue\",tokens).then(function(res){setCookie(\"tl_token\",res.data.accessToken);setCookie(\"tl_exp\",res.data.accessTokenExpiresIn);setCookie(\"tl_re\",res.data.refreshToken);});}// member 정보 가져오기 위해 header에 token 담아서 넘김\nAxios.defaults.headers.common['Authorization']=\"Bearer \".concat(cookies.tl_token);dispatch(auth(cookies.tl_e));}},[cookies]);return/*#__PURE__*/_jsx(SpecificComponent,_objectSpread(_objectSpread({},props),{},{user:user}));}return AuthenticationCheck;}","map":{"version":3,"sources":["C:/Users/tlagy/Desktop/개발 공부/프로젝트/timeline/frontend/my-app/src/hoc/auth.js"],"names":["React","useEffect","auth","useSelector","useDispatch","useCookies","Axios","authHoc","SpecificComponent","option","adminRoute","AuthenticationCheck","props","cookies","setCookie","user","state","dispatch","tl_e","tl_token","tl_re","tl_exp","history","push","date","Date","expTime","parseInt","tokens","getTime","post","then","res","data","accessToken","accessTokenExpiresIn","refreshToken","defaults","headers","common"],"mappings":"ibAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,KAAqB,0BAArB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,2CAEA,cAAe,SAASC,CAAAA,OAAT,CAAiBC,iBAAjB,CAAoCC,MAApC,CAA+D,IAAnBC,CAAAA,UAAmB,2DAAN,IAAM,CAC1E,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAElC,gBAA6BP,UAAU,CAAC,EAAD,CAAvC,4CAAOQ,OAAP,iBAAgBC,SAAhB,iBACA,GAAIC,CAAAA,IAAI,CAAGZ,WAAW,CAAC,SAAAa,KAAK,QAAIA,CAAAA,KAAK,CAACD,IAAV,EAAN,CAAtB,CACA,GAAME,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CAEAH,SAAS,CAAC,UAAM,CACZ,GAAI,CAACY,OAAO,CAACK,IAAT,EAAiB,CAACL,OAAO,CAACM,QAA1B,EAAsC,CAACN,OAAO,CAACO,KAA/C,EAAwD,CAACP,OAAO,CAACQ,MAArE,CAA6E,CAC3E,GAAIZ,MAAJ,CAAY,CACVG,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmB,QAAnB,EACD,CACA,CAJH,IAIS,CACL,GAAMC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,EAAb,CACA,GAAMC,CAAAA,OAAO,CAAGC,QAAQ,CAACd,OAAO,CAACQ,MAAT,CAAxB,CAEA,GAAMO,CAAAA,MAAM,CAAG,CACb,cAAef,OAAO,CAACM,QADV,CAEb,eAAgBN,OAAO,CAACO,KAFX,CAAf,CAKA,GAAGI,IAAI,CAACK,OAAL,GAAiBH,OAApB,CAA6B,CAC3BpB,KAAK,CAACwB,IAAN,CAAW,eAAX,CAA4BF,MAA5B,EACGG,IADH,CACQ,SAAAC,GAAG,CAAI,CACXlB,SAAS,CAAC,UAAD,CAAakB,GAAG,CAACC,IAAJ,CAASC,WAAtB,CAAT,CACApB,SAAS,CAAC,QAAD,CAAWkB,GAAG,CAACC,IAAJ,CAASE,oBAApB,CAAT,CACArB,SAAS,CAAC,OAAD,CAAUkB,GAAG,CAACC,IAAJ,CAASG,YAAnB,CAAT,CACD,CALH,EAMC,CAEH;AACA9B,KAAK,CAAC+B,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,mBAA2D1B,OAAO,CAACM,QAAnE,EACAF,QAAQ,CAACf,IAAI,CAACW,OAAO,CAACK,IAAT,CAAL,CAAR,CACD,CACN,CA3BQ,CA2BN,CAACL,OAAD,CA3BM,CAAT,CA6BA,mBACE,KAAC,iBAAD,gCAAuBD,KAAvB,MAA8B,IAAI,CAAEG,IAApC,GADF,CAGD,CACH,MAAOJ,CAAAA,mBAAP,CACD","sourcesContent":["import React, { useEffect } from \"react\"\nimport { auth } from \"../_actions/user_actions\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useCookies } from \"react-cookie\"\nimport Axios from \"axios\"\n\nexport default function authHoc(SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n      const [cookies, setCookie] = useCookies([])\n      let user = useSelector(state => state.user)\n      const dispatch = useDispatch()\n\n      useEffect(() => {\n          if (!cookies.tl_e || !cookies.tl_token || !cookies.tl_re || !cookies.tl_exp) {\n            if (option) {\n              props.history.push(\"/login\")\n            }\n            } else {\n              const date = new Date()\n              const expTime = parseInt(cookies.tl_exp)\n\n              const tokens = {\n                \"accessToken\": cookies.tl_token,\n                \"refreshToken\": cookies.tl_re\n              }\n\n              if(date.getTime() > expTime) {\n                Axios.post(\"/auth/reissue\", tokens)\n                  .then(res => {\n                    setCookie(\"tl_token\", res.data.accessToken)\n                    setCookie(\"tl_exp\", res.data.accessTokenExpiresIn)\n                    setCookie(\"tl_re\", res.data.refreshToken)\n                  })\n                }\n\n              // member 정보 가져오기 위해 header에 token 담아서 넘김\n              Axios.defaults.headers.common['Authorization'] = `Bearer ${cookies.tl_token}`\n              dispatch(auth(cookies.tl_e))\n            }\n      }, [cookies])\n\n      return (\n        <SpecificComponent {...props} user={user} />\n      )\n    }\n  return AuthenticationCheck\n}\n"]},"metadata":{},"sourceType":"module"}