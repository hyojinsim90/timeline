{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tlagy\\\\Desktop\\\\\\uAC1C\\uBC1C \\uACF5\\uBD80\\\\\\uD504\\uB85C\\uC81D\\uD2B8\\\\timeline\\\\frontend\\\\my-app\\\\src\\\\components\\\\MyPage\\\\MyInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport Axios from \"axios\";\nimport MenuBar from \"./Sections/MenuBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfoDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    // 닉네임 영역\n    #nickname {\n      display: flex;\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    .ant-input-password {\n      height: 32px;\n      input {\n        height: 100%;\n      }\n    }\n    .ant-form-item:last-child {\n      button {\n        width: 100%;\n        background: black;\n        color: #ffffff;\n        margin-top: 1rem;\n      }\n    }\n  }\n`;\n_c = InfoDiv;\n\nconst MyInfo = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [nickname, setNickname] = useState([]);\n  const [password1, setPassword1] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [existingPw, setExistingPw] = useState(\"\");\n  const [checkDuplicate, setCheckDuplicate] = useState(false);\n  const [checkValid, setCheckValid] = useState(true);\n  const user = useSelector(state => state.user.userData);\n  useEffect(() => {\n    if (user !== undefined) {\n      setEmail(user.email);\n      setNickname(user.nickname);\n      Axios.get(`/member/${user.email}`).then(res => {\n        setExistingPw(res.data.password);\n      });\n    }\n  }, [user]);\n\n  const onChangeNick = e => {\n    setNickname(e.target.value);\n    setCheckDuplicate(false);\n  };\n\n  const onChangePwd1 = e => {\n    setPassword1(e.target.value);\n  };\n\n  const onChangePwd2 = e => {\n    setPassword2(e.target.value);\n  }; // 중복확인 체크\n\n\n  const onCheckDup = () => {\n    Axios.get(\"/member/ids\").then(res => {\n      const duplicate = res.data.filter(item => item.nickname === nickname); // 닉네임 중복일 경우\n\n      if (duplicate.length > 0) {\n        // 다른 사람 닉네임과 중복일 경우\n        if (nickname !== user.nickname) {\n          setCheckDuplicate(false);\n          alert(\"이미 사용 중인 닉네임입니다\"); // 내 기존 닉네임일 경우\n        } else {\n          setCheckDuplicate(true);\n          alert(\"사용할 수 있는 닉네임입니다\");\n        }\n      } else {\n        setCheckDuplicate(true);\n        alert(\"사용할 수 있는 닉네임입니다\");\n      }\n    });\n  };\n\n  const onChangeInfo = () => {\n    // 닉네임 중복확인 버튼 클릭하도록 하기\n    if (checkDuplicate === false) {\n      alert(\"닉네임 중복확인을 해주세요\");\n      return false;\n    } else if (password1 || password2) {\n      if (password1 !== password2) {\n        alert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다\");\n        return false;\n      }\n    }\n\n    const variables = {\n      \"nickname\": nickname,\n      \"password\": password1 ? password1 : existingPw\n    };\n\n    if (checkDuplicate && checkValid) {\n      Axios.put(`/member/${email}`, variables).then(res => {\n        // 닉네임, 비밀번호 변경 성공 시 페이지 새로고침\n        if (res.status === 200) {\n          window.location.reload();\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoDiv, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\uC774\\uBA54\\uC77C:\",\n          name: \"email\",\n          rules: [{\n            required: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: email && /*#__PURE__*/_jsxDEV(Input, {\n              value: email,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\uB2C9\\uB124\\uC784:\",\n          name: \"nickname\",\n          rules: [{\n            required: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              value: nickname,\n              onChange: onChangeNick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onCheckDup,\n              children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\uBE44\\uBC00\\uBC88\\uD638(8~16\\uC790):\",\n          name: \"password1\",\n          rules: [{\n            required: true,\n            min: 8,\n            max: 16,\n            message: '다시 입력해 주세요'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            value: password1,\n            onChange: onChangePwd1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778(8~16\\uC790):\",\n          name: \"password2\",\n          rules: [{\n            required: true,\n            min: 8,\n            max: 16,\n            message: '다시 입력해 주세요'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            value: password2,\n            onChange: onChangePwd2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"button\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"large\",\n            onClick: onChangeInfo,\n            children: \"\\uC218\\uC815\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyInfo, \"9e0sR69fHuAU3nGry23yzw2i0Cc=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = MyInfo;\nexport default MyInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InfoDiv\");\n$RefreshReg$(_c2, \"MyInfo\");","map":{"version":3,"sources":["C:/Users/tlagy/Desktop/개발 공부/프로젝트/timeline/frontend/my-app/src/components/MyPage/MyInfo.js"],"names":["React","useState","useEffect","styled","Form","Input","Button","useSelector","Axios","MenuBar","InfoDiv","div","MyInfo","email","setEmail","nickname","setNickname","password1","setPassword1","password2","setPassword2","existingPw","setExistingPw","checkDuplicate","setCheckDuplicate","checkValid","setCheckValid","user","state","userData","undefined","get","then","res","data","password","onChangeNick","e","target","value","onChangePwd1","onChangePwd2","onCheckDup","duplicate","filter","item","length","alert","onChangeInfo","variables","put","status","window","location","reload","required","min","max","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { Form, Input, Button } from \"antd\"\nimport { useSelector } from \"react-redux\"\nimport Axios from \"axios\"\nimport MenuBar from \"./Sections/MenuBar\"\n\nconst InfoDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    // 닉네임 영역\n    #nickname {\n      display: flex;\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    .ant-input-password {\n      height: 32px;\n      input {\n        height: 100%;\n      }\n    }\n    .ant-form-item:last-child {\n      button {\n        width: 100%;\n        background: black;\n        color: #ffffff;\n        margin-top: 1rem;\n      }\n    }\n  }\n`\n\n\nconst MyInfo = () => {\n\n  const [email, setEmail] = useState(\"\")\n  const [nickname, setNickname] = useState([])\n  const [password1, setPassword1] = useState(\"\")\n  const [password2, setPassword2] = useState(\"\")\n  const [existingPw, setExistingPw] = useState(\"\")\n  const [checkDuplicate, setCheckDuplicate] = useState(false)\n  const [checkValid, setCheckValid] = useState(true)\n\n  const user = useSelector(state => state.user.userData)\n\n  useEffect(() => {\n    if(user !== undefined) {\n      setEmail(user.email)\n      setNickname(user.nickname)\n\n      Axios.get(`/member/${user.email}`)\n        .then(res => {\n          setExistingPw(res.data.password)\n        })\n    }\n  }, [user])\n\n  const onChangeNick = (e) => {\n    setNickname(e.target.value)\n    setCheckDuplicate(false)\n  }\n\n  const onChangePwd1 = (e) => {\n    setPassword1(e.target.value)\n  }\n\n  const onChangePwd2 = (e) => {\n    setPassword2(e.target.value)\n  }\n\n  // 중복확인 체크\n  const onCheckDup = () => {\n    Axios.get(\"/member/ids\")\n      .then(res => {\n        const duplicate = res.data.filter(item => item.nickname === nickname)\n        // 닉네임 중복일 경우\n        if(duplicate.length > 0) {\n          // 다른 사람 닉네임과 중복일 경우\n          if(nickname !== user.nickname) {\n            setCheckDuplicate(false)\n            alert(\"이미 사용 중인 닉네임입니다\")\n          // 내 기존 닉네임일 경우\n          } else {\n            setCheckDuplicate(true)\n            alert(\"사용할 수 있는 닉네임입니다\")\n          }\n        } else {\n          setCheckDuplicate(true)\n          alert(\"사용할 수 있는 닉네임입니다\")\n        }\n      })\n  }\n\n  const onChangeInfo = () => {\n\n    // 닉네임 중복확인 버튼 클릭하도록 하기\n    if(checkDuplicate === false) {\n      alert(\"닉네임 중복확인을 해주세요\")\n      return false\n    } else if(password1 || password2) {\n      if(password1 !== password2) {\n        alert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다\")\n        return false\n      }\n    }\n\n    const variables = {\n      \"nickname\": nickname,\n      \"password\": password1 ? password1 : existingPw\n    }\n\n    if(checkDuplicate && checkValid) {\n      Axios.put(`/member/${email}`, variables)\n        .then(res => {\n          // 닉네임, 비밀번호 변경 성공 시 페이지 새로고침\n          if(res.status === 200) {\n            window.location.reload()\n          }\n        })\n    }\n  }\n\n  return (\n    <div>\n      <MenuBar />\n      <InfoDiv>\n        <Form>\n          <Form.Item\n            label=\"이메일:\"\n            name=\"email\"\n            rules={[{ required: true }]}\n          >\n            <div>\n              { email &&\n                <Input value={email} disabled />\n              }\n            </div>\n          </Form.Item>\n          <Form.Item\n            label=\"닉네임:\"\n            name=\"nickname\"\n            rules={[{ required: true }]}\n          >\n            <div>\n              <Input value={nickname} onChange={onChangeNick} />\n              <Button onClick={onCheckDup}>중복확인</Button>\n            </div>\n          </Form.Item>\n          <Form.Item\n            label=\"비밀번호(8~16자):\"\n            name=\"password1\"\n            rules={[{ required: true, min: 8, max: 16, message: '다시 입력해 주세요' }]}\n          >\n            <Input.Password value={password1} onChange={onChangePwd1} />\n          </Form.Item>\n          <Form.Item\n            label=\"비밀번호 확인(8~16자):\"\n            name=\"password2\"\n            rules={[{ required: true, min: 8, max: 16, message: '다시 입력해 주세요' }]}\n          >\n            <Input.Password value={password2} onChange={onChangePwd2} />\n          </Form.Item>\n          <Form.Item\n            name=\"button\"\n          >\n            <Button size=\"large\" onClick={onChangeInfo}>\n              수정하기\n            </Button>\n          </Form.Item>\n        </Form>\n      </InfoDiv>\n    </div>\n  )\n}\n\nexport default MyInfo\n"]},"metadata":{},"sourceType":"module"}