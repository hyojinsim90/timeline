{"ast":null,"code":"import _objectSpread from\"C:/Users/tlagy/Desktop/\\uAC1C\\uBC1C \\uACF5\\uBD80/\\uD504\\uB85C\\uC81D\\uD2B8/timeline/frontend/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/tlagy/Desktop/\\uAC1C\\uBC1C \\uACF5\\uBD80/\\uD504\\uB85C\\uC81D\\uD2B8/timeline/frontend/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from\"react\";import{auth}from\"../_actions/user_actions\";import{useSelector,useDispatch}from\"react-redux\";import{useCookies}from\"react-cookie\";import Axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function authHoc(SpecificComponent,option){var adminRoute=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;function AuthenticationCheck(props){var _useCookies=useCookies([]),_useCookies2=_slicedToArray(_useCookies,3),cookies=_useCookies2[0],setCookie=_useCookies2[1],removeCookie=_useCookies2[2];var user=useSelector(function(state){return state.user;});var dispatch=useDispatch();var removeCookies=function removeCookies(){removeCookie(\"tl_e\");removeCookie(\"tl_re\");removeCookie(\"tl_exp\");removeCookie(\"tl_token\");window.location.reload();props.history(\"/login\");};useEffect(function(){if(cookies.tl_e&&cookies.tl_token&&cookies.tl_re&&cookies.tl_exp){var date=new Date();var expTime=parseInt(cookies.tl_exp);var tokens={\"accessToken\":cookies.tl_token,\"refreshToken\":cookies.tl_re};var over3h=expTime+10800000;if(date.getTime()>expTime){if(date.getTime()>over3h){removeCookies();}Axios.post(\"/auth/reissue\",tokens).then(function(res){setCookie(\"tl_token\",res.data.accessToken);setCookie(\"tl_exp\",res.data.accessTokenExpiresIn);setCookie(\"tl_re\",res.data.refreshToken);window.location.reload();props.history(\"/mypage\");});}// member 정보 가져오기 위해 header에 token 담아서 넘김\nAxios.defaults.headers.common['Authorization']=\"Bearer \".concat(cookies.tl_token);dispatch(auth(cookies.tl_e));// cookie에 token 관련 값 4개 중 하나라도 없으면 쿠키 삭제 후 login 페이지로 이동\n}else{if(option){removeCookies();}}},[cookies]);return/*#__PURE__*/_jsx(SpecificComponent,_objectSpread(_objectSpread({},props),{},{user:user}));}return AuthenticationCheck;}","map":{"version":3,"sources":["C:/Users/tlagy/Desktop/개발 공부/프로젝트/timeline/frontend/my-app/src/hoc/auth.js"],"names":["React","useEffect","auth","useSelector","useDispatch","useCookies","Axios","authHoc","SpecificComponent","option","adminRoute","AuthenticationCheck","props","cookies","setCookie","removeCookie","user","state","dispatch","removeCookies","window","location","reload","history","tl_e","tl_token","tl_re","tl_exp","date","Date","expTime","parseInt","tokens","over3h","getTime","post","then","res","data","accessToken","accessTokenExpiresIn","refreshToken","defaults","headers","common"],"mappings":"ibAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,KAAqB,0BAArB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,2CAEA,cAAe,SAASC,CAAAA,OAAT,CAAiBC,iBAAjB,CAAoCC,MAApC,CAA+D,IAAnBC,CAAAA,UAAmB,2DAAN,IAAM,CAC1E,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAElC,gBAA2CP,UAAU,CAAC,EAAD,CAArD,4CAAOQ,OAAP,iBAAgBC,SAAhB,iBAA2BC,YAA3B,iBACA,GAAIC,CAAAA,IAAI,CAAGb,WAAW,CAAC,SAAAc,KAAK,QAAIA,CAAAA,KAAK,CAACD,IAAV,EAAN,CAAtB,CACA,GAAME,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CAEA,GAAMe,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BJ,YAAY,CAAC,MAAD,CAAZ,CACAA,YAAY,CAAC,OAAD,CAAZ,CACAA,YAAY,CAAC,QAAD,CAAZ,CACAA,YAAY,CAAC,UAAD,CAAZ,CACAK,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACAV,KAAK,CAACW,OAAN,CAAc,QAAd,EACD,CAPD,CASAtB,SAAS,CAAC,UAAM,CACd,GAAGY,OAAO,CAACW,IAAR,EAAgBX,OAAO,CAACY,QAAxB,EAAoCZ,OAAO,CAACa,KAA5C,EAAqDb,OAAO,CAACc,MAAhE,CAAwE,CACtE,GAAMC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,EAAb,CACA,GAAMC,CAAAA,OAAO,CAAGC,QAAQ,CAAClB,OAAO,CAACc,MAAT,CAAxB,CAEA,GAAMK,CAAAA,MAAM,CAAG,CACb,cAAenB,OAAO,CAACY,QADV,CAEb,eAAgBZ,OAAO,CAACa,KAFX,CAAf,CAKA,GAAIO,CAAAA,MAAM,CAAGH,OAAO,CAAG,QAAvB,CAEA,GAAGF,IAAI,CAACM,OAAL,GAAiBJ,OAApB,CAA6B,CAE3B,GAAGF,IAAI,CAACM,OAAL,GAAiBD,MAApB,CAA4B,CAC1Bd,aAAa,GACd,CAEDb,KAAK,CAAC6B,IAAN,CAAW,eAAX,CAA4BH,MAA5B,EACGI,IADH,CACQ,SAAAC,GAAG,CAAI,CACXvB,SAAS,CAAC,UAAD,CAAauB,GAAG,CAACC,IAAJ,CAASC,WAAtB,CAAT,CACAzB,SAAS,CAAC,QAAD,CAAWuB,GAAG,CAACC,IAAJ,CAASE,oBAApB,CAAT,CACA1B,SAAS,CAAC,OAAD,CAAUuB,GAAG,CAACC,IAAJ,CAASG,YAAnB,CAAT,CACArB,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACAV,KAAK,CAACW,OAAN,CAAc,SAAd,EACD,CAPH,EAQC,CAEH;AACAjB,KAAK,CAACoC,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,mBAA2D/B,OAAO,CAACY,QAAnE,EACAP,QAAQ,CAAChB,IAAI,CAACW,OAAO,CAACW,IAAT,CAAL,CAAR,CACF;AACC,CA/BD,IA+BO,CACL,GAAIf,MAAJ,CAAY,CACVU,aAAa,GACd,CACF,CACF,CArCQ,CAqCN,CAACN,OAAD,CArCM,CAAT,CAuCA,mBACE,KAAC,iBAAD,gCAAuBD,KAAvB,MAA8B,IAAI,CAAEI,IAApC,GADF,CAGD,CACH,MAAOL,CAAAA,mBAAP,CACD","sourcesContent":["import React, { useEffect } from \"react\"\nimport { auth } from \"../_actions/user_actions\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useCookies } from \"react-cookie\"\nimport Axios from \"axios\"\n\nexport default function authHoc(SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n      const [cookies, setCookie, removeCookie] = useCookies([])\n      let user = useSelector(state => state.user)\n      const dispatch = useDispatch()\n\n      const removeCookies = () => {\n        removeCookie(\"tl_e\")\n        removeCookie(\"tl_re\")\n        removeCookie(\"tl_exp\")\n        removeCookie(\"tl_token\")\n        window.location.reload()\n        props.history(\"/login\")\n      }\n\n      useEffect(() => {\n        if(cookies.tl_e && cookies.tl_token && cookies.tl_re && cookies.tl_exp) {\n          const date = new Date()\n          const expTime = parseInt(cookies.tl_exp)\n\n          const tokens = {\n            \"accessToken\": cookies.tl_token,\n            \"refreshToken\": cookies.tl_re\n          }\n\n          let over3h = expTime + 10800000\n\n          if(date.getTime() > expTime) {\n\n            if(date.getTime() > over3h) {\n              removeCookies()\n            }\n\n            Axios.post(\"/auth/reissue\", tokens)\n              .then(res => {\n                setCookie(\"tl_token\", res.data.accessToken)\n                setCookie(\"tl_exp\", res.data.accessTokenExpiresIn)\n                setCookie(\"tl_re\", res.data.refreshToken)\n                window.location.reload()\n                props.history(\"/mypage\")\n              })\n            }\n\n          // member 정보 가져오기 위해 header에 token 담아서 넘김\n          Axios.defaults.headers.common['Authorization'] = `Bearer ${cookies.tl_token}`\n          dispatch(auth(cookies.tl_e))\n        // cookie에 token 관련 값 4개 중 하나라도 없으면 쿠키 삭제 후 login 페이지로 이동\n        } else {\n          if (option) {\n            removeCookies()\n          }\n        }\n      }, [cookies])\n\n      return (\n        <SpecificComponent {...props} user={user} />\n      )\n    }\n  return AuthenticationCheck\n}\n"]},"metadata":{},"sourceType":"module"}