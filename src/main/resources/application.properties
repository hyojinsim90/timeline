spring.jpa.show_sql=true
spring.h2.console.enabled=true
server.port=8080
spring.devtools.livereload.enabled=true
spring.freemaker.cache=false
spring.resources.add-mappings=true
spring.profiles.include=oauth,real-db
jwt.secret=c3ByaW5nLWJvb3Qtc2VjdXJpdHktand0LXR1dG9yaWFsLWppd29vbi1zcHJpbmctYm9vdC1zZWN1cml0eS1qd3QtdHV0b3JpYWwK

# Google Oauth 설정
sns.google.url=https://accounts.google.com/o/oauth2/v2/auth
sns.google.client.id=568237960277-uls2vf866i9flbil61581apk9m45003g.apps.googleusercontent.com
sns.google.client.secret=froGv5SJcajSitvMdV0AiBLj
sns.google.client.scope=profile email
sns.google.callback.url=http://ec2-3-34-73-59.ap-northeast-2.compute.amazonaws.com:8080/login/oauth2/code/google
sns.google.token.url=https://oauth2.googleapis.com/token
sns.google.userinfo.url=https://www.googleapis.com/oauth2/v3/userinfo?access_token=

# Goolgle Oauth mariaDB 연결 ( local )
#sns.google.callback.url=http://localhost:8080/login/oauth2/code/google

## DB관련

# embedded DataSource의 schema를 생성한다. (기본값: always, 생성안함: never)
spring.datasource.initialization-mode=always
spring.datasource.platform=mysql

# mysqlDB 연결 ( local )
# 공통으로 사용되는 데이터베이스 관련 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.open-in-view=false

# sql 보기 옵션
# hibernate가 DB에 날리는 모든 쿼리를 보여준다.
spring.jpa.properties.hibernate.show_sql=true
# 보여지는 쿼리를 예쁘게 보여준다
spring.jpa.properties.hibernate.format_sql=true
# hibernate가 보여주는 로그에 있는 ?에 어떤 값이 들어갔는지 구체적으로 알고 싶을 때 사용하는 옵션
logging.level.org.hibernate.type.descriptor.sql=trace


# heroku - tiltest 원격 데이터베이스 접속 정보
spring.datasource.url=jdbc:mysql://b7d9972aaaa467:2a691fd5@us-cdbr-east-04.cleardb.com/heroku_ff45d7110f53cf9?autoReconnect=true&validationQuery=select 1
spring.datasource.username=b7d9972aaaa467
spring.datasource.password=2a691fd5

# 원격 데이터베이스 사용시 모델 변경 내용만 반영하도록 설정
spring.jpa.hibernate.ddl-auto=create

# 로그 레벨 ERROR 설정
logging.level.web=ERROR
logging.level.org.hibernate.SQL=ERROR

# smtp-mail인증
spring.mail.host: smtp.gmail.com
spring.mail.port: 587
spring.mail.username: timeline0418@gmail.com
spring.mail.password: Timeline0418!
spring.mail.properties.mail.smtp.starttls.enable: true
spring.mail.properties.mail.smtp.starttls.required: true
spring.mail.properties.mail.smtp.auth: true
spring.mail.properties.mail.smtp.connectiontimeout: 5000
spring.mail.properties.mail.smtp.timeout: 5000
spring.mail.properties.mail.smtp.writetimeout: 5000

# 멀티파트 지원 설정
spring.servlet.multipart.enabled=true
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB






