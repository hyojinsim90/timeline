{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\springboot\\\\workplace\\\\tiltest3\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\ManageTimeline\\\\Sections\\\\ModifyTimeline.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Input, Select, Button, Divider, Tag } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport { PlusCircleOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport TimelineDetail from \"../../CreateTimeline/Sections/TimelineDetail\";\nimport { useSelector } from \"react-redux\";\nimport TimelineView from \"../../CreateTimeline/Sections/TimelineView\";\nimport UploadImage from \"../../CreateTimeline/Sections/UploadImage\";\nconst ModifyTimelineDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 100%;\n    padding: 3rem;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    .ant-form-item:last-child {\n      .ant-form-item-control-input-content {\n        div:nth-child(2) {\n          margin-top: 20px;\n          align-items: center;\n          display: flex;\n          justify-content: center;\n        }\n      }\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    a button {\n      width: 100%;\n      background: black;\n      color: #ffffff;\n      margin-top: 100px;\n    }\n  }\n`;\n_c = ModifyTimelineDiv;\nconst ModifyDetailDiv = styled.div`\n  display: flex;\n  width: 100%;\n  div {\n    width: 100%;\n  }\n`;\n_c2 = ModifyDetailDiv;\nconst {\n  Option\n} = Select;\n\nconst ModifyTimeline = props => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [countList, setCountList] = useState([0]);\n  const [detailTitle, setDetailTitle] = useState([]);\n  const [detailDate, setDetailDate] = useState([]);\n  const [detailDateString, setDetailDateString] = useState([]);\n  const [detailContent, setDetailContent] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [complete, setComplete] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [files, setFiles] = useState([]);\n  const [filepath, setFilepath] = useState(\"\");\n  const [deleteStatus, setDeleteStatus] = useState(false);\n  const user = useSelector(state => state.user);\n  const history = useHistory();\n  useEffect(() => {\n    const countArr = [...countList];\n\n    if (props.timeline[0] !== undefined && props.detail !== undefined) {\n      setTitle(props.timeline[0].title);\n      setCategory(props.timeline[0].category);\n      setComplete(props.timeline[0].complete);\n      setOpen(props.timeline[0].open);\n\n      if (props.timeline[0].filePath !== null) {\n        const path = props.timeline[0].filePath.split(\"-\")[1];\n        setFilepath(path);\n      }\n\n      props.detail.forEach((item, i) => {\n        const date = item.scheduleDate.slice(0, 4) + \"-\" + item.scheduleDate.slice(4, 6) + \"-\" + item.scheduleDate.slice(6, 8);\n        countArr[i] = i;\n        detailTitle[i] = item.title;\n        detailDateString[i] = date;\n        detailContent[i] = item.content;\n      });\n      setCountList(countArr);\n      setDetailTitle(detailTitle);\n      setDetailDate(detailDateString);\n      setDetailContent(detailContent);\n    }\n  }, [props.timeline, props.detail]);\n\n  const onModifyTimeline = e => {\n    let formData = new FormData();\n    let variables = {\n      category: category,\n      complete: complete,\n      open: open,\n      title: title\n    }; // 파일 업로드 안 했을 때 기본 이미지 혹은 기존 이미지 그대로 유지\n\n    if (files.length === 0) {\n      formData.append(\"file\", \"\"); // 기존에 업로드한 파일 삭제하고 재업로드 안 했을 경우 filepath \"\"로 보냄\n\n      if (deleteStatus) {\n        variables = {\n          category: category,\n          complete: complete,\n          open: open,\n          title: title,\n          filePath: \"\",\n          imgFullPath: \"\"\n        }; // 기존에 업로드한 파일 삭제한 적 없고 재업로드 안 했을 경우에도 기존/기본 파일 유지\n      } else {\n        variables = {\n          category: category,\n          complete: complete,\n          open: open,\n          title: title,\n          filePath: props.timeline[0].filePath,\n          imgFullPath: props.timeline[0].imgFullPath\n        };\n      } // 파일 업로드했을 때 새로운 이미지로 교체\n\n    } else {\n      formData.append(\"file\", files[0]);\n    }\n\n    formData.append(\"dto\", new Blob([JSON.stringify(variables)], {\n      type: \"application/json\"\n    }));\n    let detailList = [];\n    let valid = true; // 타임라인이 하나도 없을 때\n\n    if (countList.length === 0) {\n      alert(\"1개 이상의 타임라인을 작성해 주세요\");\n      return false;\n    } else if (!title) {\n      alert(\"제목을 작성해 주세요\");\n      return false;\n    } // 타임라인 상세 내용 유효성 검사\n\n\n    countList.forEach((item, i) => {\n      if (detailTitle[i] === undefined || detailTitle[i] === \"\") {\n        alert(\"타임라인 제목을 입력해 주세요\");\n        valid = false;\n      } else if (detailContent[i] === undefined || detailContent[i] === \"\") {\n        alert(\"타임라인 내용을 입력해 주세요\");\n        valid = false;\n      } else if (detailDate[i] === undefined || detailDate[i] === \"\") {\n        alert(\"타임라인 날짜를 입력해 주세요\");\n        valid = false;\n      }\n    });\n\n    if (valid) {\n      // timeline master 수정\n      Axios.put(`/timeline/master/${props.timelineId}`, formData).then(res => {\n        if (res.data) {\n          // timeline detail 전체 삭제 후 새로 save\n          Axios.delete(`/timeline/detail/${props.timelineId}`).then(response => {\n            if (response.status === 200) {\n              countList.forEach((item, i) => {\n                detailList.push({\n                  \"content\": detailContent[i],\n                  \"id\": res.data.id.toString() + i.toString(),\n                  \"masterId\": res.data.id,\n                  \"scheduleDate\": detailDateString[i].replaceAll('-', ''),\n                  \"title\": detailTitle[i]\n                });\n              });\n              Axios.post(\"/timeline/detail/save\", detailList).then(response => {\n                if (response.status === 200) {\n                  props.history.push(\"/mytimeline\");\n                }\n              });\n            }\n          });\n        }\n      });\n    }\n  };\n\n  const onChangeTitle = e => {\n    setTitle(e.target.value);\n  };\n\n  const onChangeDetailTitle = (e, i) => {\n    let detailTitleArr = [...detailTitle];\n    detailTitleArr[i] = e.target.value;\n    setDetailTitle(detailTitleArr);\n  };\n\n  const onChangeDate = (date, dateString, i) => {\n    let detailDateArr = [...detailDate];\n    let detailDatestringArr = [...detailDateString]; // 날짜 선택 중복 금지\n\n    if (detailDatestringArr.includes(dateString)) {\n      alert(\"이미 선택한 날짜입니다\");\n      return false;\n    } else {\n      detailDateArr[i] = date;\n      detailDatestringArr[i] = dateString;\n      setDetailDate(detailDateArr);\n      setDetailDateString(detailDatestringArr);\n    }\n  };\n\n  const onchangeDetailContent = (e, i) => {\n    let detailContentArr = [...detailContent];\n    detailContentArr[i] = e.target.value;\n    setDetailContent(detailContentArr);\n  };\n\n  const onSelectCategory = value => {\n    setCategory(value);\n  };\n\n  const onSelectComplete = value => {\n    setComplete(value);\n  };\n\n  const onSelectOpen = value => {\n    setOpen(value);\n  };\n\n  const onAddDetailDiv = () => {\n    let countArr = countList.length === 0 ? [0] : [...countList];\n    let counter = countArr.slice(-1)[0]; // 타임라인 상세 영역 다 삭제해서 하나도 없을 때\n\n    if (countList.length === 0) {\n      setCountList(countArr); // 타임라인 상세 영역 1개 이상일 때\n    } else {\n      counter += 1;\n      countArr[countArr.length] = counter;\n      setCountList(countArr);\n    }\n  };\n\n  const onDeleteDetailTitle = i => {\n    let titleArr = [...detailTitle];\n    titleArr.splice(i, 1);\n    setDetailTitle(titleArr);\n  };\n\n  const onDeleteDetailDate = i => {\n    let dateArr = [...detailDate];\n    let datestringArr = [...detailDateString];\n    dateArr.splice(i, 1);\n    datestringArr.splice(i, 1);\n    setDetailDate(dateArr);\n    setDetailDateString(datestringArr);\n  };\n\n  const onDeleteDetailContent = i => {\n    let contentArr = [...detailContent];\n    contentArr.splice(i, 1);\n    setDetailContent(contentArr);\n  };\n\n  const onDeleteDetail = (item, i) => {\n    let countArr = [...countList]; // array 값과 일치하는 것만 삭제, 일치하지 않는 것들만 남김\n\n    const newCountArr = countArr.filter(arr => arr !== item);\n    setCountList(newCountArr);\n    onDeleteDetailTitle(i);\n    onDeleteDetailDate(i);\n    onDeleteDetailContent(i);\n  };\n\n  const onDrop = files => {\n    setFiles(files);\n  };\n\n  const onDeleteFile = () => {\n    Axios.delete(`/timeline/master/${props.timeline[0].filePath}`).then(res => {\n      if (res.status === 200) {\n        setFilepath(\"\");\n        setDeleteStatus(true);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ModifyTimelineDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }\n  }, \"\\uD0C0\\uC784\\uB77C\\uC778 \\uC218\\uC815\\uD558\\uAE30\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onModifyTimeline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"\\uD0C0\\uC784\\uB77C\\uC778 \\uC81C\\uBAA9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    onChange: onChangeTitle,\n    value: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"\\uBD84\\uC57C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: category,\n    onChange: onSelectCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"\\uC0DD\\uD65C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 15\n    }\n  }, \"\\uC0DD\\uD65C\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"\\uC5EC\\uD589\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 15\n    }\n  }, \"\\uC5EC\\uD589\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"\\uBB38\\uD654\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 15\n    }\n  }, \"\\uBB38\\uD654\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"\\uACBD\\uC81C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 15\n    }\n  }, \"\\uACBD\\uC81C\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"\\uAE30\\uD0C0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 15\n    }\n  }, \"\\uAE30\\uD0C0\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"\\uC9C4\\uD589 \\uC5EC\\uBD80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: complete.toString(),\n    onChange: onSelectComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 15\n    }\n  }, \"\\uC9C4\\uD589\\uC911\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }, \"\\uC9C4\\uD589\\uC644\\uB8CC\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"\\uACF5\\uAC1C \\uC5EC\\uBD80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: open.toString(),\n    onChange: onSelectOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 15\n    }\n  }, \"\\uBE44\\uACF5\\uAC1C\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 15\n    }\n  }, \"\\uACF5\\uAC1C\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"\\uC774\\uBBF8\\uC9C0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(UploadImage, {\n    onDrop: onDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  }), files[0] ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Tag, {\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 17\n    }\n  }, files[0].path), /*#__PURE__*/React.createElement(CloseOutlined, {\n    onClick: onDeleteFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 17\n    }\n  })) : filepath && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Tag, {\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 17\n    }\n  }, filepath), /*#__PURE__*/React.createElement(CloseOutlined, {\n    onClick: onDeleteFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ModifyDetailDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TimelineDetail, {\n    countList: countList,\n    onDeleteDetail: onDeleteDetail,\n    onChangeDetailTitle: onChangeDetailTitle,\n    detailTitle: detailTitle,\n    onChangeDate: onChangeDate,\n    detailDate: detailDate,\n    onchangeDetailContent: onchangeDetailContent,\n    detailContent: detailContent,\n    detailDateString: detailDateString,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: onAddDetailDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PlusCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 15\n    }\n  }), \"\\uCD94\\uAC00\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TimelineView, {\n    countList: countList,\n    detailTitle: detailTitle,\n    detailDateString: detailDateString,\n    detailContent: detailContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    onClick: onModifyTimeline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }\n  }, \"\\uC218\\uC815\\uD558\\uAE30\")));\n};\n\n_s(ModifyTimeline, \"R8jc1I9gS7hOsAEDlLTxEAP6xqI=\", false, function () {\n  return [useSelector, useHistory];\n});\n\n_c3 = ModifyTimeline;\nexport default ModifyTimeline;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ModifyTimelineDiv\");\n$RefreshReg$(_c2, \"ModifyDetailDiv\");\n$RefreshReg$(_c3, \"ModifyTimeline\");","map":{"version":3,"sources":["C:/dev/springboot/workplace/tiltest3/src/main/frontend/src/components/ManageTimeline/Sections/ModifyTimeline.js"],"names":["React","useState","useEffect","styled","Form","Input","Select","Button","Divider","Tag","useHistory","Axios","PlusCircleOutlined","CloseOutlined","TimelineDetail","useSelector","TimelineView","UploadImage","ModifyTimelineDiv","div","ModifyDetailDiv","Option","ModifyTimeline","props","title","setTitle","countList","setCountList","detailTitle","setDetailTitle","detailDate","setDetailDate","detailDateString","setDetailDateString","detailContent","setDetailContent","category","setCategory","complete","setComplete","open","setOpen","files","setFiles","filepath","setFilepath","deleteStatus","setDeleteStatus","user","state","history","countArr","timeline","undefined","detail","filePath","path","split","forEach","item","i","date","scheduleDate","slice","content","onModifyTimeline","e","formData","FormData","variables","length","append","imgFullPath","Blob","JSON","stringify","type","detailList","valid","alert","put","timelineId","then","res","data","delete","response","status","push","id","toString","replaceAll","post","onChangeTitle","target","value","onChangeDetailTitle","detailTitleArr","onChangeDate","dateString","detailDateArr","detailDatestringArr","includes","onchangeDetailContent","detailContentArr","onSelectCategory","onSelectComplete","onSelectOpen","onAddDetailDiv","counter","onDeleteDetailTitle","titleArr","splice","onDeleteDetailDate","dateArr","datestringArr","onDeleteDetailContent","contentArr","onDeleteDetail","newCountArr","filter","arr","onDrop","onDeleteFile"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { Form, Input, Select, Button, Divider, Tag } from \"antd\"\nimport { useHistory } from \"react-router-dom\"\nimport Axios from \"axios\"\nimport { PlusCircleOutlined, CloseOutlined } from \"@ant-design/icons\"\nimport TimelineDetail from \"../../CreateTimeline/Sections/TimelineDetail\"\nimport { useSelector } from \"react-redux\"\nimport TimelineView from \"../../CreateTimeline/Sections/TimelineView\"\nimport UploadImage from \"../../CreateTimeline/Sections/UploadImage\"\n\nconst ModifyTimelineDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 100%;\n    padding: 3rem;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    .ant-form-item:last-child {\n      .ant-form-item-control-input-content {\n        div:nth-child(2) {\n          margin-top: 20px;\n          align-items: center;\n          display: flex;\n          justify-content: center;\n        }\n      }\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    a button {\n      width: 100%;\n      background: black;\n      color: #ffffff;\n      margin-top: 100px;\n    }\n  }\n`\n\nconst ModifyDetailDiv = styled.div`\n  display: flex;\n  width: 100%;\n  div {\n    width: 100%;\n  }\n`\n\nconst { Option } = Select\n\nconst ModifyTimeline = (props) => {\n  const [title, setTitle] = useState(\"\")\n  const [countList, setCountList] = useState([0])\n  const [detailTitle, setDetailTitle] = useState([])\n  const [detailDate, setDetailDate] = useState([])\n  const [detailDateString, setDetailDateString] = useState([])\n  const [detailContent, setDetailContent] = useState([])\n  const [category, setCategory] = useState(\"\")\n  const [complete, setComplete] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [files, setFiles] = useState([])\n  const [filepath, setFilepath] = useState(\"\")\n  const [deleteStatus, setDeleteStatus] = useState(false)\n\n  const user = useSelector(state => state.user)\n  const history = useHistory()\n\n  useEffect(() => {\n    const countArr = [...countList]\n\n    if(props.timeline[0] !== undefined && props.detail !== undefined) {\n      setTitle(props.timeline[0].title)\n      setCategory(props.timeline[0].category)\n      setComplete(props.timeline[0].complete)\n      setOpen(props.timeline[0].open)\n\n      if(props.timeline[0].filePath !== null) {\n        const path = props.timeline[0].filePath.split(\"-\")[1]\n        setFilepath(path)\n      }\n\n      props.detail.forEach((item, i) => {\n        const date = item.scheduleDate.slice(0, 4) + \"-\" + item.scheduleDate.slice(4, 6) + \"-\" + item.scheduleDate.slice(6, 8)\n        countArr[i] = i\n        detailTitle[i] = item.title\n        detailDateString[i] = date\n        detailContent[i] = item.content\n      })\n\n      setCountList(countArr)\n      setDetailTitle(detailTitle)\n      setDetailDate(detailDateString)\n      setDetailContent(detailContent)\n    }\n  }, [props.timeline, props.detail])\n\n  const onModifyTimeline = (e) => {\n\n    let formData = new FormData()\n    let variables = {\n      category: category,\n      complete: complete,\n      open: open,\n      title: title,\n    }\n\n    // 파일 업로드 안 했을 때 기본 이미지 혹은 기존 이미지 그대로 유지\n    if(files.length === 0) {\n      formData.append(\"file\", \"\")\n      // 기존에 업로드한 파일 삭제하고 재업로드 안 했을 경우 filepath \"\"로 보냄\n      if(deleteStatus) {\n        variables = {\n          category: category,\n          complete: complete,\n          open: open,\n          title: title,\n          filePath: \"\",\n          imgFullPath: \"\"\n        }\n      // 기존에 업로드한 파일 삭제한 적 없고 재업로드 안 했을 경우에도 기존/기본 파일 유지\n      } else {\n        variables = {\n          category: category,\n          complete: complete,\n          open: open,\n          title: title,\n          filePath: props.timeline[0].filePath,\n          imgFullPath: props.timeline[0].imgFullPath\n        }\n      }\n    // 파일 업로드했을 때 새로운 이미지로 교체\n    } else {\n      formData.append(\"file\", files[0])\n    }\n\n    formData.append(\"dto\", new Blob([JSON.stringify(variables)], {type: \"application/json\"}))\n\n    let detailList = []\n    let valid = true\n\n    // 타임라인이 하나도 없을 때\n    if(countList.length === 0) {\n      alert(\"1개 이상의 타임라인을 작성해 주세요\")\n      return false\n    } else if(!title) {\n      alert(\"제목을 작성해 주세요\")\n      return false\n    }\n\n    // 타임라인 상세 내용 유효성 검사\n    countList.forEach((item, i) => {\n      if(detailTitle[i] === undefined || detailTitle[i] === \"\") {\n        alert(\"타임라인 제목을 입력해 주세요\")\n        valid = false\n      } else if(detailContent[i] === undefined || detailContent[i] === \"\") {\n        alert(\"타임라인 내용을 입력해 주세요\")\n        valid = false\n      } else if(detailDate[i] === undefined || detailDate[i] === \"\") {\n        alert(\"타임라인 날짜를 입력해 주세요\")\n        valid = false\n      }\n    })\n\n    if(valid) {\n      // timeline master 수정\n      Axios.put(`/timeline/master/${props.timelineId}`, formData)\n        .then(res => {\n          if(res.data) {\n            // timeline detail 전체 삭제 후 새로 save\n            Axios.delete(`/timeline/detail/${props.timelineId}`)\n             .then(response => {\n               if(response.status === 200) {\n                 countList.forEach((item, i) => {\n                   detailList.push({\n                     \"content\": detailContent[i],\n                     \"id\": res.data.id.toString() + i.toString(),\n                     \"masterId\": res.data.id,\n                     \"scheduleDate\": detailDateString[i].replaceAll('-', ''),\n                     \"title\": detailTitle[i]\n                   })\n                 })\n\n                 Axios.post(\"/timeline/detail/save\", detailList)\n                   .then(response => {\n                     if(response.status === 200) {\n                       props.history.push(\"/mytimeline\")\n                     }\n                   })\n               }\n             })\n          }\n        })\n    }\n  }\n\n  const onChangeTitle = (e) => {\n    setTitle(e.target.value)\n  }\n\n  const onChangeDetailTitle= (e, i) => {\n    let detailTitleArr = [...detailTitle]\n\n    detailTitleArr[i] = e.target.value\n    setDetailTitle(detailTitleArr)\n  }\n\n  const onChangeDate = (date, dateString, i) => {\n    let detailDateArr = [...detailDate]\n    let detailDatestringArr = [...detailDateString]\n\n    // 날짜 선택 중복 금지\n    if(detailDatestringArr.includes(dateString)) {\n      alert(\"이미 선택한 날짜입니다\")\n      return false\n    } else {\n      detailDateArr[i] = date\n      detailDatestringArr[i] = dateString\n      setDetailDate(detailDateArr)\n      setDetailDateString(detailDatestringArr)\n    }\n  }\n\n  const onchangeDetailContent = (e, i) => {\n    let detailContentArr = [...detailContent]\n\n    detailContentArr[i] = e.target.value\n    setDetailContent(detailContentArr)\n  }\n\n  const onSelectCategory = (value) => {\n    setCategory(value)\n  }\n\n  const onSelectComplete = (value) => {\n    setComplete(value)\n  }\n\n  const onSelectOpen = (value) => {\n    setOpen(value)\n  }\n\n  const onAddDetailDiv = () => {\n    let countArr = countList.length === 0 ? [0] : [...countList]\n    let counter = countArr.slice(-1)[0]\n\n    // 타임라인 상세 영역 다 삭제해서 하나도 없을 때\n    if(countList.length === 0) {\n      setCountList(countArr)\n    // 타임라인 상세 영역 1개 이상일 때\n    } else {\n      counter += 1\n      countArr[countArr.length] = counter\n      setCountList(countArr)\n    }\n  }\n\n  const onDeleteDetailTitle = (i) => {\n    let titleArr = [...detailTitle]\n    titleArr.splice(i, 1)\n    setDetailTitle(titleArr)\n  }\n\n  const onDeleteDetailDate = (i) => {\n    let dateArr = [...detailDate]\n    let datestringArr = [...detailDateString]\n\n    dateArr.splice(i, 1)\n    datestringArr.splice(i, 1)\n    setDetailDate(dateArr)\n    setDetailDateString(datestringArr)\n  }\n\n  const onDeleteDetailContent = (i) => {\n    let contentArr = [...detailContent]\n    contentArr.splice(i, 1)\n    setDetailContent(contentArr)\n  }\n\n  const onDeleteDetail = (item, i) => {\n    let countArr = [...countList]\n    // array 값과 일치하는 것만 삭제, 일치하지 않는 것들만 남김\n    const newCountArr = countArr.filter((arr) => arr !== item)\n    setCountList(newCountArr)\n    onDeleteDetailTitle(i)\n    onDeleteDetailDate(i)\n    onDeleteDetailContent(i)\n  }\n\n  const onDrop = (files) => {\n    setFiles(files)\n  }\n\n  const onDeleteFile = () => {\n    Axios.delete(`/timeline/master/${props.timeline[0].filePath}`)\n      .then(res => {\n        if(res.status === 200) {\n          setFilepath(\"\")\n          setDeleteStatus(true)\n        }\n      })\n  }\n\n  return (\n    <ModifyTimelineDiv>\n      <h1>타임라인 수정하기</h1>\n      <br />\n      <Form onSubmit={onModifyTimeline}>\n        <div>\n          <Form.Item\n            label=\"타임라인 제목\"\n          >\n            <Input\n              type=\"text\"\n              onChange={onChangeTitle}\n              value={title}\n            />\n          </Form.Item>\n          <Form.Item\n            label=\"분야\"\n          >\n            <Select value={category} onChange={onSelectCategory}>\n              <Option value=\"생활\">생활</Option>\n              <Option value=\"여행\">여행</Option>\n              <Option value=\"문화\">문화</Option>\n              <Option value=\"경제\">경제</Option>\n              <Option value=\"기타\">기타</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"진행 여부\"\n          >\n            <Select value={complete.toString()} onChange={onSelectComplete}>\n              <Option value=\"false\">진행중</Option>\n              <Option value=\"true\">진행완료</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"공개 여부\"\n          >\n            <Select value={open.toString()} onChange={onSelectOpen}>\n              <Option value=\"false\">비공개</Option>\n              <Option value=\"true\">공개</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"이미지\"\n          >\n            <UploadImage onDrop={onDrop} />\n            {files[0] ?\n              <div>\n                <Tag color=\"black\">{files[0].path}</Tag>\n                <CloseOutlined onClick={onDeleteFile} />\n              </div>\n              :\n              filepath &&\n              <div>\n                <Tag color=\"black\">{filepath}</Tag>\n                <CloseOutlined onClick={onDeleteFile} />\n              </div>\n            }\n          </Form.Item>\n        </div>\n        <Divider />\n        <ModifyDetailDiv>\n          <div>\n            <TimelineDetail countList={countList} onDeleteDetail={onDeleteDetail} onChangeDetailTitle={onChangeDetailTitle} detailTitle={detailTitle}\n              onChangeDate={onChangeDate} detailDate={detailDate} onchangeDetailContent={onchangeDetailContent} detailContent={detailContent} detailDateString={detailDateString} />\n            <Button onClick={onAddDetailDiv}>\n              <PlusCircleOutlined />추가\n            </Button>\n          </div>\n          <div>\n            <TimelineView countList={countList} detailTitle={detailTitle} detailDateString={detailDateString} detailContent={detailContent}/>\n          </div>\n        </ModifyDetailDiv>\n        <Button size=\"large\" onClick={onModifyTimeline}>수정하기</Button>\n      </Form>\n    </ModifyTimelineDiv>\n  )\n}\nexport default ModifyTimeline\n"]},"metadata":{},"sourceType":"module"}