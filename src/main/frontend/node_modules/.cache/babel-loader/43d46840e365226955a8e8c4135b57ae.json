{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\springboot\\\\workplace\\\\tiltest3\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\Detail\\\\Detail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TopMaster from \"./Sections/TopMaster\";\nimport MiddleDetail from \"./Sections/MiddleDetail\";\nimport BottomComment from \"./Sections/BottomComment\";\nimport SideScroll from \"./Sections/SideScroll\";\nimport LikeToggle from \"./Sections/LikeToggle\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\nimport Axios from \"axios\";\nconst DetailDiv = styled.div`\n  margin: 3rem 5rem;\n`;\n_c = DetailDiv;\nconst MiddleDiv = styled.div`\n  width: 100%;\n  display: flex;\n`;\n_c2 = MiddleDiv;\n\nconst Detail = props => {\n  _s();\n\n  const [masterData, setMasterData] = useState([]);\n  const [nickname, setNickname] = useState(\"\");\n  const [countList, setCountList] = useState([]);\n  const [detailDateString, setDetailDateString] = useState([]);\n  const [title, setTitle] = useState([]);\n  const [content, setContent] = useState([]);\n  const [id, setId] = useState([]);\n  const [loginStatus, setLoginStatus] = useState(false);\n  const [comment, setComment] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [likeCount, setLikeCount] = useState(0);\n  const [star, setStar] = useState(\"\");\n  const [commentContent, setCommentContent] = useState(\"\");\n  const [modifyStatus, setModifyStatus] = useState(false);\n  const [hideInput, setHideInput] = useState(false);\n  const [modifyIndex, setModifyIndex] = useState(0);\n  const param = useParams();\n  useEffect(() => {\n    let detailDatestringArr = [...detailDateString];\n    let titleArr = [...title];\n    let contentArr = [...content];\n    let idArr = [...id];\n    let refineDate = []; // timeline master 가져오기\n\n    Axios.get(`/timeline/master/list`).then(res => {\n      if (res.data) {\n        const data = res.data.filter(item => item.id.toString() === param.timelineId);\n        setMasterData(data[0]);\n        Axios.get(`/auth/nicknames/${data[0].author}`).then(res => {\n          setNickname(res.data.nickname);\n        });\n      }\n    }); // timeline detail 가져오기\n\n    Axios.get(`/timeline/detail/${param.timelineId}`).then(res => {\n      if (res.data) {\n        setCountList(Object.keys(res.data));\n        setDetailDateString(res.data.scheduleDate);\n        res.data.forEach((item, i) => {\n          refineDate[i] = item.scheduleDate;\n          titleArr[i] = item.title;\n          contentArr[i] = item.content;\n          idArr[i] = item.id.toString();\n        }); // scheduleDate에 - 문자열 붙이기\n\n        refineDate.forEach((item, i) => {\n          detailDatestringArr[i] = item.substring(0, 4) + \"-\" + item.substring(4, 6) + \"-\" + item.substring(6, 8);\n        });\n        setDetailDateString(detailDatestringArr);\n        setTitle(titleArr);\n        setContent(contentArr);\n        setId(idArr);\n      }\n    }); // comment 리스트 가져오기\n\n    Axios.get(\"/timeline/comment/list\").then(res => {\n      const data = res.data.filter(item => item.masterId.toString() === param.timelineId);\n      setComment(data);\n    });\n  }, []);\n  useEffect(() => {\n    if (props.user.userData !== undefined) {\n      setLoginStatus(true); // 렌더링 되자 마자 likeCount 가져오기\n\n      Axios.get(\"/timeline/like/list\").then(res => {\n        const data = res.data.filter(item => item.masterId.toString() === param.timelineId);\n        setLikeCount(data.length);\n        Axios.get(`/auth/getId/${props.user.userData.email}`).then(userRes => {\n          if (userRes.data) {\n            const checkMyLikes = data.filter(item => item.memberId === userRes.data); // 현재 유저가 like 추천한 글인지 체크 후 아이콘(empty, full) 세팅\n\n            if (checkMyLikes.length !== 0) {\n              setToggle(true);\n            }\n          }\n        });\n      }); // 댓글 작성했는지 안 했는지 상태값 넣어서 comment input 영역 숨기거나 보여주기\n\n      const check = comment.filter(item => item.nickname === props.user.userData.nickname);\n\n      if (check.length !== 0) {\n        setHideInput(true);\n      }\n    }\n  }, [props.user]);\n\n  const onChangeStar = value => {\n    setStar(value);\n  };\n\n  const onChangeCommentContent = e => {\n    setCommentContent(e.target.value);\n  };\n\n  const onToggleLike = () => {\n    // 로그인한 상태이고 email 값 있을 때\n    if (props.user.userData.email) {\n      Axios.get(`/auth/getId/${props.user.userData.email}`).then(res => {\n        if (res.data) {\n          const variables = {\n            masterId: parseInt(param.timelineId),\n            memberId: res.data\n          }; // 추천한 상태에서 추천 취소할 때 Icon full->empty\n\n          if (toggle) {\n            Axios.post(\"/timeline/like/change\", variables).then(res => {\n              if (res.data) {\n                setLikeCount(res.data.likeCount);\n                setToggle(false);\n              }\n            }); // Axios.post(\"/timeline/like/change\", variables)\n            // 추천 안 한 상태에서 추천할 때 Icon emtpy->full\n          } else {\n            Axios.post(\"/timeline/like/change\", variables).then(res => {\n              if (res.data) {\n                setLikeCount(res.data.likeCount);\n                setToggle(true);\n              }\n            });\n          }\n        }\n      });\n    }\n  };\n\n  const onSaveComment = () => {\n    if (props.user.userData === undefined) {\n      alert(\"로그인 후 작성 가능합니다\");\n    } else {\n      const variables = {\n        content: commentContent,\n        masterId: parseInt(param.timelineId),\n        nickname: props.user !== undefined ? props.user.userData.nickname : \"\",\n        star: star\n      }; // 댓글 내용 유효성 체크\n\n      if (!commentContent || !param.timelineId || !star) {\n        alert(\"내용을 입력해 주세요\");\n        return false;\n      }\n\n      Axios.post(\"/timeline/comment\", variables).then(res => {\n        if (res.status === 200) {\n          alert(\"댓글 작성을 완료했습니다\"); // 댓글 저장하고 나서 다시 댓글 불러오기\n\n          Axios.get(\"/timeline/comment/list\").then(res => {\n            const data = res.data.filter(item => item.masterId.toString() === param.timelineId);\n            setComment(data); // 작성한 댓글이 있을 경우 새 댓글 입력하기 위한 영역 숨기기\n\n            setHideInput(true);\n          });\n        }\n      });\n    }\n  };\n\n  const onDelete = (commentContent, id, nickname, star) => {\n    let variables = {\n      content: commentContent,\n      masterId: id,\n      nickname: nickname,\n      star: star\n    }; //\n    // Axios.delete(\"/timeline/comment\", variables)\n    //   .then(res => {\n    //     console.log(res);\n    //   })\n  };\n\n  const onModify = (i, stars, contents) => {\n    // 수정 버튼 클릭하면 comment 영역 변경\n    setModifyStatus(true);\n    setModifyIndex(i);\n    setStar(stars);\n    setCommentContent(contents);\n  };\n\n  return /*#__PURE__*/React.createElement(DetailDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TopMaster, {\n    masterData: masterData,\n    nickname: nickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MiddleDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MiddleDetail, {\n    countList: countList,\n    detailDateString: detailDateString,\n    title: title,\n    content: content,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SideScroll, {\n    countList: countList,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  })), loginStatus && /*#__PURE__*/React.createElement(LikeToggle, {\n    toggle: toggle,\n    onToggleLike: onToggleLike,\n    likeCount: likeCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BottomComment, {\n    comment: comment,\n    user: props.user.userData,\n    onSaveComment: onSaveComment,\n    onChangeCommentContent: onChangeCommentContent,\n    onChangeStar: onChangeStar,\n    onDelete: onDelete,\n    onModify: onModify,\n    hideInput: hideInput,\n    modifyStatus: modifyStatus,\n    modifyIndex: modifyIndex,\n    star: star,\n    commentContent: commentContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Detail, \"lF9Ga4Gy3PEeUIJkPv2lohM5FgQ=\", false, function () {\n  return [useParams];\n});\n\n_c3 = Detail;\nexport default Detail;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DetailDiv\");\n$RefreshReg$(_c2, \"MiddleDiv\");\n$RefreshReg$(_c3, \"Detail\");","map":{"version":3,"sources":["C:/dev/springboot/workplace/tiltest3/src/main/frontend/src/components/Detail/Detail.js"],"names":["React","useState","useEffect","TopMaster","MiddleDetail","BottomComment","SideScroll","LikeToggle","styled","useParams","Axios","DetailDiv","div","MiddleDiv","Detail","props","masterData","setMasterData","nickname","setNickname","countList","setCountList","detailDateString","setDetailDateString","title","setTitle","content","setContent","id","setId","loginStatus","setLoginStatus","comment","setComment","toggle","setToggle","likeCount","setLikeCount","star","setStar","commentContent","setCommentContent","modifyStatus","setModifyStatus","hideInput","setHideInput","modifyIndex","setModifyIndex","param","detailDatestringArr","titleArr","contentArr","idArr","refineDate","get","then","res","data","filter","item","toString","timelineId","author","Object","keys","scheduleDate","forEach","i","substring","masterId","user","userData","undefined","length","email","userRes","checkMyLikes","memberId","check","onChangeStar","value","onChangeCommentContent","e","target","onToggleLike","variables","parseInt","post","onSaveComment","alert","status","onDelete","onModify","stars","contents"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport TopMaster from \"./Sections/TopMaster\"\nimport MiddleDetail from \"./Sections/MiddleDetail\"\nimport BottomComment from \"./Sections/BottomComment\"\nimport SideScroll from \"./Sections/SideScroll\"\nimport LikeToggle from \"./Sections/LikeToggle\"\nimport styled from \"styled-components\"\nimport { useParams } from \"react-router-dom\"\nimport Axios from \"axios\"\n\nconst DetailDiv = styled.div`\n  margin: 3rem 5rem;\n`\n\nconst MiddleDiv = styled.div`\n  width: 100%;\n  display: flex;\n`\n\nconst Detail = (props) => {\n  const [masterData, setMasterData] = useState([])\n  const [nickname, setNickname] = useState(\"\")\n  const [countList, setCountList] = useState([])\n  const [detailDateString, setDetailDateString] = useState([])\n  const [title, setTitle] = useState([])\n  const [content, setContent] = useState([])\n  const [id, setId] = useState([])\n  const [loginStatus, setLoginStatus] = useState(false)\n  const [comment, setComment] = useState([])\n  const [toggle, setToggle] = useState(false)\n  const [likeCount, setLikeCount] = useState(0)\n  const [star, setStar] = useState(\"\")\n  const [commentContent, setCommentContent] = useState(\"\")\n  const [modifyStatus, setModifyStatus] = useState(false)\n  const [hideInput, setHideInput] = useState(false)\n  const [modifyIndex, setModifyIndex] = useState(0)\n\n  const param = useParams()\n\n  useEffect(() => {\n    let detailDatestringArr = [...detailDateString]\n    let titleArr = [...title]\n    let contentArr = [...content]\n    let idArr = [...id]\n    let refineDate = []\n\n    // timeline master 가져오기\n    Axios.get(`/timeline/master/list`)\n      .then(res => {\n        if(res.data) {\n          const data = res.data.filter(item => item.id.toString() === param.timelineId)\n          setMasterData(data[0])\n          Axios.get(`/auth/nicknames/${data[0].author}`)\n            .then(res => {\n              setNickname(res.data.nickname)\n            })\n        }\n      })\n\n    // timeline detail 가져오기\n    Axios.get(`/timeline/detail/${param.timelineId}`)\n      .then(res => {\n        if(res.data) {\n          setCountList(Object.keys(res.data))\n          setDetailDateString(res.data.scheduleDate)\n          res.data.forEach((item, i) => {\n            refineDate[i] = item.scheduleDate\n            titleArr[i] = item.title\n            contentArr[i] = item.content\n            idArr[i] = item.id.toString()\n          })\n\n          // scheduleDate에 - 문자열 붙이기\n          refineDate.forEach((item, i) => {\n            detailDatestringArr[i] = item.substring(0, 4) + \"-\" + item.substring(4, 6) + \"-\" + item.substring(6, 8)\n          })\n\n          setDetailDateString(detailDatestringArr)\n          setTitle(titleArr)\n          setContent(contentArr)\n          setId(idArr)\n        }\n      })\n\n      // comment 리스트 가져오기\n      Axios.get(\"/timeline/comment/list\")\n        .then(res => {\n          const data = res.data.filter(item => item.masterId.toString() === param.timelineId)\n          setComment(data)\n        })\n  }, [])\n\n  useEffect(() => {\n    if(props.user.userData !== undefined) {\n      setLoginStatus(true)\n\n      // 렌더링 되자 마자 likeCount 가져오기\n      Axios.get(\"/timeline/like/list\")\n        .then(res => {\n          const data = res.data.filter(item => item.masterId.toString() === param.timelineId)\n          setLikeCount(data.length)\n          Axios.get(`/auth/getId/${props.user.userData.email}`)\n            .then(userRes => {\n              if(userRes.data) {\n                const checkMyLikes = data.filter(item => item.memberId === userRes.data)\n                // 현재 유저가 like 추천한 글인지 체크 후 아이콘(empty, full) 세팅\n                if(checkMyLikes.length !== 0) {\n                  setToggle(true)\n                }\n              }\n            })\n        })\n\n      // 댓글 작성했는지 안 했는지 상태값 넣어서 comment input 영역 숨기거나 보여주기\n      const check = comment.filter(item => item.nickname === props.user.userData.nickname)\n      if(check.length !== 0) {\n        setHideInput(true)\n      }\n    }\n  }, [props.user])\n\n  const onChangeStar = (value) => {\n    setStar(value)\n  }\n\n  const onChangeCommentContent = (e) => {\n    setCommentContent(e.target.value)\n  }\n\n  const onToggleLike = () => {\n    // 로그인한 상태이고 email 값 있을 때\n    if(props.user.userData.email) {\n      Axios.get(`/auth/getId/${props.user.userData.email}`)\n        .then(res => {\n          if(res.data) {\n            const variables = {\n              masterId: parseInt(param.timelineId),\n              memberId: res.data\n            }\n\n            // 추천한 상태에서 추천 취소할 때 Icon full->empty\n            if(toggle) {\n              Axios.post(\"/timeline/like/change\", variables)\n                .then(res => {\n                  if(res.data) {\n                    setLikeCount(res.data.likeCount)\n                    setToggle(false)\n                  }\n                })\n              // Axios.post(\"/timeline/like/change\", variables)\n            // 추천 안 한 상태에서 추천할 때 Icon emtpy->full\n            } else {\n              Axios.post(\"/timeline/like/change\", variables)\n                .then(res => {\n                  if(res.data) {\n                    setLikeCount(res.data.likeCount)\n                    setToggle(true)\n                  }\n                })\n            }\n\n          }\n        })\n    }\n  }\n\n  const onSaveComment = () => {\n    if(props.user.userData === undefined) {\n      alert(\"로그인 후 작성 가능합니다\")\n    } else {\n      const variables = {\n        content: commentContent,\n        masterId: parseInt(param.timelineId),\n        nickname: props.user !== undefined ? props.user.userData.nickname : \"\",\n        star: star\n      }\n\n      // 댓글 내용 유효성 체크\n      if(!commentContent || !param.timelineId || !star) {\n        alert(\"내용을 입력해 주세요\")\n        return false\n      }\n\n      Axios.post(\"/timeline/comment\", variables)\n        .then(res => {\n          if(res.status === 200) {\n            alert(\"댓글 작성을 완료했습니다\")\n            // 댓글 저장하고 나서 다시 댓글 불러오기\n            Axios.get(\"/timeline/comment/list\")\n              .then(res => {\n                const data = res.data.filter(item => item.masterId.toString() === param.timelineId)\n                setComment(data)\n                // 작성한 댓글이 있을 경우 새 댓글 입력하기 위한 영역 숨기기\n                setHideInput(true)\n              })\n          }\n        })\n    }\n  }\n\n  const onDelete = (commentContent, id, nickname, star) => {\n    let variables = {\n      content: commentContent,\n      masterId: id,\n      nickname: nickname,\n      star: star\n    }\n\n    //\n    // Axios.delete(\"/timeline/comment\", variables)\n    //   .then(res => {\n    //     console.log(res);\n    //   })\n  }\n\n  const onModify = (i, stars, contents) => {\n    // 수정 버튼 클릭하면 comment 영역 변경\n    setModifyStatus(true)\n    setModifyIndex(i)\n    setStar(stars)\n    setCommentContent(contents)\n  }\n\n  return (\n    <DetailDiv>\n      <TopMaster masterData={masterData} nickname={nickname} />\n      <MiddleDiv>\n        <MiddleDetail countList={countList} detailDateString={detailDateString} title={title} content={content} id={id} />\n        <SideScroll countList={countList} id={id} />\n      </MiddleDiv>\n      { /* 로그인 시에만 추천 버튼 노출 */ }\n      { loginStatus &&\n        <LikeToggle toggle={toggle} onToggleLike={onToggleLike} likeCount={likeCount} />\n      }\n      <BottomComment comment={comment} user={props.user.userData} onSaveComment={onSaveComment} onChangeCommentContent={onChangeCommentContent} onChangeStar={onChangeStar}\n        onDelete={onDelete} onModify={onModify} hideInput={hideInput} modifyStatus={modifyStatus} modifyIndex={modifyIndex} star={star} commentContent={commentContent} />\n    </DetailDiv>\n  )\n}\n\nexport default Detail\n"]},"metadata":{},"sourceType":"module"}