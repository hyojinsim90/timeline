{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\springboot\\\\workplace\\\\tiltest3\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\CreateTimeline\\\\CreateTimeline.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Button, Divider } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport TimelineDetail from \"./Sections/TimelineDetail\";\nimport { useSelector } from \"react-redux\";\nimport TimelineMaster from \"./Sections/TimelineMaster\";\nimport TimelineView from \"./Sections/TimelineView\";\nconst CreateTimelineDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 100%;\n    padding: 3rem;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    .ant-form-item:last-child {\n      .ant-form-item-control-input-content {\n        div:nth-child(2) {\n          margin-top: 20px;\n          align-items: center;\n          display: flex;\n          justify-content: center;\n        }\n      }\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    a button {\n      width: 100%;\n      background: black;\n      color: #ffffff;\n      margin-top: 100px;\n    }\n  }\n`;\n_c = CreateTimelineDiv;\nconst CreateDetailDiv = styled.div`\n  display: flex;\n  width: 100%;\n  div {\n    width: 100%;\n  }\n`;\n_c2 = CreateDetailDiv;\n\nconst CreateTimeline = () => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [countList, setCountList] = useState([0]);\n  const [detailTitle, setDetailTitle] = useState([]);\n  const [detailDate, setDetailDate] = useState([]);\n  const [detailDateString, setDetailDateString] = useState([]);\n  const [detailContent, setDetailContent] = useState([]);\n  const [category, setCategory] = useState(\"경제\");\n  const [complete, setComplete] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [files, setFiles] = useState([]);\n  const user = useSelector(state => state.user);\n  const history = useHistory();\n\n  const onCreateTimeline = e => {\n    let formData = new FormData(); // 파일 없을 시\n\n    if (files.length === 0) {\n      formData.append(\"file\", \"\");\n    } else {\n      formData.append(\"file\", files[0]);\n    }\n\n    let variables = [{\n      author: user.userData.email,\n      category: category,\n      complete: complete,\n      open: open,\n      title: title,\n      likeCount: 0,\n      viewCount: 0\n    }];\n    formData.append(\"dto\", new Blob([JSON.stringify(variables)], {\n      type: \"application/json\"\n    }));\n    let detailList = [];\n    let valid = true; // 타임라인이 하나도 없을 때\n\n    if (countList.length === 0) {\n      alert(\"1개 이상의 타임라인을 작성해 주세요\");\n      return false;\n    } else if (!title) {\n      alert(\"제목을 작성해 주세요\");\n      return false;\n    } // 타임라인 상세 내용 유효성 검사\n\n\n    countList.forEach((item, i) => {\n      if (detailTitle[i] === undefined || detailTitle[i] === \"\") {\n        alert(\"타임라인 제목을 입력해 주세요\");\n        valid = false;\n      } else if (detailContent[i] === undefined || detailContent[i] === \"\") {\n        alert(\"타임라인 내용을 입력해 주세요\");\n        valid = false;\n      } else if (detailDate[i] === undefined || detailDate[i] === \"\") {\n        alert(\"타임라인 날짜를 입력해 주세요\");\n        valid = false;\n      }\n    });\n\n    if (valid) {\n      Axios.post(\"/timeline/master/save\", formData).then(res => {\n        // master에서 id값 return하면 받아서 detail 저장\n        if (res.data.id) {\n          countList.forEach((item, i) => {\n            detailList.push({\n              \"content\": detailContent[i],\n              \"id\": res.data.id.toString() + i.toString(),\n              \"masterId\": res.data.id,\n              \"scheduleDate\": detailDateString[i].replaceAll('-', ''),\n              \"title\": detailTitle[i]\n            });\n          });\n          Axios.post(\"/timeline/detail/save\", detailList).then(response => {\n            if (response.status === 200) {\n              history.push(\"/mytimeline\");\n            }\n          });\n        }\n      });\n    }\n  };\n\n  const onChangeTitle = e => {\n    setTitle(e.target.value);\n  };\n\n  const onChangeDetailTitle = (e, i) => {\n    let detailTitleArr = [...detailTitle];\n    detailTitleArr[i] = e.target.value;\n    setDetailTitle(detailTitleArr);\n  };\n\n  const onChangeDate = (date, dateString, i) => {\n    let detailDateArr = [...detailDate];\n    let detailDatestringArr = [...detailDateString]; // 날짜 선택 중복 금지\n\n    if (detailDatestringArr.includes(dateString)) {\n      alert(\"이미 선택한 날짜입니다\");\n      return false;\n    } else {\n      detailDateArr[i] = date;\n      detailDatestringArr[i] = dateString;\n      setDetailDate(detailDateArr);\n      setDetailDateString(detailDatestringArr);\n    }\n  };\n\n  const onchangeDetailContent = (e, i) => {\n    let detailContentArr = [...detailContent];\n    detailContentArr[i] = e.target.value;\n    setDetailContent(detailContentArr);\n  };\n\n  const onSelectCategory = value => {\n    setCategory(value);\n  };\n\n  const onSelectComplete = value => {\n    setComplete(value);\n  };\n\n  const onSelectOpen = value => {\n    setOpen(value);\n  };\n\n  const onAddDetailDiv = () => {\n    let countArr = countList.length === 0 ? [0] : [...countList];\n    let counter = countArr.slice(-1)[0]; // 타임라인 상세 영역 다 삭제해서 하나도 없을 때\n\n    if (countList.length === 0) {\n      setCountList(countArr); // 타임라인 상세 영역 1개 이상일 때\n    } else {\n      counter += 1;\n      countArr[countArr.length] = counter;\n      setCountList(countArr);\n    }\n  };\n\n  const onDeleteDetailTitle = i => {\n    let titleArr = [...detailTitle];\n    titleArr.splice(i, 1);\n    setDetailTitle(titleArr);\n  };\n\n  const onDeleteDetailDate = i => {\n    let dateArr = [...detailDate];\n    let datestringArr = [...detailDateString];\n    dateArr.splice(i, 1);\n    datestringArr.splice(i, 1);\n    setDetailDate(dateArr);\n    setDetailDateString(datestringArr);\n  };\n\n  const onDeleteDetailContent = i => {\n    let contentArr = [...detailContent];\n    contentArr.splice(i, 1);\n    setDetailContent(contentArr);\n  };\n\n  const onDeleteDetail = (item, i) => {\n    let countArr = [...countList]; // array 값과 일치하는 것만 삭제, 일치하지 않는 것들만 남김\n\n    const newCountArr = countArr.filter(arr => arr !== item);\n    setCountList(newCountArr);\n    onDeleteDetailTitle(i);\n    onDeleteDetailDate(i);\n    onDeleteDetailContent(i);\n  };\n\n  const onDrop = files => {\n    // 파일 크기 200MB 이하로 제한\n    if (files[0].size > 200000000) {\n      alert(\"파일 크기가 너무 큽니다 200MB 이하 파일만 업로드 가능합니다\");\n    } else {\n      setFiles(files);\n    }\n  };\n\n  const onDeleteFile = () => {\n    // 업로드한 파일 정보 삭제\n    setFiles([]);\n  };\n\n  return /*#__PURE__*/React.createElement(CreateTimelineDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }\n  }, \"\\uD0C0\\uC784\\uB77C\\uC778 \\uC0DD\\uC131\\uD558\\uAE30\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onCreateTimeline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TimelineMaster, {\n    title: title,\n    files: files,\n    onChangeTitle: onChangeTitle,\n    onSelectCategory: onSelectCategory,\n    onSelectComplete: onSelectComplete,\n    onSelectOpen: onSelectOpen,\n    onDrop: onDrop,\n    onDeleteFile: onDeleteFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CreateDetailDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TimelineDetail, {\n    countList: countList,\n    onDeleteDetail: onDeleteDetail,\n    onChangeDetailTitle: onChangeDetailTitle,\n    detailTitle: detailTitle,\n    onChangeDate: onChangeDate,\n    detailDate: detailDate,\n    onchangeDetailContent: onchangeDetailContent,\n    detailContent: detailContent,\n    detailDateString: detailDateString,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: onAddDetailDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PlusCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  }), \"\\uCD94\\uAC00\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TimelineView, {\n    countList: countList,\n    detailTitle: detailTitle,\n    detailDateString: detailDateString,\n    detailContent: detailContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    onClick: onCreateTimeline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, \"\\uC0DD\\uC131\\uD558\\uAE30\")));\n};\n\n_s(CreateTimeline, \"XmMPTSn8G3H27W0fFlVQMkQjl00=\", false, function () {\n  return [useSelector, useHistory];\n});\n\n_c3 = CreateTimeline;\nexport default CreateTimeline;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CreateTimelineDiv\");\n$RefreshReg$(_c2, \"CreateDetailDiv\");\n$RefreshReg$(_c3, \"CreateTimeline\");","map":{"version":3,"sources":["C:/dev/springboot/workplace/tiltest3/src/main/frontend/src/components/CreateTimeline/CreateTimeline.js"],"names":["React","useState","styled","Form","Button","Divider","useHistory","Axios","PlusCircleOutlined","TimelineDetail","useSelector","TimelineMaster","TimelineView","CreateTimelineDiv","div","CreateDetailDiv","CreateTimeline","title","setTitle","countList","setCountList","detailTitle","setDetailTitle","detailDate","setDetailDate","detailDateString","setDetailDateString","detailContent","setDetailContent","category","setCategory","complete","setComplete","open","setOpen","files","setFiles","user","state","history","onCreateTimeline","e","formData","FormData","length","append","variables","author","userData","email","likeCount","viewCount","Blob","JSON","stringify","type","detailList","valid","alert","forEach","item","i","undefined","post","then","res","data","id","push","toString","replaceAll","response","status","onChangeTitle","target","value","onChangeDetailTitle","detailTitleArr","onChangeDate","date","dateString","detailDateArr","detailDatestringArr","includes","onchangeDetailContent","detailContentArr","onSelectCategory","onSelectComplete","onSelectOpen","onAddDetailDiv","countArr","counter","slice","onDeleteDetailTitle","titleArr","splice","onDeleteDetailDate","dateArr","datestringArr","onDeleteDetailContent","contentArr","onDeleteDetail","newCountArr","filter","arr","onDrop","size","onDeleteFile"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { Form, Button, Divider } from \"antd\"\nimport { useHistory } from \"react-router-dom\"\nimport Axios from \"axios\"\nimport { PlusCircleOutlined } from \"@ant-design/icons\"\nimport TimelineDetail from \"./Sections/TimelineDetail\"\nimport { useSelector } from \"react-redux\"\nimport TimelineMaster from \"./Sections/TimelineMaster\"\nimport TimelineView from \"./Sections/TimelineView\"\n\nconst CreateTimelineDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 100%;\n    padding: 3rem;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    .ant-form-item:last-child {\n      .ant-form-item-control-input-content {\n        div:nth-child(2) {\n          margin-top: 20px;\n          align-items: center;\n          display: flex;\n          justify-content: center;\n        }\n      }\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    a button {\n      width: 100%;\n      background: black;\n      color: #ffffff;\n      margin-top: 100px;\n    }\n  }\n`\n\nconst CreateDetailDiv = styled.div`\n  display: flex;\n  width: 100%;\n  div {\n    width: 100%;\n  }\n`\n\nconst CreateTimeline = () => {\n  const [title, setTitle] = useState(\"\")\n  const [countList, setCountList] = useState([0])\n  const [detailTitle, setDetailTitle] = useState([])\n  const [detailDate, setDetailDate] = useState([])\n  const [detailDateString, setDetailDateString] = useState([])\n  const [detailContent, setDetailContent] = useState([])\n  const [category, setCategory] = useState(\"경제\")\n  const [complete, setComplete] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [files, setFiles] = useState([])\n\n  const user = useSelector(state => state.user)\n  const history = useHistory()\n\n  const onCreateTimeline = (e) => {\n\n    let formData = new FormData()\n\n    // 파일 없을 시\n    if(files.length === 0) {\n      formData.append(\"file\", \"\")\n    } else {\n      formData.append(\"file\", files[0])\n    }\n\n    let variables = [{\n      author: user.userData.email,\n      category: category,\n      complete: complete,\n      open: open,\n      title: title,\n      likeCount: 0,\n      viewCount: 0\n    }]\n\n    formData.append(\"dto\", new Blob([JSON.stringify(variables)], {type: \"application/json\"}))\n\n    let detailList = []\n    let valid = true\n\n    // 타임라인이 하나도 없을 때\n    if(countList.length === 0) {\n      alert(\"1개 이상의 타임라인을 작성해 주세요\")\n      return false\n    } else if(!title) {\n      alert(\"제목을 작성해 주세요\")\n      return false\n    }\n\n    // 타임라인 상세 내용 유효성 검사\n    countList.forEach((item, i) => {\n      if(detailTitle[i] === undefined || detailTitle[i] === \"\") {\n        alert(\"타임라인 제목을 입력해 주세요\")\n        valid = false\n      } else if(detailContent[i] === undefined || detailContent[i] === \"\") {\n        alert(\"타임라인 내용을 입력해 주세요\")\n        valid = false\n      } else if(detailDate[i] === undefined || detailDate[i] === \"\") {\n        alert(\"타임라인 날짜를 입력해 주세요\")\n        valid = false\n      }\n    })\n\n    if(valid) {\n      Axios.post(\"/timeline/master/save\", formData)\n        .then(res => {\n          // master에서 id값 return하면 받아서 detail 저장\n          if(res.data.id) {\n            countList.forEach((item, i) => {\n              detailList.push({\n                \"content\": detailContent[i],\n                \"id\": res.data.id.toString() + i.toString(),\n                \"masterId\": res.data.id,\n                \"scheduleDate\": detailDateString[i].replaceAll('-', ''),\n                \"title\": detailTitle[i]\n              })\n            })\n\n            Axios.post(\"/timeline/detail/save\", detailList)\n              .then(response => {\n                if(response.status === 200) {\n                  history.push(\"/mytimeline\")\n                }\n              })\n          }\n        })\n    }\n  }\n\n  const onChangeTitle = (e) => {\n    setTitle(e.target.value)\n  }\n\n  const onChangeDetailTitle= (e, i) => {\n    let detailTitleArr = [...detailTitle]\n\n    detailTitleArr[i] = e.target.value\n    setDetailTitle(detailTitleArr)\n  }\n\n  const onChangeDate = (date, dateString, i) => {\n    let detailDateArr = [...detailDate]\n    let detailDatestringArr = [...detailDateString]\n\n    // 날짜 선택 중복 금지\n    if(detailDatestringArr.includes(dateString)) {\n      alert(\"이미 선택한 날짜입니다\")\n      return false\n    } else {\n      detailDateArr[i] = date\n      detailDatestringArr[i] = dateString\n      setDetailDate(detailDateArr)\n      setDetailDateString(detailDatestringArr)\n    }\n  }\n\n  const onchangeDetailContent = (e, i) => {\n    let detailContentArr = [...detailContent]\n\n    detailContentArr[i] = e.target.value\n    setDetailContent(detailContentArr)\n  }\n\n  const onSelectCategory = (value) => {\n    setCategory(value)\n  }\n\n  const onSelectComplete = (value) => {\n    setComplete(value)\n  }\n\n  const onSelectOpen = (value) => {\n    setOpen(value)\n  }\n\n  const onAddDetailDiv = () => {\n    let countArr = countList.length === 0 ? [0] : [...countList]\n    let counter = countArr.slice(-1)[0]\n\n    // 타임라인 상세 영역 다 삭제해서 하나도 없을 때\n    if(countList.length === 0) {\n      setCountList(countArr)\n    // 타임라인 상세 영역 1개 이상일 때\n    } else {\n      counter += 1\n      countArr[countArr.length] = counter\n      setCountList(countArr)\n    }\n  }\n\n  const onDeleteDetailTitle = (i) => {\n    let titleArr = [...detailTitle]\n    titleArr.splice(i, 1)\n    setDetailTitle(titleArr)\n  }\n\n  const onDeleteDetailDate = (i) => {\n    let dateArr = [...detailDate]\n    let datestringArr = [...detailDateString]\n\n    dateArr.splice(i, 1)\n    datestringArr.splice(i, 1)\n    setDetailDate(dateArr)\n    setDetailDateString(datestringArr)\n  }\n\n  const onDeleteDetailContent = (i) => {\n    let contentArr = [...detailContent]\n    contentArr.splice(i, 1)\n    setDetailContent(contentArr)\n  }\n\n  const onDeleteDetail = (item, i) => {\n    let countArr = [...countList]\n    // array 값과 일치하는 것만 삭제, 일치하지 않는 것들만 남김\n    const newCountArr = countArr.filter((arr) => arr !== item)\n    setCountList(newCountArr)\n    onDeleteDetailTitle(i)\n    onDeleteDetailDate(i)\n    onDeleteDetailContent(i)\n  }\n\n  const onDrop = (files) => {\n    // 파일 크기 200MB 이하로 제한\n    if(files[0].size > 200000000) {\n      alert(\"파일 크기가 너무 큽니다 200MB 이하 파일만 업로드 가능합니다\")\n    } else {\n      setFiles(files)\n    }\n  }\n\n  const onDeleteFile = () => {\n    // 업로드한 파일 정보 삭제\n    setFiles([])\n  }\n\n  return (\n    <CreateTimelineDiv>\n      <h1>타임라인 생성하기</h1>\n      <br />\n      <Form onSubmit={onCreateTimeline}>\n        <TimelineMaster title={title} files={files} onChangeTitle={onChangeTitle} onSelectCategory={onSelectCategory} onSelectComplete={onSelectComplete} onSelectOpen={onSelectOpen}\n          onDrop={onDrop} onDeleteFile={onDeleteFile} />\n        <Divider />\n        <CreateDetailDiv>\n          <div>\n            <TimelineDetail countList={countList} onDeleteDetail={onDeleteDetail} onChangeDetailTitle={onChangeDetailTitle} detailTitle={detailTitle}\n              onChangeDate={onChangeDate} detailDate={detailDate} onchangeDetailContent={onchangeDetailContent} detailContent={detailContent} detailDateString={detailDateString} />\n            <Button onClick={onAddDetailDiv}>\n              <PlusCircleOutlined />추가\n            </Button>\n          </div>\n          <div>\n            <TimelineView countList={countList} detailTitle={detailTitle} detailDateString={detailDateString} detailContent={detailContent}/>\n          </div>\n        </CreateDetailDiv>\n        <Button size=\"large\" onClick={onCreateTimeline}>생성하기</Button>\n      </Form>\n    </CreateTimelineDiv>\n  )\n}\nexport default CreateTimeline\n"]},"metadata":{},"sourceType":"module"}