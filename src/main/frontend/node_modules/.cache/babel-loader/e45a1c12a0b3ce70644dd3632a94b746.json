{"ast":null,"code":"import _slicedToArray from\"C:/dev/springboot/workplace/tiltest3/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/dev/springboot/workplace/tiltest3/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState,useEffect}from\"react\";import styled from\"styled-components\";import{Form,Input,Button}from\"antd\";import{useSelector}from\"react-redux\";import Axios from\"axios\";import MenuBar from\"./Sections/MenuBar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var InfoDiv=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding: 3rem 0;\\n  form {\\n    width: 320px;\\n    display: inline-block;\\n    .ant-form-item {\\n      display: flex;\\n      flex-direction: column;\\n      justify-content: center;\\n      .ant-form-item-label {\\n        text-align: center;\\n      }\\n    }\\n    // \\uB2C9\\uB124\\uC784 \\uC601\\uC5ED\\n    #nickname {\\n      display: flex;\\n    }\\n    label {\\n      margin-bottom: 1rem;\\n    }\\n    .ant-input-password {\\n      height: 32px;\\n      input {\\n        height: 100%;\\n      }\\n    }\\n    .ant-form-item:last-child {\\n      button {\\n        width: 100%;\\n        background: black;\\n        color: #ffffff;\\n        margin-top: 1rem;\\n      }\\n    }\\n  }\\n\"])));var MyInfo=function MyInfo(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),nickname=_useState4[0],setNickname=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password1=_useState6[0],setPassword1=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),password2=_useState8[0],setPassword2=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),existingPw=_useState10[0],setExistingPw=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),checkDuplicate=_useState12[0],setCheckDuplicate=_useState12[1];var _useState13=useState(true),_useState14=_slicedToArray(_useState13,2),checkValid=_useState14[0],setCheckValid=_useState14[1];var user=useSelector(function(state){return state.user.userData;});useEffect(function(){if(user!==undefined){setEmail(user.email);setNickname(user.nickname);Axios.get(\"/member/\".concat(user.email)).then(function(res){setExistingPw(res.data.password);});}},[user]);var onChangeNick=function onChangeNick(e){setNickname(e.target.value);setCheckDuplicate(false);};var onChangePwd1=function onChangePwd1(e){setPassword1(e.target.value);};var onChangePwd2=function onChangePwd2(e){setPassword2(e.target.value);};// 중복확인 체크\nvar onCheckDup=function onCheckDup(){Axios.get(\"/member/ids\").then(function(res){var duplicate=res.data.filter(function(item){return item.nickname===nickname;});// 닉네임 중복일 경우\nif(duplicate.length>0){// 다른 사람 닉네임과 중복일 경우\nif(nickname!==user.nickname){setCheckDuplicate(false);alert(\"이미 사용 중인 닉네임입니다\");// 내 기존 닉네임일 경우\n}else{setCheckDuplicate(true);alert(\"사용할 수 있는 닉네임입니다\");}}else{setCheckDuplicate(true);alert(\"사용할 수 있는 닉네임입니다\");}});};var onChangeInfo=function onChangeInfo(){// 닉네임 중복확인 버튼 클릭하도록 하기\nif(checkDuplicate===false){alert(\"닉네임 중복확인을 해주세요\");return false;}else if(password1||password2){if(password1!==password2){alert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다\");return false;}}var variables={\"nickname\":nickname,\"password\":password1?password1:existingPw};if(checkDuplicate&&checkValid){Axios.put(\"/member/\".concat(email),variables).then(function(res){// 닉네임, 비밀번호 변경 성공 시 페이지 새로고침\nif(res.status===200){window.location.reload();}});}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(MenuBar,{}),/*#__PURE__*/_jsx(InfoDiv,{children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(Form.Item,{label:\"\\uC774\\uBA54\\uC77C:\",name:\"email\",rules:[{required:true}],children:/*#__PURE__*/_jsx(\"div\",{children:email&&/*#__PURE__*/_jsx(Input,{value:email,disabled:true})})}),/*#__PURE__*/_jsx(Form.Item,{label:\"\\uB2C9\\uB124\\uC784:\",name:\"nickname\",rules:[{required:true}],children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Input,{value:nickname,onChange:onChangeNick}),/*#__PURE__*/_jsx(Button,{onClick:onCheckDup,children:\"\\uC911\\uBCF5\\uD655\\uC778\"})]})}),/*#__PURE__*/_jsx(Form.Item,{label:\"\\uBE44\\uBC00\\uBC88\\uD638(8~16\\uC790):\",name:\"password1\",rules:[{required:true,min:8,max:16,message:'다시 입력해 주세요'}],children:/*#__PURE__*/_jsx(Input.Password,{value:password1,onChange:onChangePwd1})}),/*#__PURE__*/_jsx(Form.Item,{label:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778(8~16\\uC790):\",name:\"password2\",rules:[{required:true,min:8,max:16,message:'다시 입력해 주세요'}],children:/*#__PURE__*/_jsx(Input.Password,{value:password2,onChange:onChangePwd2})}),/*#__PURE__*/_jsx(Form.Item,{name:\"button\",children:/*#__PURE__*/_jsx(Button,{size:\"large\",onClick:onChangeInfo,children:\"\\uC218\\uC815\\uD558\\uAE30\"})})]})})]});};export default MyInfo;","map":{"version":3,"sources":["C:/dev/springboot/workplace/tiltest3/src/main/frontend/src/components/MyPage/MyInfo.js"],"names":["React","useState","useEffect","styled","Form","Input","Button","useSelector","Axios","MenuBar","InfoDiv","div","MyInfo","email","setEmail","nickname","setNickname","password1","setPassword1","password2","setPassword2","existingPw","setExistingPw","checkDuplicate","setCheckDuplicate","checkValid","setCheckValid","user","state","userData","undefined","get","then","res","data","password","onChangeNick","e","target","value","onChangePwd1","onChangePwd2","onCheckDup","duplicate","filter","item","length","alert","onChangeInfo","variables","put","status","window","location","reload","required","min","max","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { Form, Input, Button } from \"antd\"\nimport { useSelector } from \"react-redux\"\nimport Axios from \"axios\"\nimport MenuBar from \"./Sections/MenuBar\"\n\nconst InfoDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    // 닉네임 영역\n    #nickname {\n      display: flex;\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    .ant-input-password {\n      height: 32px;\n      input {\n        height: 100%;\n      }\n    }\n    .ant-form-item:last-child {\n      button {\n        width: 100%;\n        background: black;\n        color: #ffffff;\n        margin-top: 1rem;\n      }\n    }\n  }\n`\n\n\nconst MyInfo = () => {\n\n  const [email, setEmail] = useState(\"\")\n  const [nickname, setNickname] = useState([])\n  const [password1, setPassword1] = useState(\"\")\n  const [password2, setPassword2] = useState(\"\")\n  const [existingPw, setExistingPw] = useState(\"\")\n  const [checkDuplicate, setCheckDuplicate] = useState(false)\n  const [checkValid, setCheckValid] = useState(true)\n\n  const user = useSelector(state => state.user.userData)\n\n  useEffect(() => {\n    if(user !== undefined) {\n      setEmail(user.email)\n      setNickname(user.nickname)\n\n      Axios.get(`/member/${user.email}`)\n        .then(res => {\n          setExistingPw(res.data.password)\n        })\n    }\n  }, [user])\n\n  const onChangeNick = (e) => {\n    setNickname(e.target.value)\n    setCheckDuplicate(false)\n  }\n\n  const onChangePwd1 = (e) => {\n    setPassword1(e.target.value)\n  }\n\n  const onChangePwd2 = (e) => {\n    setPassword2(e.target.value)\n  }\n\n  // 중복확인 체크\n  const onCheckDup = () => {\n    Axios.get(\"/member/ids\")\n      .then(res => {\n        const duplicate = res.data.filter(item => item.nickname === nickname)\n        // 닉네임 중복일 경우\n        if(duplicate.length > 0) {\n          // 다른 사람 닉네임과 중복일 경우\n          if(nickname !== user.nickname) {\n            setCheckDuplicate(false)\n            alert(\"이미 사용 중인 닉네임입니다\")\n          // 내 기존 닉네임일 경우\n          } else {\n            setCheckDuplicate(true)\n            alert(\"사용할 수 있는 닉네임입니다\")\n          }\n        } else {\n          setCheckDuplicate(true)\n          alert(\"사용할 수 있는 닉네임입니다\")\n        }\n      })\n  }\n\n  const onChangeInfo = () => {\n\n    // 닉네임 중복확인 버튼 클릭하도록 하기\n    if(checkDuplicate === false) {\n      alert(\"닉네임 중복확인을 해주세요\")\n      return false\n    } else if(password1 || password2) {\n      if(password1 !== password2) {\n        alert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다\")\n        return false\n      }\n    }\n\n    const variables = {\n      \"nickname\": nickname,\n      \"password\": password1 ? password1 : existingPw\n    }\n\n    if(checkDuplicate && checkValid) {\n      Axios.put(`/member/${email}`, variables)\n        .then(res => {\n          // 닉네임, 비밀번호 변경 성공 시 페이지 새로고침\n          if(res.status === 200) {\n            window.location.reload()\n          }\n        })\n    }\n  }\n\n  return (\n    <div>\n      <MenuBar />\n      <InfoDiv>\n        <Form>\n          <Form.Item\n            label=\"이메일:\"\n            name=\"email\"\n            rules={[{ required: true }]}\n          >\n            <div>\n              { email &&\n                <Input value={email} disabled />\n              }\n            </div>\n          </Form.Item>\n          <Form.Item\n            label=\"닉네임:\"\n            name=\"nickname\"\n            rules={[{ required: true }]}\n          >\n            <div>\n              <Input value={nickname} onChange={onChangeNick} />\n              <Button onClick={onCheckDup}>중복확인</Button>\n            </div>\n          </Form.Item>\n          <Form.Item\n            label=\"비밀번호(8~16자):\"\n            name=\"password1\"\n            rules={[{ required: true, min: 8, max: 16, message: '다시 입력해 주세요' }]}\n          >\n            <Input.Password value={password1} onChange={onChangePwd1} />\n          </Form.Item>\n          <Form.Item\n            label=\"비밀번호 확인(8~16자):\"\n            name=\"password2\"\n            rules={[{ required: true, min: 8, max: 16, message: '다시 입력해 주세요' }]}\n          >\n            <Input.Password value={password2} onChange={onChangePwd2} />\n          </Form.Item>\n          <Form.Item\n            name=\"button\"\n          >\n            <Button size=\"large\" onClick={onChangeInfo}>\n              수정하기\n            </Button>\n          </Form.Item>\n        </Form>\n      </InfoDiv>\n    </div>\n  )\n}\n\nexport default MyInfo\n"]},"metadata":{},"sourceType":"module"}