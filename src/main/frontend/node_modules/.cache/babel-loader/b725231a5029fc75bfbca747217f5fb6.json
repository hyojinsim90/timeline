{"ast":null,"code":"import _toConsumableArray from\"C:/dev/springboot/workplace/tiltest3/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/dev/springboot/workplace/tiltest3/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/dev/springboot/workplace/tiltest3/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useState}from\"react\";import styled from\"styled-components\";import{Form,Button,Divider}from\"antd\";import{useHistory}from\"react-router-dom\";import Axios from\"axios\";import{PlusCircleOutlined}from\"@ant-design/icons\";import TimelineDetail from\"./Sections/TimelineDetail\";import{useSelector}from\"react-redux\";import TimelineMaster from\"./Sections/TimelineMaster\";import TimelineView from\"./Sections/TimelineView\";var CreateTimelineDiv=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding: 3rem 0;\\n  form {\\n    width: 100%;\\n    padding: 3rem;\\n    display: inline-block;\\n    .ant-form-item {\\n      display: flex;\\n      flex-direction: column;\\n      justify-content: center;\\n      .ant-form-item-label {\\n        text-align: center;\\n      }\\n    }\\n    .ant-form-item:last-child {\\n      .ant-form-item-control-input-content {\\n        div:nth-child(2) {\\n          margin-top: 20px;\\n          align-items: center;\\n          display: flex;\\n          justify-content: center;\\n        }\\n      }\\n    }\\n    label {\\n      margin-bottom: 1rem;\\n    }\\n    a button {\\n      width: 100%;\\n      background: black;\\n      color: #ffffff;\\n      margin-top: 100px;\\n    }\\n  }\\n\"])));var CreateDetailDiv=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 100%;\\n  div {\\n    width: 100%;\\n  }\\n\"])));var CreateTimeline=function CreateTimeline(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState([0]),_useState4=_slicedToArray(_useState3,2),countList=_useState4[0],setCountList=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),detailTitle=_useState6[0],setDetailTitle=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),detailDate=_useState8[0],setDetailDate=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),detailDateString=_useState10[0],setDetailDateString=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),detailContent=_useState12[0],setDetailContent=_useState12[1];var _useState13=useState(\"경제\"),_useState14=_slicedToArray(_useState13,2),category=_useState14[0],setCategory=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),complete=_useState16[0],setComplete=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),open=_useState18[0],setOpen=_useState18[1];var _useState19=useState([]),_useState20=_slicedToArray(_useState19,2),files=_useState20[0],setFiles=_useState20[1];var user=useSelector(function(state){return state.user;});var history=useHistory();var onCreateTimeline=function onCreateTimeline(e){var formData=new FormData();// 파일 없을 시\nif(files.length===0){formData.append(\"file\",\"\");}else{formData.append(\"file\",files[0]);}var variables=[{author:user.userData.email,category:category,complete:complete,open:open,title:title,likeCount:0,viewCount:0}];formData.append(\"dto\",new Blob([JSON.stringify(variables)],{type:\"application/json\"}));var detailList=[];var valid=true;// 타임라인이 하나도 없을 때\nif(countList.length===0){alert(\"1개 이상의 타임라인을 작성해 주세요\");return false;}else if(!title){alert(\"제목을 작성해 주세요\");return false;}// 타임라인 상세 내용 유효성 검사\ncountList.forEach(function(item,i){if(detailTitle[i]===undefined||detailTitle[i]===\"\"){alert(\"타임라인 제목을 입력해 주세요\");valid=false;}else if(detailContent[i]===undefined||detailContent[i]===\"\"){alert(\"타임라인 내용을 입력해 주세요\");valid=false;}else if(detailDate[i]===undefined||detailDate[i]===\"\"){alert(\"타임라인 날짜를 입력해 주세요\");valid=false;}});if(valid){Axios.post(\"/timeline/master/save\",formData).then(function(res){// master에서 id값 return하면 받아서 detail 저장\nif(res.data.id){countList.forEach(function(item,i){detailList.push({\"content\":detailContent[i],\"id\":res.data.id.toString()+i.toString(),\"masterId\":res.data.id,\"scheduleDate\":detailDateString[i].replaceAll('-',''),\"title\":detailTitle[i]});});Axios.post(\"/timeline/detail/save\",detailList).then(function(response){if(response.status===200){history.push(\"/mytimeline\");}});}});}};var onChangeTitle=function onChangeTitle(e){setTitle(e.target.value);};var onChangeDetailTitle=function onChangeDetailTitle(e,i){var detailTitleArr=_toConsumableArray(detailTitle);detailTitleArr[i]=e.target.value;setDetailTitle(detailTitleArr);};var onChangeDate=function onChangeDate(date,dateString,i){var detailDateArr=_toConsumableArray(detailDate);var detailDatestringArr=_toConsumableArray(detailDateString);// 날짜 선택 중복 금지\nif(detailDatestringArr.includes(dateString)){alert(\"이미 선택한 날짜입니다\");return false;}else{detailDateArr[i]=date;detailDatestringArr[i]=dateString;setDetailDate(detailDateArr);setDetailDateString(detailDatestringArr);}};var onchangeDetailContent=function onchangeDetailContent(e,i){var detailContentArr=_toConsumableArray(detailContent);detailContentArr[i]=e.target.value;setDetailContent(detailContentArr);};var onSelectCategory=function onSelectCategory(value){setCategory(value);};var onSelectComplete=function onSelectComplete(value){setComplete(value);};var onSelectOpen=function onSelectOpen(value){setOpen(value);};var onAddDetailDiv=function onAddDetailDiv(){var countArr=countList.length===0?[0]:_toConsumableArray(countList);var counter=countArr.slice(-1)[0];// 타임라인 상세 영역 다 삭제해서 하나도 없을 때\nif(countList.length===0){setCountList(countArr);// 타임라인 상세 영역 1개 이상일 때\n}else{counter+=1;countArr[countArr.length]=counter;setCountList(countArr);}};var onDeleteDetailTitle=function onDeleteDetailTitle(i){var titleArr=_toConsumableArray(detailTitle);titleArr.splice(i,1);setDetailTitle(titleArr);};var onDeleteDetailDate=function onDeleteDetailDate(i){var dateArr=_toConsumableArray(detailDate);var datestringArr=_toConsumableArray(detailDateString);dateArr.splice(i,1);datestringArr.splice(i,1);setDetailDate(dateArr);setDetailDateString(datestringArr);};var onDeleteDetailContent=function onDeleteDetailContent(i){var contentArr=_toConsumableArray(detailContent);contentArr.splice(i,1);setDetailContent(contentArr);};var onDeleteDetail=function onDeleteDetail(item,i){var countArr=_toConsumableArray(countList);// array 값과 일치하는 것만 삭제, 일치하지 않는 것들만 남김\nvar newCountArr=countArr.filter(function(arr){return arr!==item;});setCountList(newCountArr);onDeleteDetailTitle(i);onDeleteDetailDate(i);onDeleteDetailContent(i);};var onDrop=function onDrop(files){// 파일 크기 200MB 이하로 제한\nif(files[0].size>200000000){alert(\"파일 크기가 너무 큽니다 200MB 이하 파일만 업로드 가능합니다\");}else{setFiles(files);}};var onDeleteFile=function onDeleteFile(){// 업로드한 파일 정보 삭제\nsetFiles([]);};return/*#__PURE__*/React.createElement(CreateTimelineDiv,null,/*#__PURE__*/React.createElement(\"h1\",null,\"\\uD0C0\\uC784\\uB77C\\uC778 \\uC0DD\\uC131\\uD558\\uAE30\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Form,{onSubmit:onCreateTimeline},/*#__PURE__*/React.createElement(TimelineMaster,{title:title,files:files,onChangeTitle:onChangeTitle,onSelectCategory:onSelectCategory,onSelectComplete:onSelectComplete,onSelectOpen:onSelectOpen,onDrop:onDrop,onDeleteFile:onDeleteFile}),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(CreateDetailDiv,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(TimelineDetail,{countList:countList,onDeleteDetail:onDeleteDetail,onChangeDetailTitle:onChangeDetailTitle,detailTitle:detailTitle,onChangeDate:onChangeDate,detailDate:detailDate,onchangeDetailContent:onchangeDetailContent,detailContent:detailContent,detailDateString:detailDateString}),/*#__PURE__*/React.createElement(Button,{onClick:onAddDetailDiv},/*#__PURE__*/React.createElement(PlusCircleOutlined,null),\"\\uCD94\\uAC00\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(TimelineView,{countList:countList,detailTitle:detailTitle,detailDateString:detailDateString,detailContent:detailContent}))),/*#__PURE__*/React.createElement(Button,{size:\"large\",onClick:onCreateTimeline},\"\\uC0DD\\uC131\\uD558\\uAE30\")));};export default CreateTimeline;","map":{"version":3,"sources":["C:/dev/springboot/workplace/tiltest3/src/main/frontend/src/components/CreateTimeline/CreateTimeline.js"],"names":["React","useState","styled","Form","Button","Divider","useHistory","Axios","PlusCircleOutlined","TimelineDetail","useSelector","TimelineMaster","TimelineView","CreateTimelineDiv","div","CreateDetailDiv","CreateTimeline","title","setTitle","countList","setCountList","detailTitle","setDetailTitle","detailDate","setDetailDate","detailDateString","setDetailDateString","detailContent","setDetailContent","category","setCategory","complete","setComplete","open","setOpen","files","setFiles","user","state","history","onCreateTimeline","e","formData","FormData","length","append","variables","author","userData","email","likeCount","viewCount","Blob","JSON","stringify","type","detailList","valid","alert","forEach","item","i","undefined","post","then","res","data","id","push","toString","replaceAll","response","status","onChangeTitle","target","value","onChangeDetailTitle","detailTitleArr","onChangeDate","date","dateString","detailDateArr","detailDatestringArr","includes","onchangeDetailContent","detailContentArr","onSelectCategory","onSelectComplete","onSelectOpen","onAddDetailDiv","countArr","counter","slice","onDeleteDetailTitle","titleArr","splice","onDeleteDetailDate","dateArr","datestringArr","onDeleteDetailContent","contentArr","onDeleteDetail","newCountArr","filter","arr","onDrop","size","onDeleteFile"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { Form, Button, Divider } from \"antd\"\nimport { useHistory } from \"react-router-dom\"\nimport Axios from \"axios\"\nimport { PlusCircleOutlined } from \"@ant-design/icons\"\nimport TimelineDetail from \"./Sections/TimelineDetail\"\nimport { useSelector } from \"react-redux\"\nimport TimelineMaster from \"./Sections/TimelineMaster\"\nimport TimelineView from \"./Sections/TimelineView\"\n\nconst CreateTimelineDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 100%;\n    padding: 3rem;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    .ant-form-item:last-child {\n      .ant-form-item-control-input-content {\n        div:nth-child(2) {\n          margin-top: 20px;\n          align-items: center;\n          display: flex;\n          justify-content: center;\n        }\n      }\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    a button {\n      width: 100%;\n      background: black;\n      color: #ffffff;\n      margin-top: 100px;\n    }\n  }\n`\n\nconst CreateDetailDiv = styled.div`\n  display: flex;\n  width: 100%;\n  div {\n    width: 100%;\n  }\n`\n\nconst CreateTimeline = () => {\n  const [title, setTitle] = useState(\"\")\n  const [countList, setCountList] = useState([0])\n  const [detailTitle, setDetailTitle] = useState([])\n  const [detailDate, setDetailDate] = useState([])\n  const [detailDateString, setDetailDateString] = useState([])\n  const [detailContent, setDetailContent] = useState([])\n  const [category, setCategory] = useState(\"경제\")\n  const [complete, setComplete] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [files, setFiles] = useState([])\n\n  const user = useSelector(state => state.user)\n  const history = useHistory()\n\n  const onCreateTimeline = (e) => {\n\n    let formData = new FormData()\n\n    // 파일 없을 시\n    if(files.length === 0) {\n      formData.append(\"file\", \"\")\n    } else {\n      formData.append(\"file\", files[0])\n    }\n\n    let variables = [{\n      author: user.userData.email,\n      category: category,\n      complete: complete,\n      open: open,\n      title: title,\n      likeCount: 0,\n      viewCount: 0\n    }]\n\n    formData.append(\"dto\", new Blob([JSON.stringify(variables)], {type: \"application/json\"}))\n\n    let detailList = []\n    let valid = true\n\n    // 타임라인이 하나도 없을 때\n    if(countList.length === 0) {\n      alert(\"1개 이상의 타임라인을 작성해 주세요\")\n      return false\n    } else if(!title) {\n      alert(\"제목을 작성해 주세요\")\n      return false\n    }\n\n    // 타임라인 상세 내용 유효성 검사\n    countList.forEach((item, i) => {\n      if(detailTitle[i] === undefined || detailTitle[i] === \"\") {\n        alert(\"타임라인 제목을 입력해 주세요\")\n        valid = false\n      } else if(detailContent[i] === undefined || detailContent[i] === \"\") {\n        alert(\"타임라인 내용을 입력해 주세요\")\n        valid = false\n      } else if(detailDate[i] === undefined || detailDate[i] === \"\") {\n        alert(\"타임라인 날짜를 입력해 주세요\")\n        valid = false\n      }\n    })\n\n    if(valid) {\n      Axios.post(\"/timeline/master/save\", formData)\n        .then(res => {\n          // master에서 id값 return하면 받아서 detail 저장\n          if(res.data.id) {\n            countList.forEach((item, i) => {\n              detailList.push({\n                \"content\": detailContent[i],\n                \"id\": res.data.id.toString() + i.toString(),\n                \"masterId\": res.data.id,\n                \"scheduleDate\": detailDateString[i].replaceAll('-', ''),\n                \"title\": detailTitle[i]\n              })\n            })\n\n            Axios.post(\"/timeline/detail/save\", detailList)\n              .then(response => {\n                if(response.status === 200) {\n                  history.push(\"/mytimeline\")\n                }\n              })\n          }\n        })\n    }\n  }\n\n  const onChangeTitle = (e) => {\n    setTitle(e.target.value)\n  }\n\n  const onChangeDetailTitle= (e, i) => {\n    let detailTitleArr = [...detailTitle]\n\n    detailTitleArr[i] = e.target.value\n    setDetailTitle(detailTitleArr)\n  }\n\n  const onChangeDate = (date, dateString, i) => {\n    let detailDateArr = [...detailDate]\n    let detailDatestringArr = [...detailDateString]\n\n    // 날짜 선택 중복 금지\n    if(detailDatestringArr.includes(dateString)) {\n      alert(\"이미 선택한 날짜입니다\")\n      return false\n    } else {\n      detailDateArr[i] = date\n      detailDatestringArr[i] = dateString\n      setDetailDate(detailDateArr)\n      setDetailDateString(detailDatestringArr)\n    }\n  }\n\n  const onchangeDetailContent = (e, i) => {\n    let detailContentArr = [...detailContent]\n\n    detailContentArr[i] = e.target.value\n    setDetailContent(detailContentArr)\n  }\n\n  const onSelectCategory = (value) => {\n    setCategory(value)\n  }\n\n  const onSelectComplete = (value) => {\n    setComplete(value)\n  }\n\n  const onSelectOpen = (value) => {\n    setOpen(value)\n  }\n\n  const onAddDetailDiv = () => {\n    let countArr = countList.length === 0 ? [0] : [...countList]\n    let counter = countArr.slice(-1)[0]\n\n    // 타임라인 상세 영역 다 삭제해서 하나도 없을 때\n    if(countList.length === 0) {\n      setCountList(countArr)\n    // 타임라인 상세 영역 1개 이상일 때\n    } else {\n      counter += 1\n      countArr[countArr.length] = counter\n      setCountList(countArr)\n    }\n  }\n\n  const onDeleteDetailTitle = (i) => {\n    let titleArr = [...detailTitle]\n    titleArr.splice(i, 1)\n    setDetailTitle(titleArr)\n  }\n\n  const onDeleteDetailDate = (i) => {\n    let dateArr = [...detailDate]\n    let datestringArr = [...detailDateString]\n\n    dateArr.splice(i, 1)\n    datestringArr.splice(i, 1)\n    setDetailDate(dateArr)\n    setDetailDateString(datestringArr)\n  }\n\n  const onDeleteDetailContent = (i) => {\n    let contentArr = [...detailContent]\n    contentArr.splice(i, 1)\n    setDetailContent(contentArr)\n  }\n\n  const onDeleteDetail = (item, i) => {\n    let countArr = [...countList]\n    // array 값과 일치하는 것만 삭제, 일치하지 않는 것들만 남김\n    const newCountArr = countArr.filter((arr) => arr !== item)\n    setCountList(newCountArr)\n    onDeleteDetailTitle(i)\n    onDeleteDetailDate(i)\n    onDeleteDetailContent(i)\n  }\n\n  const onDrop = (files) => {\n    // 파일 크기 200MB 이하로 제한\n    if(files[0].size > 200000000) {\n      alert(\"파일 크기가 너무 큽니다 200MB 이하 파일만 업로드 가능합니다\")\n    } else {\n      setFiles(files)\n    }\n  }\n\n  const onDeleteFile = () => {\n    // 업로드한 파일 정보 삭제\n    setFiles([])\n  }\n\n  return (\n    <CreateTimelineDiv>\n      <h1>타임라인 생성하기</h1>\n      <br />\n      <Form onSubmit={onCreateTimeline}>\n        <TimelineMaster title={title} files={files} onChangeTitle={onChangeTitle} onSelectCategory={onSelectCategory} onSelectComplete={onSelectComplete} onSelectOpen={onSelectOpen}\n          onDrop={onDrop} onDeleteFile={onDeleteFile} />\n        <Divider />\n        <CreateDetailDiv>\n          <div>\n            <TimelineDetail countList={countList} onDeleteDetail={onDeleteDetail} onChangeDetailTitle={onChangeDetailTitle} detailTitle={detailTitle}\n              onChangeDate={onChangeDate} detailDate={detailDate} onchangeDetailContent={onchangeDetailContent} detailContent={detailContent} detailDateString={detailDateString} />\n            <Button onClick={onAddDetailDiv}>\n              <PlusCircleOutlined />추가\n            </Button>\n          </div>\n          <div>\n            <TimelineView countList={countList} detailTitle={detailTitle} detailDateString={detailDateString} detailContent={detailContent}/>\n          </div>\n        </CreateDetailDiv>\n        <Button size=\"large\" onClick={onCreateTimeline}>생성하기</Button>\n      </Form>\n    </CreateTimelineDiv>\n  )\n}\nexport default CreateTimeline\n"]},"metadata":{},"sourceType":"module"}