{"ast":null,"code":"import _slicedToArray from\"C:/dev/springboot/workplace/tiltest3/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/dev/springboot/workplace/tiltest3/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState}from\"react\";import{Form,Input,Button}from\"antd\";import styled from\"styled-components\";import{useHistory}from\"react-router-dom\";import{useCookies}from\"react-cookie\";import Axios from\"axios\";import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginDiv=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding: 3rem 0;\\n  form {\\n    width: 320px;\\n    display: inline-block;\\n    .ant-form-item {\\n      display: flex;\\n      flex-direction: column;\\n      justify-content: center;\\n      .ant-form-item-label {\\n        text-align: center;\\n      }\\n    }\\n    // \\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30 \\uC601\\uC5ED\\n    .ant-form-item:nth-child(2) {\\n      margin-bottom: 0;\\n      & + .ant-form-item .ant-col {\\n        text-align: right;\\n        #search {\\n          color: lightgray !important;\\n        }\\n      }\\n    }\\n    label {\\n      margin-bottom: 1rem;\\n    }\\n    .ant-input-password {\\n      height: 32px;\\n      input {\\n        height: 100%;\\n      }\\n    }\\n    button {\\n      width: 100%;\\n      background: black;\\n      color: #ffffff;\\n      margin-top: 1rem;\\n    }\\n  }\\n\"])));var LoginPage=function LoginPage(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),errorMessage=_useState6[0],setErrorMessage=_useState6[1];var _useCookies=useCookies(\"\"),_useCookies2=_slicedToArray(_useCookies,2),cookies=_useCookies2[0],setCookie=_useCookies2[1];var history=useHistory();var onChangeEmail=function onChangeEmail(e){setEmail(e.target.value);};var onChangePwd=function onChangePwd(e){setPassword(e.target.value);};var onCheckEnter=function onCheckEnter(e){if(e.key===\"Enter\"){onLogin();}};var onLogin=function onLogin(){var variables={\"email\":email,\"password\":password};Axios.post(\"/auth/login\",variables).then(function(res){setCookie(\"tl_token\",res.data.accessToken);setCookie(\"tl_exp\",res.data.accessTokenExpiresIn);setCookie(\"tl_e\",email);setCookie(\"tl_re\",res.data.refreshToken);history.push(\"/mypage\");window.location.reload();}).catch(function(err){setErrorMessage(\"이메일이나 비밀번호를 다시 확인해 주세요\");});};return/*#__PURE__*/_jsxs(LoginDiv,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Form,{onKeyPress:onCheckEnter,children:[/*#__PURE__*/_jsx(Form.Item,{label:\"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C:\",name:\"email\",rules:[{required:true}],children:/*#__PURE__*/_jsx(Input,{value:email,onChange:onChangeEmail})}),/*#__PURE__*/_jsx(Form.Item,{label:\"\\uBE44\\uBC00\\uBC88\\uD638:\",name:\"password\",rules:[{required:true}],children:/*#__PURE__*/_jsx(Input.Password,{value:password,onChange:onChangePwd})}),/*#__PURE__*/_jsx(Form.Item,{name:\"search\",children:/*#__PURE__*/_jsx(Link,{to:\"/findpw\",children:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"})}),errorMessage&&/*#__PURE__*/_jsx(\"label\",{children:/*#__PURE__*/_jsx(\"p\",{style:{color:'#ff0000bf',fontSize:'0.7rem',border:'1px solid',padding:'1rem',borderRadius:'10px'},children:errorMessage})}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsx(Button,{size:\"large\",onClick:onLogin,children:\"\\uB85C\\uADF8\\uC778\"})})]})]});};export default LoginPage;","map":{"version":3,"sources":["C:/dev/springboot/workplace/tiltest3/src/main/frontend/src/components/AuthPage/LoginPage.js"],"names":["React","useState","Form","Input","Button","styled","useHistory","useCookies","Axios","Link","LoginDiv","div","LoginPage","email","setEmail","password","setPassword","errorMessage","setErrorMessage","cookies","setCookie","history","onChangeEmail","e","target","value","onChangePwd","onCheckEnter","key","onLogin","variables","post","then","res","data","accessToken","accessTokenExpiresIn","refreshToken","push","window","location","reload","catch","err","required","color","fontSize","border","padding","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport styled from \"styled-components\"\nimport { useHistory } from \"react-router-dom\"\nimport { useCookies } from \"react-cookie\"\nimport Axios from \"axios\"\nimport { Link } from \"react-router-dom\"\n\nconst LoginDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    // 비밀번호 찾기 영역\n    .ant-form-item:nth-child(2) {\n      margin-bottom: 0;\n      & + .ant-form-item .ant-col {\n        text-align: right;\n        #search {\n          color: lightgray !important;\n        }\n      }\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    .ant-input-password {\n      height: 32px;\n      input {\n        height: 100%;\n      }\n    }\n    button {\n      width: 100%;\n      background: black;\n      color: #ffffff;\n      margin-top: 1rem;\n    }\n  }\n`;\n\nconst LoginPage = () => {\n\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [errorMessage, setErrorMessage] = useState(\"\")\n  const [cookies, setCookie] = useCookies(\"\")\n\n  const history = useHistory()\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value)\n  }\n\n  const onChangePwd = (e) => {\n    setPassword(e.target.value)\n  }\n\n  const onCheckEnter = (e) => {\n    if(e.key === \"Enter\") {\n      onLogin()\n    }\n  }\n\n  const onLogin = () => {\n\n    var variables = {\n      \"email\": email,\n      \"password\": password\n    }\n\n    Axios.post(\"/auth/login\", variables)\n      .then(res => {\n        setCookie(\"tl_token\", res.data.accessToken)\n        setCookie(\"tl_exp\", res.data.accessTokenExpiresIn)\n        setCookie(\"tl_e\", email)\n        setCookie(\"tl_re\", res.data.refreshToken)\n        history.push(\"/mypage\")\n        window.location.reload()\n      })\n      .catch(err => {\n        setErrorMessage(\"이메일이나 비밀번호를 다시 확인해 주세요\")\n      })\n  }\n\n  return (\n    <LoginDiv>\n      <h1>로그인</h1>\n      <br />\n      <Form onKeyPress={onCheckEnter}>\n        <Form.Item\n          label=\"이메일 주소:\"\n          name=\"email\"\n          rules={[{ required: true }]}\n        >\n          <Input value={email} onChange={onChangeEmail} />\n        </Form.Item>\n        <Form.Item\n          label=\"비밀번호:\"\n          name=\"password\"\n          rules={[{ required: true }]}\n        >\n          <Input.Password value={password} onChange={onChangePwd} />\n        </Form.Item>\n        <Form.Item name=\"search\">\n          <Link to=\"/findpw\">\n            비밀번호 찾기\n          </Link>\n        </Form.Item>\n        {errorMessage && (\n          <label><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{errorMessage}</p></label>\n        )}\n        <Form.Item>\n          <Button size=\"large\" onClick={onLogin}>\n            로그인\n          </Button>\n        </Form.Item>\n      </Form>\n    </LoginDiv>\n  )\n}\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}