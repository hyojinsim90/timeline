{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\springboot\\\\workplace\\\\tiltest3\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\ManageTimeline\\\\TimelineList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Table, Tag } from \"antd\";\nimport styled from \"styled-components\";\nimport Axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimelineListDiv = styled.div`\n  padding: 3rem 2rem;\n  td {\n    div {\n      div {\n        width: 100PX;\n        height: 100PX;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n      img {\n        width: 100px;\n        height: 100px;\n      }\n    }\n    .ant-empty {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n  }\n`;\n_c = TimelineListDiv;\n\nconst TimelineList = props => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [checkDelete, setCheckDelete] = useState(false);\n  const columns = [{\n    title: '이미지',\n    dataIndex: 'imgFullPath',\n    key: 'imgFullPath',\n    render: imgFullPath => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imgFullPath ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgFullPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"NO IMAGE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: '제목',\n    dataIndex: 'title',\n    key: 'title'\n  }, {\n    title: '분야',\n    dataIndex: 'category',\n    key: 'category'\n  }, {\n    title: '진행여부',\n    dataIndex: 'complete',\n    key: 'complete',\n    render: complete => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: complete ? /*#__PURE__*/_jsxDEV(Tag, {\n        color: \"mediumpurple\",\n        children: \"\\uC9C4\\uD589\\uC644\\uB8CC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Tag, {\n        color: \"skyblue\",\n        children: \"\\uC9C4\\uD589\\uC911\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: '공개여부',\n    dataIndex: 'open',\n    key: 'open',\n    render: open => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: open ? /*#__PURE__*/_jsxDEV(Tag, {\n        color: \"black\",\n        children: \"\\uACF5\\uAC1C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Tag, {\n        color: \"lightgray\",\n        children: \"\\uBE44\\uACF5\\uAC1C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: '조회수',\n    dataIndex: 'viewCount',\n    key: 'viewCount'\n  }, {\n    title: '추천수',\n    dataIndex: 'likeCount',\n    key: 'likeCount'\n  }, {\n    title: '생성일자',\n    dataIndex: 'createdDate',\n    key: 'createdDate',\n    render: date => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: date.substring(0, 10)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: '삭제',\n    dataIndex: 'id',\n    key: 'id',\n    render: id => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n        onClick: e => onDeleteTimeline(e, id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)\n  }];\n  useEffect(() => {\n    if (props.user.userData !== undefined && props.user.userData.email !== undefined) {\n      Axios.get(`/timeline/master/${props.user.userData.email}`).then(res => {\n        if (res.data) {\n          setList(res.data);\n        }\n      });\n    }\n  }, [props.user, checkDelete]);\n\n  const onDeleteTimeline = (e, id) => {\n    // onRow click event 실행 막기\n    e.stopPropagation();\n    Axios.delete(`/timeline/${id}`).then(res => {\n      if (res.status === 200) {\n        alert(\"삭제되었습니다\");\n        setCheckDelete(!checkDelete);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TimelineListDiv, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: list,\n      rowKey: list => list.id,\n      pagination: false,\n      onRow: (record, rowIndex) => {\n        return {\n          onClick: () => {\n            props.history.push(`/timelinelist/${record.id}`);\n          }\n        };\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TimelineList, \"DmenHC+e7lDAm8ZMARECozSL1io=\");\n\n_c2 = TimelineList;\nexport default TimelineList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TimelineListDiv\");\n$RefreshReg$(_c2, \"TimelineList\");","map":{"version":3,"sources":["C:/dev/springboot/workplace/tiltest3/src/main/frontend/src/components/ManageTimeline/TimelineList.js"],"names":["React","useState","useEffect","Table","Tag","styled","Axios","useSelector","Link","DeleteOutlined","TimelineListDiv","div","TimelineList","props","list","setList","checkDelete","setCheckDelete","columns","title","dataIndex","key","render","imgFullPath","complete","open","date","substring","id","e","onDeleteTimeline","user","userData","undefined","email","get","then","res","data","stopPropagation","delete","status","alert","record","rowIndex","onClick","history","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Table, Tag } from \"antd\"\nimport styled from \"styled-components\"\nimport Axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport { DeleteOutlined } from \"@ant-design/icons\"\n\nconst TimelineListDiv = styled.div`\n  padding: 3rem 2rem;\n  td {\n    div {\n      div {\n        width: 100PX;\n        height: 100PX;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n      img {\n        width: 100px;\n        height: 100px;\n      }\n    }\n    .ant-empty {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n  }\n`\n\nconst TimelineList = (props) => {\n  const [list, setList] = useState([])\n  const [checkDelete, setCheckDelete] = useState(false)\n\n  const columns = [\n    {\n      title: '이미지',\n      dataIndex: 'imgFullPath',\n      key: 'imgFullPath',\n      render: imgFullPath => (\n        <div>\n          { imgFullPath ?\n            <img src={imgFullPath} />\n          :\n            <div>\n              NO IMAGE\n            </div>\n          }\n        </div>\n      )\n    },\n    {\n      title: '제목',\n      dataIndex: 'title',\n      key: 'title',\n    },\n    {\n      title: '분야',\n      dataIndex: 'category',\n      key: 'category',\n    },\n    {\n      title: '진행여부',\n      dataIndex: 'complete',\n      key: 'complete',\n      render: complete => (\n        <div>\n          { complete ?\n            <Tag color=\"mediumpurple\">진행완료</Tag>\n            :\n            <Tag color=\"skyblue\">진행중</Tag>\n          }\n        </div>\n      ),\n    },\n    {\n      title: '공개여부',\n      dataIndex: 'open',\n      key: 'open',\n      render: open => (\n        <div>\n          { open ?\n            <Tag color=\"black\">공개</Tag>\n            :\n            <Tag color=\"lightgray\">비공개</Tag>\n          }\n        </div>\n      )\n    },\n    {\n      title: '조회수',\n      dataIndex: 'viewCount',\n      key: 'viewCount',\n    },\n    {\n      title: '추천수',\n      dataIndex: 'likeCount',\n      key: 'likeCount',\n    },\n    {\n      title: '생성일자',\n      dataIndex: 'createdDate',\n      key: 'createdDate',\n      render: date => (\n        <div>\n          {date.substring(0, 10)}\n        </div>\n      )\n    },\n    {\n      title: '삭제',\n      dataIndex: 'id',\n      key: 'id',\n      render: (id) => (\n        <div>\n          <DeleteOutlined onClick={(e) => onDeleteTimeline(e, id)} />\n        </div>\n      )\n    },\n ]\n\n  useEffect(() => {\n    if(props.user.userData !== undefined && props.user.userData.email !== undefined) {\n      Axios.get(`/timeline/master/${props.user.userData.email}`)\n        .then(res => {\n          if(res.data) {\n            setList(res.data)\n          }\n        })\n    }\n  }, [props.user, checkDelete])\n\n  const onDeleteTimeline = (e, id) => {\n    // onRow click event 실행 막기\n    e.stopPropagation()\n\n    Axios.delete(`/timeline/${id}`)\n      .then(res => {\n        if(res.status === 200) {\n          alert(\"삭제되었습니다\")\n          setCheckDelete(!checkDelete)\n        }\n      })\n  }\n\n  return (\n    <TimelineListDiv>\n      <Table columns={columns} dataSource={list} rowKey={list => list.id} pagination={false}\n        onRow={(record, rowIndex) => {\n        return {\n          onClick: () => {\n            props.history.push(`/timelinelist/${record.id}`)\n          },\n        }\n      }}\n      />\n    </TimelineListDiv>\n  )\n}\n\nexport default TimelineList\n"]},"metadata":{},"sourceType":"module"}