{"ast":null,"code":"import _slicedToArray from\"C:/dev/springboot/workplace/tiltest3/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/dev/springboot/workplace/tiltest3/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState}from\"react\";import{Form,Input,Button}from\"antd\";import styled from\"styled-components\";import Axios from\"axios\";import{useHistory}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SignupDiv=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding: 3rem 0;\\n  form {\\n    width: 320px;\\n    display: inline-block;\\n    .ant-form-item {\\n      display: flex;\\n      flex-direction: column;\\n      justify-content: center;\\n      .ant-form-item-label {\\n        text-align: center;\\n      }\\n    }\\n    // \\uB2C9\\uB124\\uC784 \\uC601\\uC5ED\\n    #nickname {\\n      display: flex;\\n    }\\n    label {\\n      margin-bottom: 1rem;\\n    }\\n    .ant-input-password {\\n      height: 32px;\\n      input {\\n        height: 100%;\\n      }\\n    }\\n    .ant-form-item:last-child {\\n      button {\\n        width: 100%;\\n        background: black;\\n        color: #ffffff;\\n        margin-top: 1rem;\\n      }\\n    }\\n  }\\n\"])));var SignupPage=function SignupPage(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),nickname=_useState4[0],setNickname=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password1=_useState6[0],setPassword1=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),password2=_useState8[0],setPassword2=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),checkDuplicate=_useState10[0],setCheckDuplicate=_useState10[1];var history=useHistory();var onChangeEmail=function onChangeEmail(e){setEmail(e.target.value);};var onChangeNickname=function onChangeNickname(e){setNickname(e.target.value);setCheckDuplicate(false);};var onChangePwd1=function onChangePwd1(e){setPassword1(e.target.value);};var onChangePwd2=function onChangePwd2(e){setPassword2(e.target.value);};// 중복확인 체크\nvar onCheckDup=function onCheckDup(){Axios.get(\"/auth/nicknames\").then(function(res){var duplicate=res.data.filter(function(item){return item.nickname===nickname;});// 닉네임 중복일 경우\nif(duplicate.length>0){alert(\"이미 사용 중인 닉네임입니다\");}else{setCheckDuplicate(true);alert(\"사용할 수 있는 닉네임입니다\");}});};var onCheckEnter=function onCheckEnter(e){if(e.key===\"Enter\"){onSignup();}};var onSignup=function onSignup(){var variables={\"email\":email,\"nickname\":nickname,\"password\":password2};// 닉네임 중복확인 필수\nif(checkDuplicate){Axios.get(\"/auth/findPw/checkmail/\".concat(email)).then(function(res){// 이메일 중복 없을 경우에만 회원가입 후 로그인 페이지로 이동\nif(res.data===false){Axios.post(\"/auth/signup\",variables).then(function(response){history.push(\"/login\");});// 이메일 중복 있을 경우 alert\n}else{alert(\"사용할 수 없는 이메일입니다\");}});// 닉네임 중복확인 안 했을 경우\n}else{alert(\"닉네임 중복확인을 해주세요\");}};return/*#__PURE__*/_jsxs(SignupDiv,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Form,{onKeyPress:onCheckEnter,children:[/*#__PURE__*/_jsx(Form.Item,{label:\"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C:\",name:\"email\",rules:[{required:true}],children:/*#__PURE__*/_jsx(Input,{onChange:onChangeEmail})}),/*#__PURE__*/_jsx(Form.Item,{label:\"\\uB2C9\\uB124\\uC784:\",name:\"nickname\",rules:[{required:true}],children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Input,{onChange:onChangeNickname}),/*#__PURE__*/_jsx(Button,{onClick:onCheckDup,children:\"\\uC911\\uBCF5\\uD655\\uC778\"})]})}),/*#__PURE__*/_jsx(Form.Item,{label:\"\\uBE44\\uBC00\\uBC88\\uD638(8~16\\uC790):\",name:\"password1\",rules:[{required:true,min:8,max:16,message:'다시 입력해 주세요'}],children:/*#__PURE__*/_jsx(Input.Password,{value:password1,onChange:onChangePwd1})}),/*#__PURE__*/_jsx(Form.Item,{label:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778(8~16\\uC790):\",name:\"password2\",rules:[{required:true,min:8,max:16,message:'다시 입력해 주세요'}],children:/*#__PURE__*/_jsx(Input.Password,{value:password2,onChange:onChangePwd2})}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsx(Button,{size:\"large\",onClick:onSignup,children:\"\\uAC00\\uC785\\uD558\\uAE30\"})})]})]});};export default SignupPage;","map":{"version":3,"sources":["C:/dev/springboot/workplace/tiltest3/src/main/frontend/src/components/AuthPage/SignupPage.js"],"names":["React","useState","Form","Input","Button","styled","Axios","useHistory","SignupDiv","div","SignupPage","email","setEmail","nickname","setNickname","password1","setPassword1","password2","setPassword2","checkDuplicate","setCheckDuplicate","history","onChangeEmail","e","target","value","onChangeNickname","onChangePwd1","onChangePwd2","onCheckDup","get","then","res","duplicate","data","filter","item","length","alert","onCheckEnter","key","onSignup","variables","post","response","push","required","min","max","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport styled from \"styled-components\"\nimport Axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\n\nconst SignupDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    // 닉네임 영역\n    #nickname {\n      display: flex;\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    .ant-input-password {\n      height: 32px;\n      input {\n        height: 100%;\n      }\n    }\n    .ant-form-item:last-child {\n      button {\n        width: 100%;\n        background: black;\n        color: #ffffff;\n        margin-top: 1rem;\n      }\n    }\n  }\n`;\n\nconst SignupPage = () => {\n  const [email, setEmail] = useState(\"\")\n  const [nickname, setNickname] = useState(\"\")\n  const [password1, setPassword1] = useState(\"\")\n  const [password2, setPassword2] = useState(\"\")\n  const [checkDuplicate, setCheckDuplicate] = useState(false)\n\n  const history = useHistory()\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value)\n  }\n\n  const onChangeNickname = (e) => {\n    setNickname(e.target.value)\n    setCheckDuplicate(false)\n  }\n\n  const onChangePwd1 = (e) => {\n    setPassword1(e.target.value)\n  }\n\n  const onChangePwd2 = (e) => {\n    setPassword2(e.target.value)\n  }\n\n  // 중복확인 체크\n  const onCheckDup = () => {\n    Axios.get(\"/auth/nicknames\")\n      .then(res => {\n        const duplicate = res.data.filter(item => item.nickname === nickname)\n        // 닉네임 중복일 경우\n        if(duplicate.length > 0) {\n          alert(\"이미 사용 중인 닉네임입니다\")\n        } else {\n          setCheckDuplicate(true)\n          alert(\"사용할 수 있는 닉네임입니다\")\n        }\n      })\n  }\n\n  const onCheckEnter = (e) => {\n    if(e.key === \"Enter\") {\n      onSignup()\n    }\n  }\n\n  const onSignup = () => {\n    const variables = {\n      \"email\": email,\n      \"nickname\": nickname,\n      \"password\": password2\n    }\n\n    // 닉네임 중복확인 필수\n    if(checkDuplicate) {\n      Axios.get(`/auth/findPw/checkmail/${email}`)\n        .then(res => {\n          // 이메일 중복 없을 경우에만 회원가입 후 로그인 페이지로 이동\n          if(res.data === false) {\n            Axios.post(\"/auth/signup\", variables)\n              .then(response => {\n                history.push(\"/login\")\n              })\n          // 이메일 중복 있을 경우 alert\n          } else {\n            alert(\"사용할 수 없는 이메일입니다\")\n          }\n        })\n    // 닉네임 중복확인 안 했을 경우\n    } else {\n      alert(\"닉네임 중복확인을 해주세요\")\n    }\n  }\n\n  return (\n    <SignupDiv>\n      <h1>회원가입</h1>\n      <br />\n      <Form onKeyPress={onCheckEnter}>\n        <Form.Item\n          label=\"이메일 주소:\"\n          name=\"email\"\n          rules={[{ required: true }]}\n        >\n          <Input onChange={onChangeEmail} />\n        </Form.Item>\n        <Form.Item\n          label=\"닉네임:\"\n          name=\"nickname\"\n          rules={[{ required: true }]}\n        >\n          <div>\n            <Input onChange={onChangeNickname} />\n            <Button onClick={onCheckDup}>중복확인</Button>\n          </div>\n        </Form.Item>\n        <Form.Item\n          label=\"비밀번호(8~16자):\"\n          name=\"password1\"\n          rules={[{ required: true, min: 8, max: 16, message: '다시 입력해 주세요' }]}\n        >\n          <Input.Password value={password1} onChange={onChangePwd1} />\n        </Form.Item>\n        <Form.Item\n          label=\"비밀번호 확인(8~16자):\"\n          name=\"password2\"\n          rules={[{ required: true, min: 8, max: 16, message: '다시 입력해 주세요' }]}\n        >\n          <Input.Password value={password2} onChange={onChangePwd2}  />\n        </Form.Item>\n        <Form.Item>\n          <Button size=\"large\" onClick={onSignup}>\n            가입하기\n          </Button>\n        </Form.Item>\n      </Form>\n    </SignupDiv>\n  )\n}\n\nexport default SignupPage;\n"]},"metadata":{},"sourceType":"module"}