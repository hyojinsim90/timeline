{"ast":null,"code":"import _slicedToArray from\"C:/dev/springboot/workplace/tiltest3/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from\"react\";import{auth}from\"../_actions/user_actions\";import{useSelector,useDispatch}from\"react-redux\";import{useCookies}from\"react-cookie\";import Axios from\"axios\";import{useHistory}from\"react-router-dom\";export default function authHoc(SpecificComponent,option){var adminRoute=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;function AuthenticationCheck(props){var _useCookies=useCookies([]),_useCookies2=_slicedToArray(_useCookies,3),cookies=_useCookies2[0],setCookie=_useCookies2[1],removeCookie=_useCookies2[2];var user=useSelector(function(state){return state.user;});var history=useHistory();var dispatch=useDispatch();var removeCookies=function removeCookies(){removeCookie(\"tl_e\");removeCookie(\"tl_re\");removeCookie(\"tl_exp\");removeCookie(\"tl_token\");window.location.reload();history.push(\"/login\");};useEffect(function(){if(cookies.tl_e&&cookies.tl_token&&cookies.tl_re&&cookies.tl_exp){var date=new Date();var expTime=parseInt(cookies.tl_exp);var tokens={\"accessToken\":cookies.tl_token,\"refreshToken\":cookies.tl_re};var over3h=expTime+10800000;if(date.getTime()>expTime){// 로그인 후 3시간 이상 지났을 때는 cookie 삭제\nif(date.getTime()>over3h){removeCookies();}Axios.post(\"/auth/reissue\",tokens).then(function(res){setCookie(\"tl_token\",res.data.accessToken);setCookie(\"tl_exp\",res.data.accessTokenExpiresIn);setCookie(\"tl_re\",res.data.refreshToken);history.push(\"/mypage\");window.location.reload();}).catch(function(err){removeCookies();});}// member 정보 가져오기 위해 header에 token 담아서 넘김\nAxios.defaults.headers.common['Authorization']=\"Bearer \".concat(cookies.tl_token);dispatch(auth(cookies.tl_e));// cookie에 token 관련 값 4개 중 하나라도 없으면 쿠키 삭제 후 login 페이지로 이동\n}else{if(option){removeCookie(\"tl_e\");removeCookie(\"tl_re\");removeCookie(\"tl_exp\");removeCookie(\"tl_token\");history.push(\"/login\");}}},[cookies]);return/*#__PURE__*/React.createElement(SpecificComponent,Object.assign({},props,{user:user}));}return AuthenticationCheck;}","map":{"version":3,"sources":["C:/dev/springboot/workplace/tiltest3/src/main/frontend/src/hoc/auth.js"],"names":["React","useEffect","auth","useSelector","useDispatch","useCookies","Axios","useHistory","authHoc","SpecificComponent","option","adminRoute","AuthenticationCheck","props","cookies","setCookie","removeCookie","user","state","history","dispatch","removeCookies","window","location","reload","push","tl_e","tl_token","tl_re","tl_exp","date","Date","expTime","parseInt","tokens","over3h","getTime","post","then","res","data","accessToken","accessTokenExpiresIn","refreshToken","catch","err","defaults","headers","common"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\"\nimport { auth } from \"../_actions/user_actions\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useCookies } from \"react-cookie\"\nimport Axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\n\nexport default function authHoc(SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n      const [cookies, setCookie, removeCookie] = useCookies([])\n      let user = useSelector(state => state.user)\n      const history = useHistory()\n      const dispatch = useDispatch()\n\n      const removeCookies = () => {\n        removeCookie(\"tl_e\")\n        removeCookie(\"tl_re\")\n        removeCookie(\"tl_exp\")\n        removeCookie(\"tl_token\")\n        window.location.reload()\n        history.push(\"/login\")\n      }\n\n      useEffect(() => {\n        if(cookies.tl_e && cookies.tl_token && cookies.tl_re && cookies.tl_exp) {\n          const date = new Date()\n          const expTime = parseInt(cookies.tl_exp)\n\n          const tokens = {\n            \"accessToken\": cookies.tl_token,\n            \"refreshToken\": cookies.tl_re\n          }\n\n          let over3h = expTime + 10800000\n\n          if(date.getTime() > expTime) {\n            // 로그인 후 3시간 이상 지났을 때는 cookie 삭제\n            if(date.getTime() > over3h) {\n              removeCookies()\n            }\n\n            Axios.post(\"/auth/reissue\", tokens)\n              .then(res => {\n                setCookie(\"tl_token\", res.data.accessToken)\n                setCookie(\"tl_exp\", res.data.accessTokenExpiresIn)\n                setCookie(\"tl_re\", res.data.refreshToken)\n                history.push(\"/mypage\")\n                window.location.reload()\n              })\n              .catch(err => {\n                removeCookies()\n              })\n            }\n\n          // member 정보 가져오기 위해 header에 token 담아서 넘김\n          Axios.defaults.headers.common['Authorization'] = `Bearer ${cookies.tl_token}`\n          dispatch(auth(cookies.tl_e))\n        // cookie에 token 관련 값 4개 중 하나라도 없으면 쿠키 삭제 후 login 페이지로 이동\n        } else {\n          if (option) {\n            removeCookie(\"tl_e\")\n            removeCookie(\"tl_re\")\n            removeCookie(\"tl_exp\")\n            removeCookie(\"tl_token\")\n            history.push(\"/login\")\n          }\n        }\n      }, [cookies])\n\n      return (\n        <SpecificComponent {...props} user={user} />\n      )\n    }\n  return AuthenticationCheck\n}\n"]},"metadata":{},"sourceType":"module"}