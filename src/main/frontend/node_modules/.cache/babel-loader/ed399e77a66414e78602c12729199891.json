{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\springboot\\\\workplace\\\\tiltest3\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\AuthPage\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\nimport Axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nconst LoginDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    // 비밀번호 찾기 영역\n    .ant-form-item:nth-child(2) {\n      margin-bottom: 0;\n      & + .ant-form-item .ant-col {\n        text-align: right;\n        #search {\n          color: lightgray !important;\n        }\n      }\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    .ant-input-password {\n      height: 32px;\n      input {\n        height: 100%;\n      }\n    }\n    button {\n      width: 100%;\n      background: black;\n      color: #ffffff;\n      margin-top: 1rem;\n    }\n  }\n`;\n_c = LoginDiv;\n\nconst LoginPage = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [cookies, setCookie] = useCookies(\"\");\n  const history = useHistory();\n\n  const onChangeEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePwd = e => {\n    setPassword(e.target.value);\n  };\n\n  const onCheckEnter = e => {\n    if (e.key === \"Enter\") {\n      onLogin();\n    }\n  };\n\n  const onLogin = () => {\n    var variables = {\n      \"email\": email,\n      \"password\": password\n    };\n    Axios.post(\"/auth/login\", variables).then(res => {\n      setCookie(\"tl_token\", res.data.accessToken);\n      setCookie(\"tl_exp\", res.data.accessTokenExpiresIn);\n      setCookie(\"tl_e\", email);\n      setCookie(\"tl_re\", res.data.refreshToken);\n      history.push(\"/mypage\");\n      window.location.reload();\n    }).catch(err => {\n      setErrorMessage(\"이메일이나 비밀번호를 다시 확인해 주세요\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(LoginDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onKeyPress: onCheckEnter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C:\",\n    name: \"email\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: email,\n    onChange: onChangeEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638:\",\n    name: \"password\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    value: password,\n    onChange: onChangePwd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/findpw\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\")), errorMessage && /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: '#ff0000bf',\n      fontSize: '0.7rem',\n      border: '1px solid',\n      padding: '1rem',\n      borderRadius: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 18\n    }\n  }, errorMessage)), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    onClick: onLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"))));\n};\n\n_s(LoginPage, \"gVkvmWed9YYltWVVxBB6BqOR+IQ=\", false, function () {\n  return [useCookies, useHistory];\n});\n\n_c2 = LoginPage;\nexport default LoginPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginDiv\");\n$RefreshReg$(_c2, \"LoginPage\");","map":{"version":3,"sources":["C:/dev/springboot/workplace/tiltest3/src/main/frontend/src/components/AuthPage/LoginPage.js"],"names":["React","useState","Form","Input","Button","styled","useHistory","useCookies","Axios","Link","LoginDiv","div","LoginPage","email","setEmail","password","setPassword","errorMessage","setErrorMessage","cookies","setCookie","history","onChangeEmail","e","target","value","onChangePwd","onCheckEnter","key","onLogin","variables","post","then","res","data","accessToken","accessTokenExpiresIn","refreshToken","push","window","location","reload","catch","err","required","color","fontSize","border","padding","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport styled from \"styled-components\"\nimport { useHistory } from \"react-router-dom\"\nimport { useCookies } from \"react-cookie\"\nimport Axios from \"axios\"\nimport { Link } from \"react-router-dom\"\n\nconst LoginDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    // 비밀번호 찾기 영역\n    .ant-form-item:nth-child(2) {\n      margin-bottom: 0;\n      & + .ant-form-item .ant-col {\n        text-align: right;\n        #search {\n          color: lightgray !important;\n        }\n      }\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    .ant-input-password {\n      height: 32px;\n      input {\n        height: 100%;\n      }\n    }\n    button {\n      width: 100%;\n      background: black;\n      color: #ffffff;\n      margin-top: 1rem;\n    }\n  }\n`;\n\nconst LoginPage = () => {\n\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [errorMessage, setErrorMessage] = useState(\"\")\n  const [cookies, setCookie] = useCookies(\"\")\n\n  const history = useHistory()\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value)\n  }\n\n  const onChangePwd = (e) => {\n    setPassword(e.target.value)\n  }\n\n  const onCheckEnter = (e) => {\n    if(e.key === \"Enter\") {\n      onLogin()\n    }\n  }\n\n  const onLogin = () => {\n\n    var variables = {\n      \"email\": email,\n      \"password\": password\n    }\n\n    Axios.post(\"/auth/login\", variables)\n      .then(res => {\n        setCookie(\"tl_token\", res.data.accessToken)\n        setCookie(\"tl_exp\", res.data.accessTokenExpiresIn)\n        setCookie(\"tl_e\", email)\n        setCookie(\"tl_re\", res.data.refreshToken)\n        history.push(\"/mypage\")\n        window.location.reload()\n      })\n      .catch(err => {\n        setErrorMessage(\"이메일이나 비밀번호를 다시 확인해 주세요\")\n      })\n  }\n\n  return (\n    <LoginDiv>\n      <h1>로그인</h1>\n      <br />\n      <Form onKeyPress={onCheckEnter}>\n        <Form.Item\n          label=\"이메일 주소:\"\n          name=\"email\"\n          rules={[{ required: true }]}\n        >\n          <Input value={email} onChange={onChangeEmail} />\n        </Form.Item>\n        <Form.Item\n          label=\"비밀번호:\"\n          name=\"password\"\n          rules={[{ required: true }]}\n        >\n          <Input.Password value={password} onChange={onChangePwd} />\n        </Form.Item>\n        <Form.Item name=\"search\">\n          <Link to=\"/findpw\">\n            비밀번호 찾기\n          </Link>\n        </Form.Item>\n        {errorMessage && (\n          <label><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{errorMessage}</p></label>\n        )}\n        <Form.Item>\n          <Button size=\"large\" onClick={onLogin}>\n            로그인\n          </Button>\n        </Form.Item>\n      </Form>\n    </LoginDiv>\n  )\n}\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}