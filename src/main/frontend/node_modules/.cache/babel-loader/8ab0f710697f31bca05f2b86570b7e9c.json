{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\springboot\\\\workplace\\\\tiltest3\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\AuthPage\\\\SignupPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport styled from \"styled-components\";\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nconst SignupDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    // 닉네임 영역\n    #nickname {\n      display: flex;\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    .ant-input-password {\n      height: 32px;\n      input {\n        height: 100%;\n      }\n    }\n    .ant-form-item:last-child {\n      button {\n        width: 100%;\n        background: black;\n        color: #ffffff;\n        margin-top: 1rem;\n      }\n    }\n  }\n`;\n_c = SignupDiv;\n\nconst SignupPage = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [password1, setPassword1] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [checkDuplicate, setCheckDuplicate] = useState(false);\n  const history = useHistory();\n\n  const onChangeEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const onChangeNickname = e => {\n    setNickname(e.target.value);\n    setCheckDuplicate(false);\n  };\n\n  const onChangePwd1 = e => {\n    setPassword1(e.target.value);\n  };\n\n  const onChangePwd2 = e => {\n    setPassword2(e.target.value);\n  }; // 중복확인 체크\n\n\n  const onCheckDup = () => {\n    Axios.get(\"/auth/nicknames\").then(res => {\n      const duplicate = res.data.filter(item => item.nickname === nickname); // 닉네임 중복일 경우\n\n      if (duplicate.length > 0) {\n        alert(\"이미 사용 중인 닉네임입니다\");\n      } else {\n        setCheckDuplicate(true);\n        alert(\"사용할 수 있는 닉네임입니다\");\n      }\n    });\n  };\n\n  const onCheckEnter = e => {\n    if (e.key === \"Enter\") {\n      onSignup();\n    }\n  };\n\n  const onSignup = () => {\n    const variables = {\n      \"email\": email,\n      \"nickname\": nickname,\n      \"password\": password2\n    }; // 닉네임 중복확인 필수\n\n    if (checkDuplicate) {\n      Axios.get(`/auth/findPw/checkmail/${email}`).then(res => {\n        // 이메일 중복 없을 경우에만 회원가입 후 로그인 페이지로 이동\n        if (res.data === false) {\n          Axios.post(\"/auth/signup\", variables).then(response => {\n            history.push(\"/login\");\n          }); // 이메일 중복 있을 경우 alert\n        } else {\n          alert(\"사용할 수 없는 이메일입니다\");\n        }\n      }); // 닉네임 중복확인 안 했을 경우\n    } else {\n      alert(\"닉네임 중복확인을 해주세요\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(SignupDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onKeyPress: onCheckEnter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C:\",\n    name: \"email\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: onChangeEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"\\uB2C9\\uB124\\uC784:\",\n    name: \"nickname\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: onChangeNickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: onCheckDup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"\\uC911\\uBCF5\\uD655\\uC778\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638(8~16\\uC790):\",\n    name: \"password1\",\n    rules: [{\n      required: true,\n      min: 8,\n      max: 16,\n      message: '다시 입력해 주세요'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    value: password1,\n    onChange: onChangePwd1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778(8~16\\uC790):\",\n    name: \"password2\",\n    rules: [{\n      required: true,\n      min: 8,\n      max: 16,\n      message: '다시 입력해 주세요'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    value: password2,\n    onChange: onChangePwd2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    onClick: onSignup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\n_s(SignupPage, \"OIRqtmNMc5JQugFSp67kwrN39qg=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = SignupPage;\nexport default SignupPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignupDiv\");\n$RefreshReg$(_c2, \"SignupPage\");","map":{"version":3,"sources":["C:/dev/springboot/workplace/tiltest3/src/main/frontend/src/components/AuthPage/SignupPage.js"],"names":["React","useState","Form","Input","Button","styled","Axios","useHistory","SignupDiv","div","SignupPage","email","setEmail","nickname","setNickname","password1","setPassword1","password2","setPassword2","checkDuplicate","setCheckDuplicate","history","onChangeEmail","e","target","value","onChangeNickname","onChangePwd1","onChangePwd2","onCheckDup","get","then","res","duplicate","data","filter","item","length","alert","onCheckEnter","key","onSignup","variables","post","response","push","required","min","max","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport styled from \"styled-components\"\nimport Axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\n\nconst SignupDiv = styled.div`\n  padding: 3rem 0;\n  form {\n    width: 320px;\n    display: inline-block;\n    .ant-form-item {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      .ant-form-item-label {\n        text-align: center;\n      }\n    }\n    // 닉네임 영역\n    #nickname {\n      display: flex;\n    }\n    label {\n      margin-bottom: 1rem;\n    }\n    .ant-input-password {\n      height: 32px;\n      input {\n        height: 100%;\n      }\n    }\n    .ant-form-item:last-child {\n      button {\n        width: 100%;\n        background: black;\n        color: #ffffff;\n        margin-top: 1rem;\n      }\n    }\n  }\n`;\n\nconst SignupPage = () => {\n  const [email, setEmail] = useState(\"\")\n  const [nickname, setNickname] = useState(\"\")\n  const [password1, setPassword1] = useState(\"\")\n  const [password2, setPassword2] = useState(\"\")\n  const [checkDuplicate, setCheckDuplicate] = useState(false)\n\n  const history = useHistory()\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value)\n  }\n\n  const onChangeNickname = (e) => {\n    setNickname(e.target.value)\n    setCheckDuplicate(false)\n  }\n\n  const onChangePwd1 = (e) => {\n    setPassword1(e.target.value)\n  }\n\n  const onChangePwd2 = (e) => {\n    setPassword2(e.target.value)\n  }\n\n  // 중복확인 체크\n  const onCheckDup = () => {\n    Axios.get(\"/auth/nicknames\")\n      .then(res => {\n        const duplicate = res.data.filter(item => item.nickname === nickname)\n        // 닉네임 중복일 경우\n        if(duplicate.length > 0) {\n          alert(\"이미 사용 중인 닉네임입니다\")\n        } else {\n          setCheckDuplicate(true)\n          alert(\"사용할 수 있는 닉네임입니다\")\n        }\n      })\n  }\n\n  const onCheckEnter = (e) => {\n    if(e.key === \"Enter\") {\n      onSignup()\n    }\n  }\n\n  const onSignup = () => {\n    const variables = {\n      \"email\": email,\n      \"nickname\": nickname,\n      \"password\": password2\n    }\n\n    // 닉네임 중복확인 필수\n    if(checkDuplicate) {\n      Axios.get(`/auth/findPw/checkmail/${email}`)\n        .then(res => {\n          // 이메일 중복 없을 경우에만 회원가입 후 로그인 페이지로 이동\n          if(res.data === false) {\n            Axios.post(\"/auth/signup\", variables)\n              .then(response => {\n                history.push(\"/login\")\n              })\n          // 이메일 중복 있을 경우 alert\n          } else {\n            alert(\"사용할 수 없는 이메일입니다\")\n          }\n        })\n    // 닉네임 중복확인 안 했을 경우\n    } else {\n      alert(\"닉네임 중복확인을 해주세요\")\n    }\n  }\n\n  return (\n    <SignupDiv>\n      <h1>회원가입</h1>\n      <br />\n      <Form onKeyPress={onCheckEnter}>\n        <Form.Item\n          label=\"이메일 주소:\"\n          name=\"email\"\n          rules={[{ required: true }]}\n        >\n          <Input onChange={onChangeEmail} />\n        </Form.Item>\n        <Form.Item\n          label=\"닉네임:\"\n          name=\"nickname\"\n          rules={[{ required: true }]}\n        >\n          <div>\n            <Input onChange={onChangeNickname} />\n            <Button onClick={onCheckDup}>중복확인</Button>\n          </div>\n        </Form.Item>\n        <Form.Item\n          label=\"비밀번호(8~16자):\"\n          name=\"password1\"\n          rules={[{ required: true, min: 8, max: 16, message: '다시 입력해 주세요' }]}\n        >\n          <Input.Password value={password1} onChange={onChangePwd1} />\n        </Form.Item>\n        <Form.Item\n          label=\"비밀번호 확인(8~16자):\"\n          name=\"password2\"\n          rules={[{ required: true, min: 8, max: 16, message: '다시 입력해 주세요' }]}\n        >\n          <Input.Password value={password2} onChange={onChangePwd2}  />\n        </Form.Item>\n        <Form.Item>\n          <Button size=\"large\" onClick={onSignup}>\n            가입하기\n          </Button>\n        </Form.Item>\n      </Form>\n    </SignupDiv>\n  )\n}\n\nexport default SignupPage;\n"]},"metadata":{},"sourceType":"module"}